MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 ;
                      00025 ; Author        Date        Comment
                      00026 ; ************************************************************************
                      00027 ; E. Schlunder  07/20/2010  Software Boot Block Write Protect code 
                      00028 ;                           improved. 96KB memory size devices should
                      00029 ;                           work now.
                      00030 ; E. Schlunder  02/26/2010  Changed order of start up code so that PLLEN
                      00031 ;                           is enabled before we wait for RXD IDLE state. 
                      00032 ;                           This improves connection time/reliablity on 
                      00033 ;                           J devices.
                      00034 ; E. Schlunder  08/28/2009  Software Boot Block Write Protect option.
                      00035 ; E. Schlunder  07/09/2009  Brought back support for bootloader at 
                      00036 ;                           address 0 for hardware boot block write 
                      00037 ;                           protection on certain devices.
                      00038 ; E. Schlunder  05/07/2009  Replaced the simple checksum with a
                      00039 ;                           16-bit CCIT CRC checksum. 
                      00040 ;                           Added ReadFlashCrc command for quick verify.
                      00041 ; E. Schlunder  05/02/2009  Improved autobaud code to handle 1Mbps
                      00042 ;                           and BRG16/BRGH.
                      00043 ; E. Schlunder  05/01/2009  Added support for DEVICES.INC generated
                      00044 ;                           from Device Database tool. 
                      00045 ; E. Schlunder  04/29/2009  Added support for locating the bootloader
                      00046 ;                           at the end of program memory instead of
                      00047 ;                           the beginning. This will eventually let us
                      00048 ;                           use normal application firmware code without
                      00049 ;                           linker script modifications.
                      00050 ; E. Schlunder  04/26/2009  Optimized Config Write routine to avoid 
                      00051 ;                           re-writing values matching existing config
                      00052 ;                           data.
                      00053 ; E. Schlunder  04/24/2009  Optimized EEPROM Write routine a little bit.
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;                           Optimized FLASH Read routine to stream data
                      00055 ;                           directly from FLASH instead of using RAM
                      00056 ;                           buffer.
                      00057 ;                           Added option for faster STX acknowledgements.
                      00058 ; E. Schlunder  04/17/2009  Added code to enter bootloader mode if
                      00059 ;                           a serial break condition is detected on
                      00060 ;                           RXD as we come out of reset. This will
                      00061 ;                           make it possible to re-enter the bootloader
                      00062 ;                           even if the application firmware is missing
                      00063 ;                           code to re-enter bootloader mode.
                      00064 ;                           This also simplies the bootloader, as
                      00065 ;                           we do not need a boot flag any more.
                      00066 ; E. Schlunder  04/15/2009  Removed EOF command 8, new PC software
                      00067 ;                           does 64 byte block aligned writes at all
                      00068 ;                           times on J device, so there is no need for
                      00069 ;                           this command going forward.
                      00070 ; E. Schlunder  04/14/2009  Added a BootloadMode vector back at the 
                      00071 ;                           beginning of program memory so that user
                      00072 ;                           applications can jump back into the boot 
                      00073 ;                           loader without having to erase the boot flag.
                      00074 ; E. Schlunder  04/08/2009  Now initializes FSR2 to 0 so that the code 
                      00075 ;                           can operate under Extended Instruction Set
                      00076 ;                           mode if necessary.
                      00077 ; E. Schlunder  04/01/2009  Fixed bug in J_FLASH erase address increment.
                      00078 ;                           Added support for enabling PLL.
                      00079 ;                           Added support for inverted UART signaling.
                      00080 ;                           Added support for fixed (non-autobaud) 
                      00081 ;                           operation, helps with debugging code under ICD.
                      00082 ; E. Schlunder  03/25/2009  No longer attempts to use EEADRH on PIC18F4321.
                      00083 ;
                      00084 ; UART Bootloader for PIC18F by Ross Fosler 
                      00085 ; 09/01/2006  Modified to support PIC18xxJxx & 160k PIC18Fxxx Flash Devices
                      00086 ; 03/01/2002 ... First full implementation
                      00087 ; 03/07/2002 Changed entry method to use last byte of EEDATA.
                      00088 ;            Also removed all possible infinite loops w/ clrwdt.
                      00089 ; 03/07/2002 Added code for direct boot entry. I.E. boot vector.
                      00090 ; 03/09/2002 Changed the general packet format, removed the LEN field.
                      00091 ; 03/09/2002 Modified the erase command to do multiple row erase.
                      00092 ; 03/12/2002 Fixed write problem to CONFIG area. Write was offset by a byte.
                      00093 ; 03/15/2002 Added work around for 18F8720 tblwt*+ problem.
                      00094 ; 03/20/2002 Modified receive & parse engine to vector to autobaud on a checksum 
                      00095 ;            error since a chechsum error could likely be a communications problem.
                      00096 ; 03/22/2002 Removed clrwdt from the startup. This instruction affects the TO and 
                      00097 ;            PD flags. Removing this instruction should have no affect on code 
                      00098 ;       operation since the wdt is cleared on a reset and boot entry is always
                      00099 ;       on a reset.
                      00100 ; 03/22/2002    Modified the protocol to incorporate the autobaud as part of the 
                      00101 ;       first received <STX>. Doing this improves robustness by allowing
                      00102 ;       re-sync under any condition. Previously it was possible to enter a 
                      00103 ;       state where only a hard reset would allow re-syncing.
                      00104 ; 03/27/2002    Removed the boot vector and related code. This could lead to customer
                      00105 ;       issues. There is a very minute probability that errent code execution
                      00106 ;       could jump into the boot area and cause artificial boot entry.
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; *****************************************************************************
                      00108 #include <p18cxxx.inc>
                      00001   INCLUDE <mpasmx.inc>
                      00001         LIST
                      00002 ; mpasmx.inc  Standard Header File, Microchip Technology, Inc.
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 21 2017
                      00005 ;  MPASM PIC18LF2321 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01301         LIST
                      03715   ENDIF
                      03716  
                      03717   IFDEF __18LF25K80
                      03718     INCLUDE <p18lf25k80.inc>
                      03719   ENDIF
                      03720  
                      03721   IFDEF __18LF4420
                      03722     INCLUDE <p18lf4420.inc>
                      03723   ENDIF
                      03724  
                      03725   IFDEF __18F6622
                      03726     INCLUDE <p18f6622.inc>
                      03727   ENDIF
                      03728  
                      03729   IFDEF __18F66K22
                      03730     INCLUDE <p18f66k22.inc>
                      03731   ENDIF
                      03732  
                      03733   IFDEF __18LF8723
                      03734     INCLUDE <p18lf8723.inc>
                      03735   ENDIF
                      03736  
                      03737   IFDEF __18F2410
                      03738     INCLUDE <p18f2410.inc>
                      03739   ENDIF
                      03740  
                      03741   IFDEF __18LF248
                      03742     INCLUDE <p18lf248.inc>
                      03743   ENDIF
                      03744  
                      03745   IFDEF __MCV20USB
                      03746     INCLUDE <pmcv20usb.inc>
                      03747   ENDIF
                      03748  
                      00109 #include "configure.inc"
                      00001 ;CONFIG1H
08 16 1E 01 90 03 C0 000002     config OSC = INTIO2     ; Oscillator (Internal oscillator block, port function on RA6 and RA7)
       3 A0 03 40 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00003     config FCMEN = OFF      ; Fail-Safe Clock Monitor Enable bit (Fail-Safe Clock Monitor disabled)
                      00004     config IESO = OFF       ; Internal/External Oscillator Switchover bit (Oscillator Switchover mode di
                            sabled)
                      00005 
                      00006 ; CONFIG2L
                      00007     config PWRT = ON        ; Power-up Timer Enable bit (PWRT enabled)
                      00008     config BOR = ON         ; Brown-out Reset Enable bits (Brown-out Reset enabled in hardware only (SBO
                            REN is disabled))
                      00009     config BORV = 2         ; Brown-out Reset Voltage bits ()
                      00010 
                      00011 ; CONFIG2H
                      00012     config WDT = OFF        ; Watchdog Timer Enable bit (WDT disabled (control is placed on the SWDTEN b
                            it))
                      00013     config WDTPS = 32768    ; Watchdog Timer Postscale Select bits (1:32768)
                      00014 
                      00015 ; CONFIG3H
                      00016     config CCP2MX = RC1     ; CCP2 MUX bit (CCP2 input/output is multiplexed with RC1)
                      00017     config PBADEN = DIG     ; PORTB A/D Enable bit (PORTB<4:0> pins areconfigured as digital I/O on Rese
                            t)
                      00018     config LPT1OSC = OFF    ; Low-Power Timer1 Oscillator Enable bit (Timer1configured for higher power 
                            operation)
                      00019     config MCLRE = OFF      ; MCLR Pin Enable bit (RE3 input pin enabled; MCLR disabled)
                      00020 
                      00021 ; CONFIG4L
                      00022     config STVREN = OFF     ; Stack Full/Underflow Reset Enable bit (Stack full/underflow will not cause
                             Reset)
                      00023     config LVP = OFF        ; Single-Supply ICSP Enable bit (Single-Supply ICSP disabled)
                      00024     config BBSIZ = BB512    ; Boot Block Size Select bits
                      00025     config XINST = OFF      ; Extended Instruction Set Enable bit (Instruction set extension and Indexed
                             Addressing mode disabled (Legacy mode))
                      00026 
                      00027 ; CONFIG5L
                      00028     config CP0 = OFF        ; Code Protection bit 
                      00029     config CP1 = OFF        ; Code Protection bit 
                      00030 
                      00031 ; CONFIG5H
                      00032     config CPB = OFF        ; Boot Block Code Protection bitProtect Boot 
                      00033     config CPD = OFF        ; Data EEPROM Code Protection bit (Data EEPROM not code-protected)
                      00034 
                      00035 ; CONFIG6L
                      00036     config WRT0 = OFF       ; Write Protection bit (Block 0 not write-protected)
                      00037     config WRT1 = OFF       ; Write Protection bit (Block 1 not write-protected)
                      00038 
                      00039 ; CONFIG6H
                      00040     config WRTC = OFF       ; Configuration Register Write Protection bit (Configuration registers (3000
                            00-3000FFh) not write-protected)
                      00041     config WRTB = ON        ; Boot Block Write Protection bit (Boot block not write-protected)
                      00042     config WRTD = OFF       ; Data EEPROM Write Protection bit (Data EEPROM not write-protected)
                      00043 
                      00044 ; CONFIG7L
                      00045     config EBTR0 = OFF      ; Table Read Protection bit (Block 0 not protected from table reads executed
                             in other blocks)
                      00046     config EBTR1 = OFF      ; Table Read Protection bit (Block 1 not protected from table reads executed
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             in other blocks)
                      00047 
                      00048 ; CONFIG7H
                      00049     config EBTRB = OFF      ; Boot Block Table Read Protection bit (Boot block not protected from table 
                            reads executed in other blocks)
                      00050 
                      00110 #include "devices.inc"
                      00001 #ifdef __18F13K22
                      00002      #define DEVICEID                .634
                      00003      #define WRITE_FLASH_BLOCKSIZE   .8
                      00004      #define ERASE_FLASH_BLOCKSIZE   .64
                      00005      #define END_FLASH               0x2000
                      00006      #define END_GPR                 0x100
                      00007 #endif
                      00008 
                      00009 #ifdef __18F13K50
                      00010      #define DEVICEID                .570
                      00011      #define WRITE_FLASH_BLOCKSIZE   .8
                      00012      #define ERASE_FLASH_BLOCKSIZE   .64
                      00013      #define END_FLASH               0x2000
                      00014      #define END_GPR                 0x300
                      00015 #endif
                      00016 
                      00017 #ifdef __18F14K22
                      00018      #define DEVICEID                .633
                      00019      #define WRITE_FLASH_BLOCKSIZE   .16
                      00020      #define ERASE_FLASH_BLOCKSIZE   .64
                      00021      #define END_FLASH               0x4000
                      00022      #define END_GPR                 0x200
                      00023 #endif
                      00024 
                      00025 #ifdef __18F14K50
                      00026      #define DEVICEID                .571
                      00027      #define WRITE_FLASH_BLOCKSIZE   .16
                      00028      #define ERASE_FLASH_BLOCKSIZE   .64
                      00029      #define END_FLASH               0x4000
                      00030      #define END_GPR                 0x300
                      00031 #endif
                      00032 
                      00033 #ifdef __18F23K20
                      00034      #define DEVICEID                .263
                      00035      #define WRITE_FLASH_BLOCKSIZE   .8
                      00036      #define ERASE_FLASH_BLOCKSIZE   .64
                      00037      #define END_FLASH               0x2000
                      00038      #define END_GPR                 0x200
                      00039 #endif
                      00040 
                      00041 #ifdef __18F23K22
                      00042      #define DEVICEID                .698
                      00043      #define WRITE_FLASH_BLOCKSIZE   .64
                      00044      #define ERASE_FLASH_BLOCKSIZE   .64
                      00045      #define END_FLASH               0x2000
                      00046      #define END_GPR                 0x200
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00047 #endif
                      00048 
                      00049 #ifdef __18F24J10
                      00050      #define CONFIG_AS_FLASH
                      00051      #define DEVICEID                .232
                      00052      #define WRITE_FLASH_BLOCKSIZE   .64
                      00053      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00054      #define END_FLASH               0x4000
                      00055      #define END_GPR                 0x400
                      00056 #endif
                      00057 
                      00058 #ifdef __18F24J11
                      00059      #define CONFIG_AS_FLASH
                      00060      #define DEVICEID                .620
                      00061      #define WRITE_FLASH_BLOCKSIZE   .64
                      00062      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00063      #define END_FLASH               0x4000
                      00064      #define END_GPR                 0xEC0
                      00065 #endif
                      00066 
                      00067 #ifdef __18F24J50
                      00068      #define CONFIG_AS_FLASH
                      00069      #define DEVICEID                .608
                      00070      #define WRITE_FLASH_BLOCKSIZE   .64
                      00071      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00072      #define END_FLASH               0x4000
                      00073      #define END_GPR                 0xEC0
                      00074 #endif
                      00075 
                      00076 #ifdef __18F24K20
                      00077      #define DEVICEID                .261
                      00078      #define WRITE_FLASH_BLOCKSIZE   .32
                      00079      #define ERASE_FLASH_BLOCKSIZE   .64
                      00080      #define END_FLASH               0x4000
                      00081      #define END_GPR                 0x300
                      00082 #endif
                      00083 
                      00084 #ifdef __18F24K22
                      00085      #define DEVICEID                .690
                      00086      #define WRITE_FLASH_BLOCKSIZE   .64
                      00087      #define ERASE_FLASH_BLOCKSIZE   .64
                      00088      #define END_FLASH               0x4000
                      00089      #define END_GPR                 0x300
                      00090 #endif
                      00091 
                      00092 #ifdef __18F25J10
                      00093      #define CONFIG_AS_FLASH
                      00094      #define DEVICEID                .224
                      00095      #define WRITE_FLASH_BLOCKSIZE   .64
                      00096      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00097      #define END_FLASH               0x8000
                      00098      #define END_GPR                 0x400
                      00099 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00100 
                      00101 #ifdef __18F25J11
                      00102      #define CONFIG_AS_FLASH
                      00103      #define DEVICEID                .621
                      00104      #define WRITE_FLASH_BLOCKSIZE   .64
                      00105      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00106      #define END_FLASH               0x8000
                      00107      #define END_GPR                 0xEC0
                      00108 #endif
                      00109 
                      00110 #ifdef __18F25J50
                      00111      #define CONFIG_AS_FLASH
                      00112      #define DEVICEID                .609
                      00113      #define WRITE_FLASH_BLOCKSIZE   .64
                      00114      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00115      #define END_FLASH               0x8000
                      00116      #define END_GPR                 0xEC0
                      00117 #endif
                      00118 
                      00119 #ifdef __18F25K20
                      00120      #define DEVICEID                .259
                      00121      #define WRITE_FLASH_BLOCKSIZE   .32
                      00122      #define ERASE_FLASH_BLOCKSIZE   .64
                      00123      #define END_FLASH               0x8000
                      00124      #define END_GPR                 0x600
                      00125 #endif
                      00126 
                      00127 #ifdef __18F25K22
                      00128      #define DEVICEID                .682
                      00129      #define WRITE_FLASH_BLOCKSIZE   .64
                      00130      #define ERASE_FLASH_BLOCKSIZE   .64
                      00131      #define END_FLASH               0x8000
                      00132      #define END_GPR                 0x600
                      00133 #endif
                      00134 
                      00135 #ifdef __18F25K80
                      00136      #define DEVICEID                .780
                      00137      #define WRITE_FLASH_BLOCKSIZE   .64
                      00138      #define ERASE_FLASH_BLOCKSIZE   .64
                      00139      #define END_FLASH               0x8000
                      00140      #define END_GPR                 0xE41
                      00141 #endif
                      00142 
                      00143 #ifdef __18F26J11
                      00144      #define CONFIG_AS_FLASH
                      00145      #define DEVICEID                .622
                      00146      #define WRITE_FLASH_BLOCKSIZE   .64
                      00147      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00148      #define END_FLASH               0x10000
                      00149      #define END_GPR                 0xEC0
                      00150 #endif
                      00151 
                      00152 #ifdef __18F26J13
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00153      #define CONFIG_AS_FLASH
                      00154      #define DEVICEID                .713
                      00155      #define WRITE_FLASH_BLOCKSIZE   .64
                      00156      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00157      #define END_FLASH               0x10000
                      00158      #define END_GPR                 0xEB0
                      00159 #endif
                      00160 
                      00161 #ifdef __18F26J50
                      00162      #define CONFIG_AS_FLASH
                      00163      #define DEVICEID                .610
                      00164      #define WRITE_FLASH_BLOCKSIZE   .64
                      00165      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00166      #define END_FLASH               0x10000
                      00167      #define END_GPR                 0xEC0
                      00168 #endif
                      00169 
                      00170 #ifdef __18F26J53
                      00171      #define CONFIG_AS_FLASH
                      00172      #define DEVICEID                .705
                      00173      #define WRITE_FLASH_BLOCKSIZE   .64
                      00174      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00175      #define END_FLASH               0x10000
                      00176      #define END_GPR                 0xEB0
                      00177 #endif
                      00178 
                      00179 #ifdef __18F26K20
                      00180      #define DEVICEID                .257
                      00181      #define WRITE_FLASH_BLOCKSIZE   .64
                      00182      #define ERASE_FLASH_BLOCKSIZE   .64
                      00183      #define END_FLASH               0x10000
                      00184      #define END_GPR                 0xF60
                      00185 #endif
                      00186 
                      00187 #ifdef __18F26K22
                      00188      #define DEVICEID                .674
                      00189      #define WRITE_FLASH_BLOCKSIZE   .64
                      00190      #define ERASE_FLASH_BLOCKSIZE   .64
                      00191      #define END_FLASH               0x10000
                      00192      #define END_GPR                 0xF38
                      00193 #endif
                      00194 
                      00195 #ifdef __18F26K80
                      00196      #define DEVICEID                .777
                      00197      #define WRITE_FLASH_BLOCKSIZE   .64
                      00198      #define ERASE_FLASH_BLOCKSIZE   .64
                      00199      #define END_FLASH               0x10000
                      00200      #define END_GPR                 0xE41
                      00201 #endif
                      00202 
                      00203 #ifdef __18F27J13
                      00204      #define CONFIG_AS_FLASH
                      00205      #define DEVICEID                .715
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00206      #define WRITE_FLASH_BLOCKSIZE   .64
                      00207      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00208      #define END_FLASH               0x20000
                      00209      #define END_GPR                 0xEB0
                      00210 #endif
                      00211 
                      00212 #ifdef __18F27J53
                      00213      #define CONFIG_AS_FLASH
                      00214      #define DEVICEID                .707
                      00215      #define WRITE_FLASH_BLOCKSIZE   .64
                      00216      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00217      #define END_FLASH               0x20000
                      00218      #define END_GPR                 0xEB0
                      00219 #endif
                      00220 
                      00221 #ifdef __18F43K20
                      00222      #define DEVICEID                .262
                      00223      #define WRITE_FLASH_BLOCKSIZE   .8
                      00224      #define ERASE_FLASH_BLOCKSIZE   .64
                      00225      #define END_FLASH               0x2000
                      00226      #define END_GPR                 0x200
                      00227 #endif
                      00228 
                      00229 #ifdef __18F43K22
                      00230      #define DEVICEID                .696
                      00231      #define WRITE_FLASH_BLOCKSIZE   .64
                      00232      #define ERASE_FLASH_BLOCKSIZE   .64
                      00233      #define END_FLASH               0x2000
                      00234      #define END_GPR                 0x200
                      00235 #endif
                      00236 
                      00237 #ifdef __18F44J10
                      00238      #define CONFIG_AS_FLASH
                      00239      #define DEVICEID                .233
                      00240      #define WRITE_FLASH_BLOCKSIZE   .64
                      00241      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00242      #define END_FLASH               0x4000
                      00243      #define END_GPR                 0x400
                      00244 #endif
                      00245 
                      00246 #ifdef __18F44J11
                      00247      #define CONFIG_AS_FLASH
                      00248      #define DEVICEID                .623
                      00249      #define WRITE_FLASH_BLOCKSIZE   .64
                      00250      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00251      #define END_FLASH               0x4000
                      00252      #define END_GPR                 0xEC0
                      00253 #endif
                      00254 
                      00255 #ifdef __18F44J50
                      00256      #define CONFIG_AS_FLASH
                      00257      #define DEVICEID                .611
                      00258      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00259      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00260      #define END_FLASH               0x4000
                      00261      #define END_GPR                 0xEC0
                      00262 #endif
                      00263 
                      00264 #ifdef __18F44K20
                      00265      #define DEVICEID                .260
                      00266      #define WRITE_FLASH_BLOCKSIZE   .32
                      00267      #define ERASE_FLASH_BLOCKSIZE   .64
                      00268      #define END_FLASH               0x4000
                      00269      #define END_GPR                 0x300
                      00270 #endif
                      00271 
                      00272 #ifdef __18F44K22
                      00273      #define DEVICEID                .688
                      00274      #define WRITE_FLASH_BLOCKSIZE   .64
                      00275      #define ERASE_FLASH_BLOCKSIZE   .64
                      00276      #define END_FLASH               0x4000
                      00277      #define END_GPR                 0x300
                      00278 #endif
                      00279 
                      00280 #ifdef __18F45J10
                      00281      #define CONFIG_AS_FLASH
                      00282      #define DEVICEID                .225
                      00283      #define WRITE_FLASH_BLOCKSIZE   .64
                      00284      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00285      #define END_FLASH               0x8000
                      00286      #define END_GPR                 0x400
                      00287 #endif
                      00288 
                      00289 #ifdef __18F45J11
                      00290      #define CONFIG_AS_FLASH
                      00291      #define DEVICEID                .624
                      00292      #define WRITE_FLASH_BLOCKSIZE   .64
                      00293      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00294      #define END_FLASH               0x8000
                      00295      #define END_GPR                 0xEC0
                      00296 #endif
                      00297 
                      00298 #ifdef __18F45J50
                      00299      #define CONFIG_AS_FLASH
                      00300      #define DEVICEID                .612
                      00301      #define WRITE_FLASH_BLOCKSIZE   .64
                      00302      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00303      #define END_FLASH               0x8000
                      00304      #define END_GPR                 0xEC0
                      00305 #endif
                      00306 
                      00307 #ifdef __18F45K20
                      00308      #define DEVICEID                .258
                      00309      #define WRITE_FLASH_BLOCKSIZE   .32
                      00310      #define ERASE_FLASH_BLOCKSIZE   .64
                      00311      #define END_FLASH               0x8000
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312      #define END_GPR                 0x600
                      00313 #endif
                      00314 
                      00315 #ifdef __18F45K22
                      00316      #define DEVICEID                .680
                      00317      #define WRITE_FLASH_BLOCKSIZE   .64
                      00318      #define ERASE_FLASH_BLOCKSIZE   .64
                      00319      #define END_FLASH               0x8000
                      00320      #define END_GPR                 0x600
                      00321 #endif
                      00322 
                      00323 #ifdef __18F45K80
                      00324      #define DEVICEID                .779
                      00325      #define WRITE_FLASH_BLOCKSIZE   .64
                      00326      #define ERASE_FLASH_BLOCKSIZE   .64
                      00327      #define END_FLASH               0x8000
                      00328      #define END_GPR                 0xE41
                      00329 #endif
                      00330 
                      00331 #ifdef __18F46J11
                      00332      #define CONFIG_AS_FLASH
                      00333      #define DEVICEID                .625
                      00334      #define WRITE_FLASH_BLOCKSIZE   .64
                      00335      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00336      #define END_FLASH               0x10000
                      00337      #define END_GPR                 0xEC0
                      00338 #endif
                      00339 
                      00340 #ifdef __18F46J13
                      00341      #define CONFIG_AS_FLASH
                      00342      #define DEVICEID                .717
                      00343      #define WRITE_FLASH_BLOCKSIZE   .64
                      00344      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00345      #define END_FLASH               0x10000
                      00346      #define END_GPR                 0xEB0
                      00347 #endif
                      00348 
                      00349 #ifdef __18F46J50
                      00350      #define CONFIG_AS_FLASH
                      00351      #define DEVICEID                .613
                      00352      #define WRITE_FLASH_BLOCKSIZE   .64
                      00353      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00354      #define END_FLASH               0x10000
                      00355      #define END_GPR                 0xEC0
                      00356 #endif
                      00357 
                      00358 #ifdef __18F46J53
                      00359      #define CONFIG_AS_FLASH
                      00360      #define DEVICEID                .709
                      00361      #define WRITE_FLASH_BLOCKSIZE   .64
                      00362      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00363      #define END_FLASH               0x10000
                      00364      #define END_GPR                 0xEB0
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00365 #endif
                      00366 
                      00367 #ifdef __18F46K20
                      00368      #define DEVICEID                .256
                      00369      #define WRITE_FLASH_BLOCKSIZE   .64
                      00370      #define ERASE_FLASH_BLOCKSIZE   .64
                      00371      #define END_FLASH               0x10000
                      00372      #define END_GPR                 0xF60
                      00373 #endif
                      00374 
                      00375 #ifdef __18F46K22
                      00376      #define DEVICEID                .672
                      00377      #define WRITE_FLASH_BLOCKSIZE   .64
                      00378      #define ERASE_FLASH_BLOCKSIZE   .64
                      00379      #define END_FLASH               0x10000
                      00380      #define END_GPR                 0xF38
                      00381 #endif
                      00382 
                      00383 #ifdef __18F46K80
                      00384      #define DEVICEID                .776
                      00385      #define WRITE_FLASH_BLOCKSIZE   .64
                      00386      #define ERASE_FLASH_BLOCKSIZE   .64
                      00387      #define END_FLASH               0x10000
                      00388      #define END_GPR                 0xE41
                      00389 #endif
                      00390 
                      00391 #ifdef __18F47J13
                      00392      #define CONFIG_AS_FLASH
                      00393      #define DEVICEID                .719
                      00394      #define WRITE_FLASH_BLOCKSIZE   .64
                      00395      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00396      #define END_FLASH               0x20000
                      00397      #define END_GPR                 0xEB0
                      00398 #endif
                      00399 
                      00400 #ifdef __18F47J53
                      00401      #define CONFIG_AS_FLASH
                      00402      #define DEVICEID                .711
                      00403      #define WRITE_FLASH_BLOCKSIZE   .64
                      00404      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00405      #define END_FLASH               0x20000
                      00406      #define END_GPR                 0xEB0
                      00407 #endif
                      00408 
                      00409 #ifdef __18F63J11
                      00410      #define CONFIG_AS_FLASH
                      00411      #define DEVICEID                .456
                      00412      #define WRITE_FLASH_BLOCKSIZE   .64
                      00413      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00414      #define END_FLASH               0x2000
                      00415      #define END_GPR                 0x400
                      00416 #endif
                      00417 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00418 #ifdef __18F63J90
                      00419      #define CONFIG_AS_FLASH
                      00420      #define DEVICEID                .448
                      00421      #define WRITE_FLASH_BLOCKSIZE   .64
                      00422      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00423      #define END_FLASH               0x2000
                      00424      #define END_GPR                 0x400
                      00425 #endif
                      00426 
                      00427 #ifdef __18F64J11
                      00428      #define CONFIG_AS_FLASH
                      00429      #define DEVICEID                .457
                      00430      #define WRITE_FLASH_BLOCKSIZE   .64
                      00431      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00432      #define END_FLASH               0x4000
                      00433      #define END_GPR                 0x400
                      00434 #endif
                      00435 
                      00436 #ifdef __18F64J90
                      00437      #define CONFIG_AS_FLASH
                      00438      #define DEVICEID                .449
                      00439      #define WRITE_FLASH_BLOCKSIZE   .64
                      00440      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00441      #define END_FLASH               0x4000
                      00442      #define END_GPR                 0x400
                      00443 #endif
                      00444 
                      00445 #ifdef __18F65J10
                      00446      #define CONFIG_AS_FLASH
                      00447      #define DEVICEID                .169
                      00448      #define WRITE_FLASH_BLOCKSIZE   .64
                      00449      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00450      #define END_FLASH               0x8000
                      00451      #define END_GPR                 0x800
                      00452 #endif
                      00453 
                      00454 #ifdef __18F65J11
                      00455      #define CONFIG_AS_FLASH
                      00456      #define DEVICEID                .459
                      00457      #define WRITE_FLASH_BLOCKSIZE   .64
                      00458      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00459      #define END_FLASH               0x8000
                      00460      #define END_GPR                 0x800
                      00461 #endif
                      00462 
                      00463 #ifdef __18F65J15
                      00464      #define CONFIG_AS_FLASH
                      00465      #define DEVICEID                .170
                      00466      #define WRITE_FLASH_BLOCKSIZE   .64
                      00467      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00468      #define END_FLASH               0xC000
                      00469      #define END_GPR                 0x800
                      00470 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00471 
                      00472 #ifdef __18F65J50
                      00473      #define CONFIG_AS_FLASH
                      00474      #define DEVICEID                .520
                      00475      #define WRITE_FLASH_BLOCKSIZE   .64
                      00476      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00477      #define END_FLASH               0x8000
                      00478      #define END_GPR                 0xF40
                      00479 #endif
                      00480 
                      00481 #ifdef __18F65J90
                      00482      #define CONFIG_AS_FLASH
                      00483      #define DEVICEID                .451
                      00484      #define WRITE_FLASH_BLOCKSIZE   .64
                      00485      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00486      #define END_FLASH               0x8000
                      00487      #define END_GPR                 0x800
                      00488 #endif
                      00489 
                      00490 #ifdef __18F65K22
                      00491      #define DEVICEID                .664
                      00492      #define WRITE_FLASH_BLOCKSIZE   .64
                      00493      #define ERASE_FLASH_BLOCKSIZE   .64
                      00494      #define END_FLASH               0x8000
                      00495      #define END_GPR                 0x800
                      00496 #endif
                      00497 
                      00498 #ifdef __18F65K80
                      00499      #define DEVICEID                .778
                      00500      #define WRITE_FLASH_BLOCKSIZE   .64
                      00501      #define ERASE_FLASH_BLOCKSIZE   .64
                      00502      #define END_FLASH               0x8000
                      00503      #define END_GPR                 0xE41
                      00504 #endif
                      00505 
                      00506 #ifdef __18F65K90
                      00507      #define DEVICEID                .658
                      00508      #define WRITE_FLASH_BLOCKSIZE   .64
                      00509      #define ERASE_FLASH_BLOCKSIZE   .64
                      00510      #define END_FLASH               0x8000
                      00511      #define END_GPR                 0x800
                      00512 #endif
                      00513 
                      00514 #ifdef __18F66J10
                      00515      #define CONFIG_AS_FLASH
                      00516      #define DEVICEID                .171
                      00517      #define WRITE_FLASH_BLOCKSIZE   .64
                      00518      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00519      #define END_FLASH               0x10000
                      00520      #define END_GPR                 0x800
                      00521 #endif
                      00522 
                      00523 #ifdef __18F66J11
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00524      #define CONFIG_AS_FLASH
                      00525      #define DEVICEID                .546
                      00526      #define WRITE_FLASH_BLOCKSIZE   .64
                      00527      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00528      #define END_FLASH               0x10000
                      00529      #define END_GPR                 0xF40
                      00530 #endif
                      00531 
                      00532 #ifdef __18F66J15
                      00533      #define CONFIG_AS_FLASH
                      00534      #define DEVICEID                .172
                      00535      #define WRITE_FLASH_BLOCKSIZE   .64
                      00536      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00537      #define END_FLASH               0x18000
                      00538      #define END_GPR                 0xF60
                      00539 #endif
                      00540 
                      00541 #ifdef __18F66J16
                      00542      #define CONFIG_AS_FLASH
                      00543      #define DEVICEID                .547
                      00544      #define WRITE_FLASH_BLOCKSIZE   .64
                      00545      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00546      #define END_FLASH               0x18000
                      00547      #define END_GPR                 0xF40
                      00548 #endif
                      00549 
                      00550 #ifdef __18F66J50
                      00551      #define CONFIG_AS_FLASH
                      00552      #define DEVICEID                .522
                      00553      #define WRITE_FLASH_BLOCKSIZE   .64
                      00554      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00555      #define END_FLASH               0x10000
                      00556      #define END_GPR                 0xF40
                      00557 #endif
                      00558 
                      00559 #ifdef __18F66J55
                      00560      #define CONFIG_AS_FLASH
                      00561      #define DEVICEID                .523
                      00562      #define WRITE_FLASH_BLOCKSIZE   .64
                      00563      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00564      #define END_FLASH               0x18000
                      00565      #define END_GPR                 0xF40
                      00566 #endif
                      00567 
                      00568 #ifdef __18F66J60
                      00569      #define CONFIG_AS_FLASH
                      00570      #define DEVICEID                .192
                      00571      #define WRITE_FLASH_BLOCKSIZE   .64
                      00572      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00573      #define END_FLASH               0x10000
                      00574      #define END_GPR                 0xE80
                      00575 #endif
                      00576 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00577 #ifdef __18F66J65
                      00578      #define CONFIG_AS_FLASH
                      00579      #define DEVICEID                .248
                      00580      #define WRITE_FLASH_BLOCKSIZE   .64
                      00581      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00582      #define END_FLASH               0x18000
                      00583      #define END_GPR                 0xE80
                      00584 #endif
                      00585 
                      00586 #ifdef __18F66J90
                      00587      #define CONFIG_AS_FLASH
                      00588      #define DEVICEID                .640
                      00589      #define WRITE_FLASH_BLOCKSIZE   .64
                      00590      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00591      #define END_FLASH               0x10000
                      00592      #define END_GPR                 0xF54
                      00593 #endif
                      00594 
                      00595 #ifdef __18F66J93
                      00596      #define CONFIG_AS_FLASH
                      00597      #define DEVICEID                .642
                      00598      #define WRITE_FLASH_BLOCKSIZE   .64
                      00599      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00600      #define END_FLASH               0x10000
                      00601      #define END_GPR                 0xF54
                      00602 #endif
                      00603 
                      00604 #ifdef __18F66K22
                      00605      #define DEVICEID                .662
                      00606      #define WRITE_FLASH_BLOCKSIZE   .64
                      00607      #define ERASE_FLASH_BLOCKSIZE   .64
                      00608      #define END_FLASH               0x10000
                      00609      #define END_GPR                 0xF16
                      00610 #endif
                      00611 
                      00612 #ifdef __18F66K80
                      00613      #define DEVICEID                .775
                      00614      #define WRITE_FLASH_BLOCKSIZE   .64
                      00615      #define ERASE_FLASH_BLOCKSIZE   .64
                      00616      #define END_FLASH               0x10000
                      00617      #define END_GPR                 0xE41
                      00618 #endif
                      00619 
                      00620 #ifdef __18F66K90
                      00621      #define DEVICEID                .656
                      00622      #define WRITE_FLASH_BLOCKSIZE   .64
                      00623      #define ERASE_FLASH_BLOCKSIZE   .64
                      00624      #define END_FLASH               0x10000
                      00625      #define END_GPR                 0xEF4
                      00626 #endif
                      00627 
                      00628 #ifdef __18F67J10
                      00629      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00630      #define DEVICEID                .173
                      00631      #define WRITE_FLASH_BLOCKSIZE   .64
                      00632      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00633      #define END_FLASH               0x20000
                      00634      #define END_GPR                 0xF60
                      00635 #endif
                      00636 
                      00637 #ifdef __18F67J11
                      00638      #define CONFIG_AS_FLASH
                      00639      #define DEVICEID                .548
                      00640      #define WRITE_FLASH_BLOCKSIZE   .64
                      00641      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00642      #define END_FLASH               0x20000
                      00643      #define END_GPR                 0xF40
                      00644 #endif
                      00645 
                      00646 #ifdef __18F67J50
                      00647      #define CONFIG_AS_FLASH
                      00648      #define DEVICEID                .524
                      00649      #define WRITE_FLASH_BLOCKSIZE   .64
                      00650      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00651      #define END_FLASH               0x20000
                      00652      #define END_GPR                 0xF40
                      00653 #endif
                      00654 
                      00655 #ifdef __18F67J60
                      00656      #define CONFIG_AS_FLASH
                      00657      #define DEVICEID                .249
                      00658      #define WRITE_FLASH_BLOCKSIZE   .64
                      00659      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00660      #define END_FLASH               0x20000
                      00661      #define END_GPR                 0xE80
                      00662 #endif
                      00663 
                      00664 #ifdef __18F67J90
                      00665      #define CONFIG_AS_FLASH
                      00666      #define DEVICEID                .641
                      00667      #define WRITE_FLASH_BLOCKSIZE   .64
                      00668      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00669      #define END_FLASH               0x20000
                      00670      #define END_GPR                 0xF54
                      00671 #endif
                      00672 
                      00673 #ifdef __18F67J93
                      00674      #define CONFIG_AS_FLASH
                      00675      #define DEVICEID                .643
                      00676      #define WRITE_FLASH_BLOCKSIZE   .64
                      00677      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00678      #define END_FLASH               0x20000
                      00679      #define END_GPR                 0xF54
                      00680 #endif
                      00681 
                      00682 #ifdef __18F67K22
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00683      #define DEVICEID                .652
                      00684      #define WRITE_FLASH_BLOCKSIZE   .128
                      00685      #define ERASE_FLASH_BLOCKSIZE   .128
                      00686      #define END_FLASH               0x20000
                      00687      #define END_GPR                 0xF16
                      00688 #endif
                      00689 
                      00690 #ifdef __18F67K90
                      00691      #define DEVICEID                .648
                      00692      #define WRITE_FLASH_BLOCKSIZE   .128
                      00693      #define ERASE_FLASH_BLOCKSIZE   .128
                      00694      #define END_FLASH               0x20000
                      00695      #define END_GPR                 0xEF4
                      00696 #endif
                      00697 
                      00698 #ifdef __18F83J11
                      00699      #define CONFIG_AS_FLASH
                      00700      #define DEVICEID                .460
                      00701      #define WRITE_FLASH_BLOCKSIZE   .64
                      00702      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00703      #define END_FLASH               0x2000
                      00704      #define END_GPR                 0x400
                      00705 #endif
                      00706 
                      00707 #ifdef __18F83J90
                      00708      #define CONFIG_AS_FLASH
                      00709      #define DEVICEID                .452
                      00710      #define WRITE_FLASH_BLOCKSIZE   .64
                      00711      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00712      #define END_FLASH               0x2000
                      00713      #define END_GPR                 0x400
                      00714 #endif
                      00715 
                      00716 #ifdef __18F84J11
                      00717      #define CONFIG_AS_FLASH
                      00718      #define DEVICEID                .461
                      00719      #define WRITE_FLASH_BLOCKSIZE   .64
                      00720      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00721      #define END_FLASH               0x4000
                      00722      #define END_GPR                 0x400
                      00723 #endif
                      00724 
                      00725 #ifdef __18F84J90
                      00726      #define CONFIG_AS_FLASH
                      00727      #define DEVICEID                .453
                      00728      #define WRITE_FLASH_BLOCKSIZE   .64
                      00729      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00730      #define END_FLASH               0x4000
                      00731      #define END_GPR                 0x400
                      00732 #endif
                      00733 
                      00734 #ifdef __18F85J10
                      00735      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00736      #define DEVICEID                .175
                      00737      #define WRITE_FLASH_BLOCKSIZE   .64
                      00738      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00739      #define END_FLASH               0x8000
                      00740      #define END_GPR                 0x800
                      00741 #endif
                      00742 
                      00743 #ifdef __18F85J11
                      00744      #define CONFIG_AS_FLASH
                      00745      #define DEVICEID                .463
                      00746      #define WRITE_FLASH_BLOCKSIZE   .64
                      00747      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00748      #define END_FLASH               0x8000
                      00749      #define END_GPR                 0x800
                      00750 #endif
                      00751 
                      00752 #ifdef __18F85J15
                      00753      #define CONFIG_AS_FLASH
                      00754      #define DEVICEID                .184
                      00755      #define WRITE_FLASH_BLOCKSIZE   .64
                      00756      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00757      #define END_FLASH               0xC000
                      00758      #define END_GPR                 0x800
                      00759 #endif
                      00760 
                      00761 #ifdef __18F85J50
                      00762      #define CONFIG_AS_FLASH
                      00763      #define DEVICEID                .525
                      00764      #define WRITE_FLASH_BLOCKSIZE   .64
                      00765      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00766      #define END_FLASH               0x8000
                      00767      #define END_GPR                 0xF40
                      00768 #endif
                      00769 
                      00770 #ifdef __18F85J90
                      00771      #define CONFIG_AS_FLASH
                      00772      #define DEVICEID                .455
                      00773      #define WRITE_FLASH_BLOCKSIZE   .64
                      00774      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00775      #define END_FLASH               0x8000
                      00776      #define END_GPR                 0x800
                      00777 #endif
                      00778 
                      00779 #ifdef __18F85K22
                      00780      #define DEVICEID                .667
                      00781      #define WRITE_FLASH_BLOCKSIZE   .64
                      00782      #define ERASE_FLASH_BLOCKSIZE   .64
                      00783      #define END_FLASH               0x8000
                      00784      #define END_GPR                 0x800
                      00785 #endif
                      00786 
                      00787 #ifdef __18F85K90
                      00788      #define DEVICEID                .661
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00789      #define WRITE_FLASH_BLOCKSIZE   .64
                      00790      #define ERASE_FLASH_BLOCKSIZE   .64
                      00791      #define END_FLASH               0x8000
                      00792      #define END_GPR                 0x800
                      00793 #endif
                      00794 
                      00795 #ifdef __18F86J10
                      00796      #define CONFIG_AS_FLASH
                      00797      #define DEVICEID                .185
                      00798      #define WRITE_FLASH_BLOCKSIZE   .64
                      00799      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00800      #define END_FLASH               0x10000
                      00801      #define END_GPR                 0x800
                      00802 #endif
                      00803 
                      00804 #ifdef __18F86J11
                      00805      #define CONFIG_AS_FLASH
                      00806      #define DEVICEID                .551
                      00807      #define WRITE_FLASH_BLOCKSIZE   .64
                      00808      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00809      #define END_FLASH               0x10000
                      00810      #define END_GPR                 0xF40
                      00811 #endif
                      00812 
                      00813 #ifdef __18F86J15
                      00814      #define CONFIG_AS_FLASH
                      00815      #define DEVICEID                .186
                      00816      #define WRITE_FLASH_BLOCKSIZE   .64
                      00817      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00818      #define END_FLASH               0x18000
                      00819      #define END_GPR                 0xF60
                      00820 #endif
                      00821 
                      00822 #ifdef __18F86J16
                      00823      #define CONFIG_AS_FLASH
                      00824      #define DEVICEID                .552
                      00825      #define WRITE_FLASH_BLOCKSIZE   .64
                      00826      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00827      #define END_FLASH               0x18000
                      00828      #define END_GPR                 0xF40
                      00829 #endif
                      00830 
                      00831 #ifdef __18F86J50
                      00832      #define CONFIG_AS_FLASH
                      00833      #define DEVICEID                .527
                      00834      #define WRITE_FLASH_BLOCKSIZE   .64
                      00835      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00836      #define END_FLASH               0x10000
                      00837      #define END_GPR                 0xF40
                      00838 #endif
                      00839 
                      00840 #ifdef __18F86J55
                      00841      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00842      #define DEVICEID                .528
                      00843      #define WRITE_FLASH_BLOCKSIZE   .64
                      00844      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00845      #define END_FLASH               0x18000
                      00846      #define END_GPR                 0xF40
                      00847 #endif
                      00848 
                      00849 #ifdef __18F86J60
                      00850      #define CONFIG_AS_FLASH
                      00851      #define DEVICEID                .193
                      00852      #define WRITE_FLASH_BLOCKSIZE   .64
                      00853      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00854      #define END_FLASH               0x10000
                      00855      #define END_GPR                 0xE80
                      00856 #endif
                      00857 
                      00858 #ifdef __18F86J65
                      00859      #define CONFIG_AS_FLASH
                      00860      #define DEVICEID                .250
                      00861      #define WRITE_FLASH_BLOCKSIZE   .64
                      00862      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00863      #define END_FLASH               0x18000
                      00864      #define END_GPR                 0xE80
                      00865 #endif
                      00866 
                      00867 #ifdef __18F86J72
                      00868      #define CONFIG_AS_FLASH
                      00869      #define DEVICEID                .642
                      00870      #define WRITE_FLASH_BLOCKSIZE   .64
                      00871      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00872      #define END_FLASH               0x10000
                      00873      #define END_GPR                 0xF54
                      00874 #endif
                      00875 
                      00876 #ifdef __18F86J90
                      00877      #define CONFIG_AS_FLASH
                      00878      #define DEVICEID                .644
                      00879      #define WRITE_FLASH_BLOCKSIZE   .64
                      00880      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00881      #define END_FLASH               0x10000
                      00882      #define END_GPR                 0xF54
                      00883 #endif
                      00884 
                      00885 #ifdef __18F86J93
                      00886      #define CONFIG_AS_FLASH
                      00887      #define DEVICEID                .646
                      00888      #define WRITE_FLASH_BLOCKSIZE   .64
                      00889      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00890      #define END_FLASH               0x10000
                      00891      #define END_GPR                 0xF54
                      00892 #endif
                      00893 
                      00894 #ifdef __18F86K22
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00895      #define DEVICEID                .665
                      00896      #define WRITE_FLASH_BLOCKSIZE   .64
                      00897      #define ERASE_FLASH_BLOCKSIZE   .64
                      00898      #define END_FLASH               0x10000
                      00899      #define END_GPR                 0xF16
                      00900 #endif
                      00901 
                      00902 #ifdef __18F86K90
                      00903      #define DEVICEID                .659
                      00904      #define WRITE_FLASH_BLOCKSIZE   .64
                      00905      #define ERASE_FLASH_BLOCKSIZE   .64
                      00906      #define END_FLASH               0x10000
                      00907      #define END_GPR                 0xEF4
                      00908 #endif
                      00909 
                      00910 #ifdef __18F87J10
                      00911      #define CONFIG_AS_FLASH
                      00912      #define DEVICEID                .187
                      00913      #define WRITE_FLASH_BLOCKSIZE   .64
                      00914      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00915      #define END_FLASH               0x20000
                      00916      #define END_GPR                 0xF60
                      00917 #endif
                      00918 
                      00919 #ifdef __18F87J11
                      00920      #define CONFIG_AS_FLASH
                      00921      #define DEVICEID                .553
                      00922      #define WRITE_FLASH_BLOCKSIZE   .64
                      00923      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00924      #define END_FLASH               0x20000
                      00925      #define END_GPR                 0xF40
                      00926 #endif
                      00927 
                      00928 #ifdef __18F87J50
                      00929      #define CONFIG_AS_FLASH
                      00930      #define DEVICEID                .529
                      00931      #define WRITE_FLASH_BLOCKSIZE   .64
                      00932      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00933      #define END_FLASH               0x20000
                      00934      #define END_GPR                 0xF40
                      00935 #endif
                      00936 
                      00937 #ifdef __18F87J60
                      00938      #define CONFIG_AS_FLASH
                      00939      #define DEVICEID                .251
                      00940      #define WRITE_FLASH_BLOCKSIZE   .64
                      00941      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00942      #define END_FLASH               0x20000
                      00943      #define END_GPR                 0xE80
                      00944 #endif
                      00945 
                      00946 #ifdef __18F87J72
                      00947      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00948      #define DEVICEID                .643
                      00949      #define WRITE_FLASH_BLOCKSIZE   .64
                      00950      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00951      #define END_FLASH               0x20000
                      00952      #define END_GPR                 0xF54
                      00953 #endif
                      00954 
                      00955 #ifdef __18F87J90
                      00956      #define CONFIG_AS_FLASH
                      00957      #define DEVICEID                .645
                      00958      #define WRITE_FLASH_BLOCKSIZE   .64
                      00959      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00960      #define END_FLASH               0x20000
                      00961      #define END_GPR                 0xF54
                      00962 #endif
                      00963 
                      00964 #ifdef __18F87J93
                      00965      #define CONFIG_AS_FLASH
                      00966      #define DEVICEID                .647
                      00967      #define WRITE_FLASH_BLOCKSIZE   .64
                      00968      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00969      #define END_FLASH               0x20000
                      00970      #define END_GPR                 0xF54
                      00971 #endif
                      00972 
                      00973 #ifdef __18F87K22
                      00974      #define DEVICEID                .654
                      00975      #define WRITE_FLASH_BLOCKSIZE   .128
                      00976      #define ERASE_FLASH_BLOCKSIZE   .128
                      00977      #define END_FLASH               0x20000
                      00978      #define END_GPR                 0xF16
                      00979 #endif
                      00980 
                      00981 #ifdef __18F87K90
                      00982      #define DEVICEID                .650
                      00983      #define WRITE_FLASH_BLOCKSIZE   .128
                      00984      #define ERASE_FLASH_BLOCKSIZE   .128
                      00985      #define END_FLASH               0x20000
                      00986      #define END_GPR                 0xEF4
                      00987 #endif
                      00988 
                      00989 #ifdef __18F96J60
                      00990      #define CONFIG_AS_FLASH
                      00991      #define DEVICEID                .194
                      00992      #define WRITE_FLASH_BLOCKSIZE   .64
                      00993      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00994      #define END_FLASH               0x10000
                      00995      #define END_GPR                 0xE80
                      00996 #endif
                      00997 
                      00998 #ifdef __18F96J65
                      00999      #define CONFIG_AS_FLASH
                      01000      #define DEVICEID                .252
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01001      #define WRITE_FLASH_BLOCKSIZE   .64
                      01002      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01003      #define END_FLASH               0x18000
                      01004      #define END_GPR                 0xE80
                      01005 #endif
                      01006 
                      01007 #ifdef __18F97J60
                      01008      #define CONFIG_AS_FLASH
                      01009      #define DEVICEID                .253
                      01010      #define WRITE_FLASH_BLOCKSIZE   .64
                      01011      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01012      #define END_FLASH               0x20000
                      01013      #define END_GPR                 0xE80
                      01014 #endif
                      01015 
                      01016 #ifdef __18F242
                      01017      #define DEVICEID                .36
                      01018      #define WRITE_FLASH_BLOCKSIZE   .8
                      01019      #define ERASE_FLASH_BLOCKSIZE   .64
                      01020      #define END_FLASH               0x4000
                      01021      #define END_GPR                 0x300
                      01022 #endif
                      01023 
                      01024 #ifdef __18F248
                      01025      #define DEVICEID                .64
                      01026      #define WRITE_FLASH_BLOCKSIZE   .8
                      01027      #define ERASE_FLASH_BLOCKSIZE   .64
                      01028      #define END_FLASH               0x4000
                      01029      #define END_GPR                 0x300
                      01030 #endif
                      01031 
                      01032 #ifdef __18F252
                      01033      #define DEVICEID                .32
                      01034      #define WRITE_FLASH_BLOCKSIZE   .8
                      01035      #define ERASE_FLASH_BLOCKSIZE   .64
                      01036      #define END_FLASH               0x8000
                      01037      #define END_GPR                 0x600
                      01038 #endif
                      01039 
                      01040 #ifdef __18F258
                      01041      #define DEVICEID                .66
                      01042      #define WRITE_FLASH_BLOCKSIZE   .8
                      01043      #define ERASE_FLASH_BLOCKSIZE   .64
                      01044      #define END_FLASH               0x8000
                      01045      #define END_GPR                 0x600
                      01046 #endif
                      01047 
                      01048 #ifdef __18F442
                      01049      #define DEVICEID                .37
                      01050      #define WRITE_FLASH_BLOCKSIZE   .8
                      01051      #define ERASE_FLASH_BLOCKSIZE   .64
                      01052      #define END_FLASH               0x4000
                      01053      #define END_GPR                 0x300
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01054 #endif
                      01055 
                      01056 #ifdef __18F448
                      01057      #define DEVICEID                .65
                      01058      #define WRITE_FLASH_BLOCKSIZE   .8
                      01059      #define ERASE_FLASH_BLOCKSIZE   .64
                      01060      #define END_FLASH               0x4000
                      01061      #define END_GPR                 0x300
                      01062 #endif
                      01063 
                      01064 #ifdef __18F452
                      01065      #define DEVICEID                .33
                      01066      #define WRITE_FLASH_BLOCKSIZE   .8
                      01067      #define ERASE_FLASH_BLOCKSIZE   .64
                      01068      #define END_FLASH               0x8000
                      01069      #define END_GPR                 0x600
                      01070 #endif
                      01071 
                      01072 #ifdef __18F458
                      01073      #define DEVICEID                .67
                      01074      #define WRITE_FLASH_BLOCKSIZE   .8
                      01075      #define ERASE_FLASH_BLOCKSIZE   .64
                      01076      #define END_FLASH               0x8000
                      01077      #define END_GPR                 0x600
                      01078 #endif
                      01079 
                      01080 #ifdef __18F1220
                      01081      #define DEVICEID                .63
                      01082      #define WRITE_FLASH_BLOCKSIZE   .8
                      01083      #define ERASE_FLASH_BLOCKSIZE   .64
                      01084      #define END_FLASH               0x1000
                      01085      #define END_GPR                 0x100
                      01086 #endif
                      01087 
                      01088 #ifdef __18F1230
                      01089      #define DEVICEID                .240
                      01090      #define WRITE_FLASH_BLOCKSIZE   .8
                      01091      #define ERASE_FLASH_BLOCKSIZE   .64
                      01092      #define END_FLASH               0x1000
                      01093      #define END_GPR                 0x100
                      01094 #endif
                      01095 
                      01096 #ifdef __18F1320
                      01097      #define DEVICEID                .62
                      01098      #define WRITE_FLASH_BLOCKSIZE   .8
                      01099      #define ERASE_FLASH_BLOCKSIZE   .64
                      01100      #define END_FLASH               0x2000
                      01101      #define END_GPR                 0x100
                      01102 #endif
                      01103 
                      01104 #ifdef __18F1330
                      01105      #define DEVICEID                .241
                      01106      #define WRITE_FLASH_BLOCKSIZE   .8
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01107      #define ERASE_FLASH_BLOCKSIZE   .64
                      01108      #define END_FLASH               0x2000
                      01109      #define END_GPR                 0x100
                      01110 #endif
                      01111 
                      01112 #ifdef __18F2220
                      01113      #define DEVICEID                .44
                      01114      #define WRITE_FLASH_BLOCKSIZE   .8
                      01115      #define ERASE_FLASH_BLOCKSIZE   .64
                      01116      #define END_FLASH               0x1000
                      01117      #define END_GPR                 0x200
                      01118 #endif
                      01119 
                      01120 #ifdef __18F2221
                      01121      #define DEVICEID                .267
                      01122      #define WRITE_FLASH_BLOCKSIZE   .8
                      01123      #define ERASE_FLASH_BLOCKSIZE   .64
                      01124      #define END_FLASH               0x1000
                      01125      #define END_GPR                 0x200
                      01126 #endif
                      01127 
                      01128 #ifdef __18F2320
                      01129      #define DEVICEID                .40
                      01130      #define WRITE_FLASH_BLOCKSIZE   .8
                      01131      #define ERASE_FLASH_BLOCKSIZE   .64
                      01132      #define END_FLASH               0x2000
                      01133      #define END_GPR                 0x200
                      01134 #endif
                      01135 
                      01136 #ifdef __18F2321
                      01137      #define DEVICEID                .265
                      01138      #define WRITE_FLASH_BLOCKSIZE   .8
                      01139      #define ERASE_FLASH_BLOCKSIZE   .64
                      01140      #define END_FLASH               0x2000
                      01141      #define END_GPR                 0x200
                      01142 #endif
                      01143 
                      01144 #ifdef __18F2331
                      01145      #define DEVICEID                .71
                      01146      #define WRITE_FLASH_BLOCKSIZE   .8
                      01147      #define ERASE_FLASH_BLOCKSIZE   .64
                      01148      #define END_FLASH               0x2000
                      01149      #define END_GPR                 0x300
                      01150 #endif
                      01151 
                      01152      #ifdef __18LF2321
                      01153      #define DEVICEID                .265
                      01154      #define WRITE_FLASH_BLOCKSIZE   .8
                      01155      #define ERASE_FLASH_BLOCKSIZE   .64
                      01156      #define END_FLASH               0x2000
                      01157      #define END_GPR                 0x200
                      01158 #endif
                      01159 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01160 #ifdef __18LF2331
                      01161      #define DEVICEID                .71
                      01162      #define WRITE_FLASH_BLOCKSIZE   .8
                      01163      #define ERASE_FLASH_BLOCKSIZE   .64
                      01164      #define END_FLASH               0x2000
                      01165      #define END_GPR                 0x300
                      01166 #endif
                      01167           
                      01168 #ifdef __18F2410
                      01169      #define DEVICEID                .139
                      01170      #define WRITE_FLASH_BLOCKSIZE   .32
                      01171      #define ERASE_FLASH_BLOCKSIZE   .64
                      01172      #define END_FLASH               0x4000
                      01173      #define END_GPR                 0x300
                      01174 #endif
                      01175 
                      01176 #ifdef __18F2420
                      01177      #define DEVICEID                .138
                      01178      #define WRITE_FLASH_BLOCKSIZE   .32
                      01179      #define ERASE_FLASH_BLOCKSIZE   .64
                      01180      #define END_FLASH               0x4000
                      01181      #define END_GPR                 0x300
                      01182 #endif
                      01183 
                      01184 #ifdef __18F2423
                      01185      #define DEVICEID                .277
                      01186      #define WRITE_FLASH_BLOCKSIZE   .32
                      01187      #define ERASE_FLASH_BLOCKSIZE   .64
                      01188      #define END_FLASH               0x4000
                      01189      #define END_GPR                 0x300
                      01190 #endif
                      01191 
                      01192 #ifdef __18F2431
                      01193      #define DEVICEID                .70
                      01194      #define WRITE_FLASH_BLOCKSIZE   .8
                      01195      #define ERASE_FLASH_BLOCKSIZE   .64
                      01196      #define END_FLASH               0x4000
                      01197      #define END_GPR                 0x300
                      01198 #endif
                      01199 
                      01200 #ifdef __18F2439
                      01201      #define DEVICEID                .36
                      01202      #define WRITE_FLASH_BLOCKSIZE   .8
                      01203      #define ERASE_FLASH_BLOCKSIZE   .64
                      01204      #define END_FLASH               0x3000
                      01205      #define END_GPR                 0x280
                      01206 #endif
                      01207 
                      01208 #ifdef __18F2450
                      01209      #define DEVICEID                .289
                      01210      #define WRITE_FLASH_BLOCKSIZE   .16
                      01211      #define ERASE_FLASH_BLOCKSIZE   .64
                      01212      #define END_FLASH               0x4000
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01213      #define END_GPR                 0x500
                      01214 #endif
                      01215 
                      01216 #ifdef __18F2455
                      01217      #define DEVICEID                .147
                      01218      #define WRITE_FLASH_BLOCKSIZE   .32
                      01219      #define ERASE_FLASH_BLOCKSIZE   .64
                      01220      #define END_FLASH               0x6000
                      01221      #define END_GPR                 0x800
                      01222 #endif
                      01223 
                      01224 #ifdef __18F2458
                      01225      #define DEVICEID                .339
                      01226      #define WRITE_FLASH_BLOCKSIZE   .32
                      01227      #define ERASE_FLASH_BLOCKSIZE   .64
                      01228      #define END_FLASH               0x6000
                      01229      #define END_GPR                 0x800
                      01230 #endif
                      01231 
                      01232 #ifdef __18F2480
                      01233      #define DEVICEID                .215
                      01234      #define WRITE_FLASH_BLOCKSIZE   .32
                      01235      #define ERASE_FLASH_BLOCKSIZE   .64
                      01236      #define END_FLASH               0x4000
                      01237      #define END_GPR                 0x300
                      01238 #endif
                      01239 
                      01240 #ifdef __18F2510
                      01241      #define DEVICEID                .137
                      01242      #define WRITE_FLASH_BLOCKSIZE   .32
                      01243      #define ERASE_FLASH_BLOCKSIZE   .64
                      01244      #define END_FLASH               0x8000
                      01245      #define END_GPR                 0x600
                      01246 #endif
                      01247 
                      01248 #ifdef __18F2515
                      01249      #define DEVICEID                .103
                      01250      #define WRITE_FLASH_BLOCKSIZE   .64
                      01251      #define ERASE_FLASH_BLOCKSIZE   .64
                      01252      #define END_FLASH               0xC000
                      01253      #define END_GPR                 0xF80
                      01254 #endif
                      01255 
                      01256 #ifdef __18F2520
                      01257      #define DEVICEID                .136
                      01258      #define WRITE_FLASH_BLOCKSIZE   .32
                      01259      #define ERASE_FLASH_BLOCKSIZE   .64
                      01260      #define END_FLASH               0x8000
                      01261      #define END_GPR                 0x600
                      01262 #endif
                      01263 
                      01264 #ifdef __18F2523
                      01265      #define DEVICEID                .273
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01266      #define WRITE_FLASH_BLOCKSIZE   .32
                      01267      #define ERASE_FLASH_BLOCKSIZE   .64
                      01268      #define END_FLASH               0x8000
                      01269      #define END_GPR                 0x600
                      01270 #endif
                      01271 
                      01272 #ifdef __18F2525
                      01273      #define DEVICEID                .102
                      01274      #define WRITE_FLASH_BLOCKSIZE   .64
                      01275      #define ERASE_FLASH_BLOCKSIZE   .64
                      01276      #define END_FLASH               0xC000
                      01277      #define END_GPR                 0xF80
                      01278 #endif
                      01279 
                      01280 #ifdef __18F2539
                      01281      #define DEVICEID                .32
                      01282      #define WRITE_FLASH_BLOCKSIZE   .8
                      01283      #define ERASE_FLASH_BLOCKSIZE   .64
                      01284      #define END_FLASH               0x6000
                      01285      #define END_GPR                 0x580
                      01286 #endif
                      01287 
                      01288 #ifdef __18F2550
                      01289      #define DEVICEID                .146
                      01290      #define WRITE_FLASH_BLOCKSIZE   .32
                      01291      #define ERASE_FLASH_BLOCKSIZE   .64
                      01292      #define END_FLASH               0x8000
                      01293      #define END_GPR                 0x800
                      01294 #endif
                      01295 
                      01296 #ifdef __18F2553
                      01297      #define DEVICEID                .338
                      01298      #define WRITE_FLASH_BLOCKSIZE   .32
                      01299      #define ERASE_FLASH_BLOCKSIZE   .64
                      01300      #define END_FLASH               0x8000
                      01301      #define END_GPR                 0x800
                      01302 #endif
                      01303 
                      01304 #ifdef __18F2580
                      01305      #define DEVICEID                .214
                      01306      #define WRITE_FLASH_BLOCKSIZE   .32
                      01307      #define ERASE_FLASH_BLOCKSIZE   .64
                      01308      #define END_FLASH               0x8000
                      01309      #define END_GPR                 0x600
                      01310 #endif
                      01311 
                      01312 #ifdef __18F2585
                      01313      #define DEVICEID                .119
                      01314      #define WRITE_FLASH_BLOCKSIZE   .64
                      01315      #define ERASE_FLASH_BLOCKSIZE   .64
                      01316      #define END_FLASH               0xC000
                      01317      #define END_GPR                 0xD00
                      01318 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01319 
                      01320 #ifdef __18F2610
                      01321      #define DEVICEID                .101
                      01322      #define WRITE_FLASH_BLOCKSIZE   .64
                      01323      #define ERASE_FLASH_BLOCKSIZE   .64
                      01324      #define END_FLASH               0x10000
                      01325      #define END_GPR                 0xF80
                      01326 #endif
                      01327 
                      01328 #ifdef __18F2620
                      01329      #define DEVICEID                .100
                      01330      #define WRITE_FLASH_BLOCKSIZE   .64
                      01331      #define ERASE_FLASH_BLOCKSIZE   .64
                      01332      #define END_FLASH               0x10000
                      01333      #define END_GPR                 0xF80
                      01334 #endif
                      01335 
                      01336 #ifdef __18F2680
                      01337      #define DEVICEID                .118
                      01338      #define WRITE_FLASH_BLOCKSIZE   .64
                      01339      #define ERASE_FLASH_BLOCKSIZE   .64
                      01340      #define END_FLASH               0x10000
                      01341      #define END_GPR                 0xD00
                      01342 #endif
                      01343 
                      01344 #ifdef __18F2682
                      01345      #define DEVICEID                .312
                      01346      #define WRITE_FLASH_BLOCKSIZE   .64
                      01347      #define ERASE_FLASH_BLOCKSIZE   .64
                      01348      #define END_FLASH               0x14000
                      01349      #define END_GPR                 0xD00
                      01350 #endif
                      01351 
                      01352 #ifdef __18F2685
                      01353      #define DEVICEID                .313
                      01354      #define WRITE_FLASH_BLOCKSIZE   .64
                      01355      #define ERASE_FLASH_BLOCKSIZE   .64
                      01356      #define END_FLASH               0x18000
                      01357      #define END_GPR                 0xD00
                      01358 #endif
                      01359 
                      01360 #ifdef __18F4220
                      01361      #define DEVICEID                .45
                      01362      #define WRITE_FLASH_BLOCKSIZE   .8
                      01363      #define ERASE_FLASH_BLOCKSIZE   .64
                      01364      #define END_FLASH               0x1000
                      01365      #define END_GPR                 0x200
                      01366 #endif
                      01367 
                      01368 #ifdef __18F4221
                      01369      #define DEVICEID                .266
                      01370      #define WRITE_FLASH_BLOCKSIZE   .8
                      01371      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01372      #define END_FLASH               0x1000
                      01373      #define END_GPR                 0x200
                      01374 #endif
                      01375 
                      01376 #ifdef __18F4320
                      01377      #define DEVICEID                .41
                      01378      #define WRITE_FLASH_BLOCKSIZE   .8
                      01379      #define ERASE_FLASH_BLOCKSIZE   .64
                      01380      #define END_FLASH               0x2000
                      01381      #define END_GPR                 0x200
                      01382 #endif
                      01383 
                      01384 #ifdef __18F4321
                      01385      #define DEVICEID                .264
                      01386      #define WRITE_FLASH_BLOCKSIZE   .8
                      01387      #define ERASE_FLASH_BLOCKSIZE   .64
                      01388      #define END_FLASH               0x2000
                      01389      #define END_GPR                 0x200
                      01390 #endif
                      01391 
                      01392 #ifdef __18F4331
                      01393      #define DEVICEID                .69
                      01394      #define WRITE_FLASH_BLOCKSIZE   .8
                      01395      #define ERASE_FLASH_BLOCKSIZE   .64
                      01396      #define END_FLASH               0x2000
                      01397      #define END_GPR                 0x300
                      01398 #endif
                      01399 
                      01400 #ifdef __18F4410
                      01401      #define DEVICEID                .135
                      01402      #define WRITE_FLASH_BLOCKSIZE   .32
                      01403      #define ERASE_FLASH_BLOCKSIZE   .64
                      01404      #define END_FLASH               0x4000
                      01405      #define END_GPR                 0x300
                      01406 #endif
                      01407 
                      01408 #ifdef __18F4420
                      01409      #define DEVICEID                .134
                      01410      #define WRITE_FLASH_BLOCKSIZE   .32
                      01411      #define ERASE_FLASH_BLOCKSIZE   .64
                      01412      #define END_FLASH               0x4000
                      01413      #define END_GPR                 0x300
                      01414 #endif
                      01415 
                      01416 #ifdef __18F4423
                      01417      #define DEVICEID                .269
                      01418      #define WRITE_FLASH_BLOCKSIZE   .32
                      01419      #define ERASE_FLASH_BLOCKSIZE   .64
                      01420      #define END_FLASH               0x4000
                      01421      #define END_GPR                 0x300
                      01422 #endif
                      01423 
                      01424 #ifdef __18F4431
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01425      #define DEVICEID                .68
                      01426      #define WRITE_FLASH_BLOCKSIZE   .8
                      01427      #define ERASE_FLASH_BLOCKSIZE   .64
                      01428      #define END_FLASH               0x4000
                      01429      #define END_GPR                 0x300
                      01430 #endif
                      01431 
                      01432 #ifdef __18F4439
                      01433      #define DEVICEID                .37
                      01434      #define WRITE_FLASH_BLOCKSIZE   .8
                      01435      #define ERASE_FLASH_BLOCKSIZE   .64
                      01436      #define END_FLASH               0x3000
                      01437      #define END_GPR                 0x280
                      01438 #endif
                      01439 
                      01440 #ifdef __18F4450
                      01441      #define DEVICEID                .288
                      01442      #define WRITE_FLASH_BLOCKSIZE   .16
                      01443      #define ERASE_FLASH_BLOCKSIZE   .64
                      01444      #define END_FLASH               0x4000
                      01445      #define END_GPR                 0x500
                      01446 #endif
                      01447 
                      01448 #ifdef __18F4455
                      01449      #define DEVICEID                .145
                      01450      #define WRITE_FLASH_BLOCKSIZE   .32
                      01451      #define ERASE_FLASH_BLOCKSIZE   .64
                      01452      #define END_FLASH               0x6000
                      01453      #define END_GPR                 0x800
                      01454 #endif
                      01455 
                      01456 #ifdef __18F4458
                      01457      #define DEVICEID                .337
                      01458      #define WRITE_FLASH_BLOCKSIZE   .32
                      01459      #define ERASE_FLASH_BLOCKSIZE   .64
                      01460      #define END_FLASH               0x6000
                      01461      #define END_GPR                 0x800
                      01462 #endif
                      01463 
                      01464 #ifdef __18F4480
                      01465      #define DEVICEID                .213
                      01466      #define WRITE_FLASH_BLOCKSIZE   .32
                      01467      #define ERASE_FLASH_BLOCKSIZE   .64
                      01468      #define END_FLASH               0x4000
                      01469      #define END_GPR                 0x300
                      01470 #endif
                      01471 
                      01472 #ifdef __18F4510
                      01473      #define DEVICEID                .133
                      01474      #define WRITE_FLASH_BLOCKSIZE   .32
                      01475      #define ERASE_FLASH_BLOCKSIZE   .64
                      01476      #define END_FLASH               0x8000
                      01477      #define END_GPR                 0x600
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01478 #endif
                      01479 
                      01480 #ifdef __18F4515
                      01481      #define DEVICEID                .99
                      01482      #define WRITE_FLASH_BLOCKSIZE   .64
                      01483      #define ERASE_FLASH_BLOCKSIZE   .64
                      01484      #define END_FLASH               0xC000
                      01485      #define END_GPR                 0xF80
                      01486 #endif
                      01487 
                      01488 #ifdef __18F4520
                      01489      #define DEVICEID                .132
                      01490      #define WRITE_FLASH_BLOCKSIZE   .32
                      01491      #define ERASE_FLASH_BLOCKSIZE   .64
                      01492      #define END_FLASH               0x8000
                      01493      #define END_GPR                 0x600
                      01494 #endif
                      01495 
                      01496 #ifdef __18F4523
                      01497      #define DEVICEID                .265
                      01498      #define WRITE_FLASH_BLOCKSIZE   .32
                      01499      #define ERASE_FLASH_BLOCKSIZE   .64
                      01500      #define END_FLASH               0x8000
                      01501      #define END_GPR                 0x600
                      01502 #endif
                      01503 
                      01504 #ifdef __18F4525
                      01505      #define DEVICEID                .98
                      01506      #define WRITE_FLASH_BLOCKSIZE   .64
                      01507      #define ERASE_FLASH_BLOCKSIZE   .64
                      01508      #define END_FLASH               0xC000
                      01509      #define END_GPR                 0xF80
                      01510 #endif
                      01511 
                      01512 #ifdef __18F4539
                      01513      #define DEVICEID                .33
                      01514      #define WRITE_FLASH_BLOCKSIZE   .8
                      01515      #define ERASE_FLASH_BLOCKSIZE   .64
                      01516      #define END_FLASH               0x6000
                      01517      #define END_GPR                 0x580
                      01518 #endif
                      01519 
                      01520 #ifdef __18F4550
                      01521      #define DEVICEID                .144
                      01522      #define WRITE_FLASH_BLOCKSIZE   .32
                      01523      #define ERASE_FLASH_BLOCKSIZE   .64
                      01524      #define END_FLASH               0x8000
                      01525      #define END_GPR                 0x800
                      01526 #endif
                      01527 
                      01528 #ifdef __18F4553
                      01529      #define DEVICEID                .336
                      01530      #define WRITE_FLASH_BLOCKSIZE   .32
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01531      #define ERASE_FLASH_BLOCKSIZE   .64
                      01532      #define END_FLASH               0x8000
                      01533      #define END_GPR                 0x800
                      01534 #endif
                      01535 
                      01536 #ifdef __18F4580
                      01537      #define DEVICEID                .212
                      01538      #define WRITE_FLASH_BLOCKSIZE   .32
                      01539      #define ERASE_FLASH_BLOCKSIZE   .64
                      01540      #define END_FLASH               0x8000
                      01541      #define END_GPR                 0x600
                      01542 #endif
                      01543 
                      01544 #ifdef __18F4585
                      01545      #define DEVICEID                .117
                      01546      #define WRITE_FLASH_BLOCKSIZE   .64
                      01547      #define ERASE_FLASH_BLOCKSIZE   .64
                      01548      #define END_FLASH               0xC000
                      01549      #define END_GPR                 0xD00
                      01550 #endif
                      01551 
                      01552 #ifdef __18F4610
                      01553      #define DEVICEID                .97
                      01554      #define WRITE_FLASH_BLOCKSIZE   .64
                      01555      #define ERASE_FLASH_BLOCKSIZE   .64
                      01556      #define END_FLASH               0x10000
                      01557      #define END_GPR                 0xF80
                      01558 #endif
                      01559 
                      01560 #ifdef __18F4620
                      01561      #define DEVICEID                .96
                      01562      #define WRITE_FLASH_BLOCKSIZE   .64
                      01563      #define ERASE_FLASH_BLOCKSIZE   .64
                      01564      #define END_FLASH               0x10000
                      01565      #define END_GPR                 0xF80
                      01566 #endif
                      01567 
                      01568 #ifdef __18F4680
                      01569      #define DEVICEID                .116
                      01570      #define WRITE_FLASH_BLOCKSIZE   .64
                      01571      #define ERASE_FLASH_BLOCKSIZE   .64
                      01572      #define END_FLASH               0x10000
                      01573      #define END_GPR                 0xD00
                      01574 #endif
                      01575 
                      01576 #ifdef __18F4682
                      01577      #define DEVICEID                .314
                      01578      #define WRITE_FLASH_BLOCKSIZE   .64
                      01579      #define ERASE_FLASH_BLOCKSIZE   .64
                      01580      #define END_FLASH               0x14000
                      01581      #define END_GPR                 0xD00
                      01582 #endif
                      01583 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01584 #ifdef __18F4685
                      01585      #define DEVICEID                .315
                      01586      #define WRITE_FLASH_BLOCKSIZE   .64
                      01587      #define ERASE_FLASH_BLOCKSIZE   .64
                      01588      #define END_FLASH               0x18000
                      01589      #define END_GPR                 0xD00
                      01590 #endif
                      01591 
                      01592 ; PIC18F6310 does not support self-programming.
                      01593 ; PIC18F6390 does not support self-programming.
                      01594 ; PIC18F6393 does not support self-programming.
                      01595 ; PIC18F6410 does not support self-programming.
                      01596 ; PIC18F6490 does not support self-programming.
                      01597 ; PIC18F6493 does not support self-programming.
                      01598 #ifdef __18F6520
                      01599      #define DEVICEID                .89
                      01600      #define WRITE_FLASH_BLOCKSIZE   .8
                      01601      #define ERASE_FLASH_BLOCKSIZE   .64
                      01602      #define END_FLASH               0x8000
                      01603      #define END_GPR                 0x800
                      01604 #endif
                      01605 
                      01606 #ifdef __18F6525
                      01607      #define DEVICEID                .87
                      01608      #define WRITE_FLASH_BLOCKSIZE   .8
                      01609      #define ERASE_FLASH_BLOCKSIZE   .64
                      01610      #define END_FLASH               0xC000
                      01611      #define END_GPR                 0xF00
                      01612 #endif
                      01613 
                      01614 #ifdef __18F6527
                      01615      #define DEVICEID                .154
                      01616      #define WRITE_FLASH_BLOCKSIZE   .64
                      01617      #define ERASE_FLASH_BLOCKSIZE   .64
                      01618      #define END_FLASH               0xC000
                      01619      #define END_GPR                 0xF60
                      01620 #endif
                      01621 
                      01622 #ifdef __18F6585
                      01623      #define DEVICEID                .83
                      01624      #define WRITE_FLASH_BLOCKSIZE   .8
                      01625      #define ERASE_FLASH_BLOCKSIZE   .64
                      01626      #define END_FLASH               0xC000
                      01627      #define END_GPR                 0xD00
                      01628 #endif
                      01629 
                      01630 #ifdef __18F6620
                      01631      #define DEVICEID                .51
                      01632      #define WRITE_FLASH_BLOCKSIZE   .8
                      01633      #define ERASE_FLASH_BLOCKSIZE   .64
                      01634      #define END_FLASH               0x10000
                      01635      #define END_GPR                 0xF00
                      01636 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01637 
                      01638 #ifdef __18F6621
                      01639      #define DEVICEID                .85
                      01640      #define WRITE_FLASH_BLOCKSIZE   .8
                      01641      #define ERASE_FLASH_BLOCKSIZE   .64
                      01642      #define END_FLASH               0x10000
                      01643      #define END_GPR                 0xF00
                      01644 #endif
                      01645 
                      01646 #ifdef __18F6622
                      01647      #define DEVICEID                .156
                      01648      #define WRITE_FLASH_BLOCKSIZE   .64
                      01649      #define ERASE_FLASH_BLOCKSIZE   .64
                      01650      #define END_FLASH               0x10000
                      01651      #define END_GPR                 0xF60
                      01652 #endif
                      01653 
                      01654 #ifdef __18F6627
                      01655      #define DEVICEID                .158
                      01656      #define WRITE_FLASH_BLOCKSIZE   .64
                      01657      #define ERASE_FLASH_BLOCKSIZE   .64
                      01658      #define END_FLASH               0x18000
                      01659      #define END_GPR                 0xF60
                      01660 #endif
                      01661 
                      01662 #ifdef __18F6628
                      01663      #define DEVICEID                .590
                      01664      #define WRITE_FLASH_BLOCKSIZE   .64
                      01665      #define ERASE_FLASH_BLOCKSIZE   .64
                      01666      #define END_FLASH               0x18000
                      01667      #define END_GPR                 0xF60
                      01668 #endif
                      01669 
                      01670 #ifdef __18F6680
                      01671      #define DEVICEID                .81
                      01672      #define WRITE_FLASH_BLOCKSIZE   .8
                      01673      #define ERASE_FLASH_BLOCKSIZE   .64
                      01674      #define END_FLASH               0x10000
                      01675      #define END_GPR                 0xD00
                      01676 #endif
                      01677 
                      01678 #ifdef __18F6720
                      01679      #define DEVICEID                .49
                      01680      #define WRITE_FLASH_BLOCKSIZE   .8
                      01681      #define ERASE_FLASH_BLOCKSIZE   .64
                      01682      #define END_FLASH               0x20000
                      01683      #define END_GPR                 0xF00
                      01684 #endif
                      01685 
                      01686 #ifdef __18F6722
                      01687      #define DEVICEID                .160
                      01688      #define WRITE_FLASH_BLOCKSIZE   .64
                      01689      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01690      #define END_FLASH               0x20000
                      01691      #define END_GPR                 0xF60
                      01692 #endif
                      01693 
                      01694 #ifdef __18F6723
                      01695      #define DEVICEID                .592
                      01696      #define WRITE_FLASH_BLOCKSIZE   .64
                      01697      #define ERASE_FLASH_BLOCKSIZE   .64
                      01698      #define END_FLASH               0x20000
                      01699      #define END_GPR                 0xF60
                      01700 #endif
                      01701 
                      01702 ; PIC18F8310 does not support self-programming.
                      01703 ; PIC18F8390 does not support self-programming.
                      01704 ; PIC18F8393 does not support self-programming.
                      01705 ; PIC18F8410 does not support self-programming.
                      01706 ; PIC18F8490 does not support self-programming.
                      01707 ; PIC18F8493 does not support self-programming.
                      01708 #ifdef __18F8520
                      01709      #define DEVICEID                .88
                      01710      #define WRITE_FLASH_BLOCKSIZE   .8
                      01711      #define ERASE_FLASH_BLOCKSIZE   .64
                      01712      #define END_FLASH               0x8000
                      01713      #define END_GPR                 0x800
                      01714 #endif
                      01715 
                      01716 #ifdef __18F8525
                      01717      #define DEVICEID                .86
                      01718      #define WRITE_FLASH_BLOCKSIZE   .8
                      01719      #define ERASE_FLASH_BLOCKSIZE   .64
                      01720      #define END_FLASH               0xC000
                      01721      #define END_GPR                 0xF00
                      01722 #endif
                      01723 
                      01724 #ifdef __18F8527
                      01725      #define DEVICEID                .155
                      01726      #define WRITE_FLASH_BLOCKSIZE   .64
                      01727      #define ERASE_FLASH_BLOCKSIZE   .64
                      01728      #define END_FLASH               0xC000
                      01729      #define END_GPR                 0xF60
                      01730 #endif
                      01731 
                      01732 #ifdef __18F8585
                      01733      #define DEVICEID                .82
                      01734      #define WRITE_FLASH_BLOCKSIZE   .8
                      01735      #define ERASE_FLASH_BLOCKSIZE   .64
                      01736      #define END_FLASH               0xC000
                      01737      #define END_GPR                 0xD00
                      01738 #endif
                      01739 
                      01740 #ifdef __18F8620
                      01741      #define DEVICEID                .50
                      01742      #define WRITE_FLASH_BLOCKSIZE   .8
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01743      #define ERASE_FLASH_BLOCKSIZE   .64
                      01744      #define END_FLASH               0x10000
                      01745      #define END_GPR                 0xF00
                      01746 #endif
                      01747 
                      01748 #ifdef __18F8621
                      01749      #define DEVICEID                .84
                      01750      #define WRITE_FLASH_BLOCKSIZE   .8
                      01751      #define ERASE_FLASH_BLOCKSIZE   .64
                      01752      #define END_FLASH               0x10000
                      01753      #define END_GPR                 0xF00
                      01754 #endif
                      01755 
                      01756 #ifdef __18F8622
                      01757      #define DEVICEID                .157
                      01758      #define WRITE_FLASH_BLOCKSIZE   .64
                      01759      #define ERASE_FLASH_BLOCKSIZE   .64
                      01760      #define END_FLASH               0x10000
                      01761      #define END_GPR                 0xF60
                      01762 #endif
                      01763 
                      01764 #ifdef __18F8627
                      01765      #define DEVICEID                .159
                      01766      #define WRITE_FLASH_BLOCKSIZE   .64
                      01767      #define ERASE_FLASH_BLOCKSIZE   .64
                      01768      #define END_FLASH               0x18000
                      01769      #define END_GPR                 0xF60
                      01770 #endif
                      01771 
                      01772 #ifdef __18F8628
                      01773      #define DEVICEID                .591
                      01774      #define WRITE_FLASH_BLOCKSIZE   .64
                      01775      #define ERASE_FLASH_BLOCKSIZE   .64
                      01776      #define END_FLASH               0x18000
                      01777      #define END_GPR                 0xF60
                      01778 #endif
                      01779 
                      01780 #ifdef __18F8680
                      01781      #define DEVICEID                .80
                      01782      #define WRITE_FLASH_BLOCKSIZE   .8
                      01783      #define ERASE_FLASH_BLOCKSIZE   .64
                      01784      #define END_FLASH               0x10000
                      01785      #define END_GPR                 0xD00
                      01786 #endif
                      01787 
                      01788 #ifdef __18F8720
                      01789      #define DEVICEID                .48
                      01790      #define WRITE_FLASH_BLOCKSIZE   .8
                      01791      #define ERASE_FLASH_BLOCKSIZE   .64
                      01792      #define END_FLASH               0x20000
                      01793      #define END_GPR                 0xF00
                      01794 #endif
                      01795 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01796 #ifdef __18F8722
                      01797      #define DEVICEID                .161
                      01798      #define WRITE_FLASH_BLOCKSIZE   .64
                      01799      #define ERASE_FLASH_BLOCKSIZE   .64
                      01800      #define END_FLASH               0x20000
                      01801      #define END_GPR                 0xF60
                      01802 #endif
                      01803 
                      01804 #ifdef __18F8723
                      01805      #define DEVICEID                .593
                      01806      #define WRITE_FLASH_BLOCKSIZE   .64
                      01807      #define ERASE_FLASH_BLOCKSIZE   .64
                      01808      #define END_FLASH               0x20000
                      01809      #define END_GPR                 0xF60
                      01810 #endif
                      01811 
                      01812 #ifdef __18LF13K22
                      01813      #define DEVICEID                .636
                      01814      #define WRITE_FLASH_BLOCKSIZE   .8
                      01815      #define ERASE_FLASH_BLOCKSIZE   .64
                      01816      #define END_FLASH               0x2000
                      01817      #define END_GPR                 0x100
                      01818 #endif
                      01819 
                      01820 #ifdef __18LF13K50
                      01821      #define DEVICEID                .568
                      01822      #define WRITE_FLASH_BLOCKSIZE   .8
                      01823      #define ERASE_FLASH_BLOCKSIZE   .64
                      01824      #define END_FLASH               0x2000
                      01825      #define END_GPR                 0x300
                      01826 #endif
                      01827 
                      01828 #ifdef __18LF14K22
                      01829      #define DEVICEID                .635
                      01830      #define WRITE_FLASH_BLOCKSIZE   .16
                      01831      #define ERASE_FLASH_BLOCKSIZE   .64
                      01832      #define END_FLASH               0x4000
                      01833      #define END_GPR                 0x200
                      01834 #endif
                      01835 
                      01836 #ifdef __18LF14K50
                      01837      #define DEVICEID                .569
                      01838      #define WRITE_FLASH_BLOCKSIZE   .16
                      01839      #define ERASE_FLASH_BLOCKSIZE   .64
                      01840      #define END_FLASH               0x4000
                      01841      #define END_GPR                 0x300
                      01842 #endif
                      01843 
                      01844 #ifdef __18LF23K22
                      01845      #define DEVICEID                .699
                      01846      #define WRITE_FLASH_BLOCKSIZE   .64
                      01847      #define ERASE_FLASH_BLOCKSIZE   .64
                      01848      #define END_FLASH               0x2000
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01849      #define END_GPR                 0x200
                      01850 #endif
                      01851 
                      01852 #ifdef __18LF24J10
                      01853      #define CONFIG_AS_FLASH
                      01854      #define DEVICEID                .234
                      01855      #define WRITE_FLASH_BLOCKSIZE   .64
                      01856      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01857      #define END_FLASH               0x4000
                      01858      #define END_GPR                 0x400
                      01859 #endif
                      01860 
                      01861 #ifdef __18LF24J11
                      01862      #define CONFIG_AS_FLASH
                      01863      #define DEVICEID                .626
                      01864      #define WRITE_FLASH_BLOCKSIZE   .64
                      01865      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01866      #define END_FLASH               0x4000
                      01867      #define END_GPR                 0xEC0
                      01868 #endif
                      01869 
                      01870 #ifdef __18LF24J50
                      01871      #define CONFIG_AS_FLASH
                      01872      #define DEVICEID                .614
                      01873      #define WRITE_FLASH_BLOCKSIZE   .64
                      01874      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01875      #define END_FLASH               0x4000
                      01876      #define END_GPR                 0xEC0
                      01877 #endif
                      01878 
                      01879 #ifdef __18LF24K22
                      01880      #define DEVICEID                .691
                      01881      #define WRITE_FLASH_BLOCKSIZE   .64
                      01882      #define ERASE_FLASH_BLOCKSIZE   .64
                      01883      #define END_FLASH               0x4000
                      01884      #define END_GPR                 0x300
                      01885 #endif
                      01886 
                      01887 #ifdef __18LF25J10
                      01888      #define CONFIG_AS_FLASH
                      01889      #define DEVICEID                .226
                      01890      #define WRITE_FLASH_BLOCKSIZE   .64
                      01891      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01892      #define END_FLASH               0x8000
                      01893      #define END_GPR                 0x400
                      01894 #endif
                      01895 
                      01896 #ifdef __18LF25J11
                      01897      #define CONFIG_AS_FLASH
                      01898      #define DEVICEID                .627
                      01899      #define WRITE_FLASH_BLOCKSIZE   .64
                      01900      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01901      #define END_FLASH               0x8000
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01902      #define END_GPR                 0xEC0
                      01903 #endif
                      01904 
                      01905 #ifdef __18LF25J50
                      01906      #define CONFIG_AS_FLASH
                      01907      #define DEVICEID                .615
                      01908      #define WRITE_FLASH_BLOCKSIZE   .64
                      01909      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01910      #define END_FLASH               0x8000
                      01911      #define END_GPR                 0xEC0
                      01912 #endif
                      01913 
                      01914 #ifdef __18LF25K22
                      01915      #define DEVICEID                .683
                      01916      #define WRITE_FLASH_BLOCKSIZE   .64
                      01917      #define ERASE_FLASH_BLOCKSIZE   .64
                      01918      #define END_FLASH               0x8000
                      01919      #define END_GPR                 0x600
                      01920 #endif
                      01921 
                      01922 #ifdef __18LF25K80
                      01923      #define DEVICEID                .787
                      01924      #define WRITE_FLASH_BLOCKSIZE   .64
                      01925      #define ERASE_FLASH_BLOCKSIZE   .64
                      01926      #define END_FLASH               0x8000
                      01927      #define END_GPR                 0xE41
                      01928 #endif
                      01929 
                      01930 #ifdef __18LF26J11
                      01931      #define CONFIG_AS_FLASH
                      01932      #define DEVICEID                .628
                      01933      #define WRITE_FLASH_BLOCKSIZE   .64
                      01934      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01935      #define END_FLASH               0x10000
                      01936      #define END_GPR                 0xEC0
                      01937 #endif
                      01938 
                      01939 #ifdef __18LF26J13
                      01940      #define CONFIG_AS_FLASH
                      01941      #define DEVICEID                .729
                      01942      #define WRITE_FLASH_BLOCKSIZE   .64
                      01943      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01944      #define END_FLASH               0x10000
                      01945      #define END_GPR                 0xEB0
                      01946 #endif
                      01947 
                      01948 #ifdef __18LF26J50
                      01949      #define CONFIG_AS_FLASH
                      01950      #define DEVICEID                .616
                      01951      #define WRITE_FLASH_BLOCKSIZE   .64
                      01952      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01953      #define END_FLASH               0x10000
                      01954      #define END_GPR                 0xEC0
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01955 #endif
                      01956 
                      01957 #ifdef __18LF26J53
                      01958      #define CONFIG_AS_FLASH
                      01959      #define DEVICEID                .721
                      01960      #define WRITE_FLASH_BLOCKSIZE   .64
                      01961      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01962      #define END_FLASH               0x10000
                      01963      #define END_GPR                 0xEB0
                      01964 #endif
                      01965 
                      01966 #ifdef __18LF26K22
                      01967      #define DEVICEID                .675
                      01968      #define WRITE_FLASH_BLOCKSIZE   .64
                      01969      #define ERASE_FLASH_BLOCKSIZE   .64
                      01970      #define END_FLASH               0x10000
                      01971      #define END_GPR                 0xF38
                      01972 #endif
                      01973 
                      01974 #ifdef __18LF26K80
                      01975      #define DEVICEID                .784
                      01976      #define WRITE_FLASH_BLOCKSIZE   .64
                      01977      #define ERASE_FLASH_BLOCKSIZE   .64
                      01978      #define END_FLASH               0x10000
                      01979      #define END_GPR                 0xE41
                      01980 #endif
                      01981 
                      01982 #ifdef __18LF27J13
                      01983      #define CONFIG_AS_FLASH
                      01984      #define DEVICEID                .731
                      01985      #define WRITE_FLASH_BLOCKSIZE   .64
                      01986      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01987      #define END_FLASH               0x20000
                      01988      #define END_GPR                 0xEB0
                      01989 #endif
                      01990 
                      01991 #ifdef __18LF27J53
                      01992      #define CONFIG_AS_FLASH
                      01993      #define DEVICEID                .723
                      01994      #define WRITE_FLASH_BLOCKSIZE   .64
                      01995      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01996      #define END_FLASH               0x20000
                      01997      #define END_GPR                 0xEB0
                      01998 #endif
                      01999 
                      02000 #ifdef __18LF43K22
                      02001      #define DEVICEID                .697
                      02002      #define WRITE_FLASH_BLOCKSIZE   .64
                      02003      #define ERASE_FLASH_BLOCKSIZE   .64
                      02004      #define END_FLASH               0x2000
                      02005      #define END_GPR                 0x200
                      02006 #endif
                      02007 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02008 #ifdef __18LF44J10
                      02009      #define CONFIG_AS_FLASH
                      02010      #define DEVICEID                .235
                      02011      #define WRITE_FLASH_BLOCKSIZE   .64
                      02012      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02013      #define END_FLASH               0x4000
                      02014      #define END_GPR                 0x400
                      02015 #endif
                      02016 
                      02017 #ifdef __18LF44J11
                      02018      #define CONFIG_AS_FLASH
                      02019      #define DEVICEID                .629
                      02020      #define WRITE_FLASH_BLOCKSIZE   .64
                      02021      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02022      #define END_FLASH               0x4000
                      02023      #define END_GPR                 0xEC0
                      02024 #endif
                      02025 
                      02026 #ifdef __18LF44J50
                      02027      #define CONFIG_AS_FLASH
                      02028      #define DEVICEID                .617
                      02029      #define WRITE_FLASH_BLOCKSIZE   .64
                      02030      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02031      #define END_FLASH               0x4000
                      02032      #define END_GPR                 0xEC0
                      02033 #endif
                      02034 
                      02035 #ifdef __18LF44K22
                      02036      #define DEVICEID                .689
                      02037      #define WRITE_FLASH_BLOCKSIZE   .64
                      02038      #define ERASE_FLASH_BLOCKSIZE   .64
                      02039      #define END_FLASH               0x4000
                      02040      #define END_GPR                 0x300
                      02041 #endif
                      02042 
                      02043 #ifdef __18LF45J10
                      02044      #define CONFIG_AS_FLASH
                      02045      #define DEVICEID                .227
                      02046      #define WRITE_FLASH_BLOCKSIZE   .64
                      02047      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02048      #define END_FLASH               0x8000
                      02049      #define END_GPR                 0x400
                      02050 #endif
                      02051 
                      02052 #ifdef __18LF45J11
                      02053      #define CONFIG_AS_FLASH
                      02054      #define DEVICEID                .630
                      02055      #define WRITE_FLASH_BLOCKSIZE   .64
                      02056      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02057      #define END_FLASH               0x8000
                      02058      #define END_GPR                 0xEC0
                      02059 #endif
                      02060 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02061 #ifdef __18LF45J50
                      02062      #define CONFIG_AS_FLASH
                      02063      #define DEVICEID                .618
                      02064      #define WRITE_FLASH_BLOCKSIZE   .64
                      02065      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02066      #define END_FLASH               0x8000
                      02067      #define END_GPR                 0xEC0
                      02068 #endif
                      02069 
                      02070 #ifdef __18LF45K22
                      02071      #define DEVICEID                .681
                      02072      #define WRITE_FLASH_BLOCKSIZE   .64
                      02073      #define ERASE_FLASH_BLOCKSIZE   .64
                      02074      #define END_FLASH               0x8000
                      02075      #define END_GPR                 0x600
                      02076 #endif
                      02077 
                      02078 #ifdef __18LF45K80
                      02079      #define DEVICEID                .786
                      02080      #define WRITE_FLASH_BLOCKSIZE   .64
                      02081      #define ERASE_FLASH_BLOCKSIZE   .64
                      02082      #define END_FLASH               0x8000
                      02083      #define END_GPR                 0xE41
                      02084 #endif
                      02085 
                      02086 #ifdef __18LF46J11
                      02087      #define CONFIG_AS_FLASH
                      02088      #define DEVICEID                .631
                      02089      #define WRITE_FLASH_BLOCKSIZE   .64
                      02090      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02091      #define END_FLASH               0x10000
                      02092      #define END_GPR                 0xEC0
                      02093 #endif
                      02094 
                      02095 #ifdef __18LF46J13
                      02096      #define CONFIG_AS_FLASH
                      02097      #define DEVICEID                .733
                      02098      #define WRITE_FLASH_BLOCKSIZE   .64
                      02099      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02100      #define END_FLASH               0x10000
                      02101      #define END_GPR                 0xEB0
                      02102 #endif
                      02103 
                      02104 #ifdef __18LF46J50
                      02105      #define CONFIG_AS_FLASH
                      02106      #define DEVICEID                .619
                      02107      #define WRITE_FLASH_BLOCKSIZE   .64
                      02108      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02109      #define END_FLASH               0x10000
                      02110      #define END_GPR                 0xEC0
                      02111 #endif
                      02112 
                      02113 #ifdef __18LF46J53
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02114      #define CONFIG_AS_FLASH
                      02115      #define DEVICEID                .725
                      02116      #define WRITE_FLASH_BLOCKSIZE   .64
                      02117      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02118      #define END_FLASH               0x10000
                      02119      #define END_GPR                 0xEB0
                      02120 #endif
                      02121 
                      02122 #ifdef __18LF46K22
                      02123      #define DEVICEID                .673
                      02124      #define WRITE_FLASH_BLOCKSIZE   .64
                      02125      #define ERASE_FLASH_BLOCKSIZE   .64
                      02126      #define END_FLASH               0x10000
                      02127      #define END_GPR                 0xF38
                      02128 #endif
                      02129 
                      02130 #ifdef __18LF46K80
                      02131      #define DEVICEID                .783
                      02132      #define WRITE_FLASH_BLOCKSIZE   .64
                      02133      #define ERASE_FLASH_BLOCKSIZE   .64
                      02134      #define END_FLASH               0x10000
                      02135      #define END_GPR                 0xE41
                      02136 #endif
                      02137 
                      02138 #ifdef __18LF47J13
                      02139      #define CONFIG_AS_FLASH
                      02140      #define DEVICEID                .735
                      02141      #define WRITE_FLASH_BLOCKSIZE   .64
                      02142      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02143      #define END_FLASH               0x20000
                      02144      #define END_GPR                 0xEB0
                      02145 #endif
                      02146 
                      02147 #ifdef __18LF47J53
                      02148      #define CONFIG_AS_FLASH
                      02149      #define DEVICEID                .727
                      02150      #define WRITE_FLASH_BLOCKSIZE   .64
                      02151      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02152      #define END_FLASH               0x20000
                      02153      #define END_GPR                 0xEB0
                      02154 #endif
                      02155 
                      02156 #ifdef __18LF65K80
                      02157      #define DEVICEID                .785
                      02158      #define WRITE_FLASH_BLOCKSIZE   .64
                      02159      #define ERASE_FLASH_BLOCKSIZE   .64
                      02160      #define END_FLASH               0x8000
                      02161      #define END_GPR                 0xE41
                      02162 #endif
                      02163 
                      02164 #ifdef __18LF66K80
                      02165      #define DEVICEID                .782
                      02166      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02167      #define ERASE_FLASH_BLOCKSIZE   .64
                      02168      #define END_FLASH               0x10000
                      02169      #define END_GPR                 0xE41
                      02170 #endif
                      00111 #include "bootconfig.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 ;#define TBLWT_BUG               ; Enable this to work around timing bug found in some PIC18Fxx20's
                      00026 ;#define INVERT_UART             ; If you don't have an RS232 transceiver, you might want this option
                      00027 #define USE_MAX_INTOSC          ; Sets OSCCON<IRCF2:IRCF0> for maximum INTOSC frequency (8MHz)
                      00028 #define USE_PLL                 ; Sets OSCTUNE.PLLEN bit at start up for frequency multiplication.
                      00029 ;#define PICDEM_LCD2             ; RB0 = 1 required to enable MAX3221 TX output on PICDEM LCD 2 demo boa
                            rd
                      00030 #define USE_SOFTBOOTWP          ; enable software boot block write protection
                      00031 ;#define USE_SOFTCONFIGWP        ; enable software config words write protection
                      00032 
                      00033 ; Autobaud will be used by default. To save code space or to force a specific baud rate to be used, 
                      00034 ; you can optionally define a BAUDRG value instead. Most PIC18's support BRG16 mode and use the 
                      00035 ; following equation:
                      00036 ;       BAUDRG = Fosc / (4 * Baud Rate) - 1
                      00037 ;
                      00038 ; Old PIC18's without BRG16 mode need this equation instead:
                      00039 ;       BAUDRG = Fosc / (16 * Baud Rate) - 1
                      00040 ;
                      00041 ; Examples:
                      00042 ;#define BAUDRG .51              ; 19.2Kbps from 4MHz (BRG16 = 1, BRGH = 1)
                      00043 ;#define BAUDRG .103             ; 115.2Kbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00044 ;#define BAUDRG .85              ; 115.2Kbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00045 ;#define BAUDRG .68              ; 115.2Kbps from 32MHz (BRG16 = 1, BRGH = 1)
                      00046 ;#define BAUDRG .16              ; 115.2Kbps from 8MHz (BRG16 = 1, BRGH = 1)
                      00047 ;#define BAUDRG .11              ; 1Mbps from 48MHz (BRG16 = 1, BRGH = 1)
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00048 ;#define BAUDRG .9               ; 1Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00049 ;#define BAUDRG .4               ; 2Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00050 ;#define BAUDRG .3               ; 3Mbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00051 ;#define BAUDRG .12              ; 19.2Kbps from 4MHz, 115.2Kbps from 24MHz (BRG16 = 0, BRGH = 1)
                      00052 ;#define BAUDRG .10              ; 115.2Kbps from 19.6608MHz (BRG16 = 0, BRGH = 1)
                      00053 
                      00054 ; Bootloader must start at the beginning of a FLASH Erase Block. If unspecified,
                      00055 ; bootloader will automatically be located at the end of program memory address space.
                      00056 #define BOOTLOADER_ADDRESS   0  ; bootloader at beginning, application start/ISR vectors require remappi
                            ng
                      00057 ;#define BOOTLOADER_ADDRESS   END_FLASH - (ERASE_FLASH_BLOCKSIZE * 20)  ; useful for running under debug
                            ger (debug executive wants to reside at the end of memory space too)
                      00058 ;#define BOOTLOADER_ADDRESS  (END_FLASH - ERASE_FLASH_BLOCKSIZE) ; use on J parts to locate inside flash
                             config erase block
                      00059 
                      00060 #ifdef BOOTLOADER_ADDRESS
                      00061   #if BOOTLOADER_ADDRESS == 0
                      00062     ; For Bootloader located at program memory address 0, the application firmware must 
                      00063     ; provide remapped reset and interrupt vectors outside of the Boot Block. The following 
                      00064     ; #defines tell the bootloader firmware where application entry points are to be expected:
                      00065     #define AppVector           0x400   ; application start up code should be located here.
                      00066     #define AppHighIntVector    0x408   ; application high priority interrupt should be located here
                      00067     #define AppLowIntVector     0x418   ; application low priority interrupt should be located here
                      00068   #endif
                      00069 #endif
                      00070 
                      00071 ; Define UART pins and registers. 
                      00072 ; Modify the following lines if you want to use a different UART module.
                      00073 ;
                      00074 ; Note: If your UART's RX pin happens to be multiplexed with analog ANx input
                      00075 ;       functionality, you may need to edit the "preprocess.inc" DigitalInput
                      00076 ;       macro. Code there needs to enable the digital input buffer (refer to
                      00077 ;       ADC chapter of your device's datasheet).
                      00078 #define UARTNUM 1
                      00079 #if UARTNUM == 1
                      00080     #define UxSPBRG         SPBRG
                      00081     #define UxSPBRGH        SPBRGH
                      00082     #define UxRCSTA         RCSTA
                      00083     #define UxTXSTA         TXSTA
                      00084     #define UxRCREG         RCREG
                      00085     #define UxTXREG         TXREG
                      00086     #define UxPIR           PIR1
                      00087     #define UxRCIF          RCIF
                      00088     #define UxTXIF          TXIF
                      00089     #define UxBAUDCON       BAUDCON
                      00090 
                      00091 ;    #define RXPORT         PORTC   ; RX on RC7 is used by default for most PIC18's.
                      00092 ;    #define RXPIN          .7
                      00093 
                      00094 ;    #define RXPORT          PORTB   ; PIC18F14K50: RX on RB5/AN11
                      00095 ;    #define RXPIN           .5
                      00096 
                      00097 ;    #define RXANSEL         ANSELH  ; RX/AN11 multiplexed -- must enable digital input buffer
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00098 ;    #define RXAN            .3      ; ANSELH<3> controls AN11 digital input buffer
                      00099 #endif
                      00100 
                      00101 #if UARTNUM == 2
                      00102     #define UxSPBRG         SPBRG2
                      00103     #define UxSPBRGH        SPBRGH2
                      00104     #define UxRCSTA         RCSTA2
                      00105     #define UxTXSTA         TXSTA2
                      00106     #define UxRCREG         RCREG2
                      00107     #define UxTXREG         TXREG2
                      00108     #define UxPIR           PIR3
                      00109     #define UxRCIF          RC2IF
                      00110     #define UxTXIF          TX2IF
                      00111     #define UxBAUDCON       BAUDCON2
                      00112 
                      00113 ;    #define RXPORT          PORTG   ; RG2 is default RX2 pin for some high pin count PIC18's.
                      00114 ;    #define RXPIN           .2
                      00115 
                      00116 ;    #define RXPORT          PORTD   ; RX2 pin PPS'ed to RD4/RP21 on PIC18F46J11 for example.
                      00117 ;    #define RXPIN           .4
                      00118 
                      00119 ;    #define RXANSEL         ANSELH  ; On PICs where RX is multiplexed with ANx analog inputs,
                      00120 ;    #define RXAN            .3      ; the digital input buffer needs to be enabled via ANSELx SFRs
                      00121 
                      00122     ; devices that use PPS to remap UART2 pins will need these lines defined:
                      00123 ;    #define PPS_UTX         .5      ; PPS code for TX2/CK2 output function
                      00124 ;    #define PPS_UTX_PIN     RPOR23  ; UART TX assigned to RP23 pin
                      00125 ;    #define PPS_URX_PIN     .21     ; UART RX assigned to RP21 pin
                      00126 ;    #define PPS_URX         RPINR16 ; PPS register for RX2/CK2 input function
                      00127 #endif
                      00128 
                      00129 ; If you get linker errors complaining "can not fit the absolute section," you might want to
                      00130 ; increase BOOTLOADERSIZE below or set the BOOTLOADER_ADDRESS above to a smaller address number.
                      00131 
                      00132 ; Because we need to know the total size of the bootloader before the assembler has finished
                      00133 ; compiling the source code, we have to estimate the final bootloader size and provide it
                      00134 ; here as BOOTLOADERSIZE. This number is in bytes (twice the instruction word count). 
                      00135 ;
                      00136 ; If you see the bootloader is reserving more FLASH memory than it really needs (you'll
                      00137 ; see a bunch of FFFF/NOP instructions at the end of the bootloader memory region),
                      00138 ; you can try reducing BOOTLOADERSIZE.
                      00139 #define BOOTLOADERSIZE  .1024
                      00140 
                      00141 #define MAJOR_VERSION   .1              ; Bootloader Firmware Version
                      00142 #define MINOR_VERSION   .5
                      00112 #include "preprocess.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 DigitalInput macro
                      00026 #ifdef __18F1320
                      00027     #if BOOTLOADER_ADDRESS == 0
                      00028     nop                         ; start up GOTO instruction errata
                      00029     #endif
                      00030     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00031 #endif
                      00032 #ifdef __18F1220
                      00033     #if BOOTLOADER_ADDRESS == 0
                      00034     nop                         ; start up GOTO instruction errata
                      00035     #endif
                      00036     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00037 #endif
                      00038 
                      00039 #ifdef RXANSEL
                      00040     banksel RXANSEL
                      00041     bcf     RXANSEL, RXAN
                      00042 #else
                      00043     #ifdef ANSC7
                      00044         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                      00045         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
                      00046     #endif
                      00047 #endif
                      00048     endm        
                      00049 
                      00050 pmwtpi macro                        ; tblwt*+ macro for PIC18Fxx20 bug
                      00051 #ifdef TBLWT_BUG
                      00052     tblwt   *
                      00053     tblrd   *+
                      00054 #else
                      00055     tblwt   *+
                      00056 #endif
                      00057     endm
                      00058 
                      00059 #ifndef BAUDRG
                      00060     #ifndef USE_AUTOBAUD
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00061         #define USE_AUTOBAUD
                      00062     #endif
                      00063 #endif
                      00064 
                      00065 #ifndef RXPORT
                      00066     #ifdef PORTC
                      00067         #define RXPORT PORTC
                      00068     #else
                      00069         #define RXPORT PORTB    ; PIC18F1220, PIC18F1320
                      00070     #endif
                      00071 #endif
                      00072 
                      00073 #ifndef RXPIN
                      00074     #ifdef PORTC
                      00075         #define RXPIN 7            ; most PIC18's have RX on RC7
                      00076     #else
                      00077         #define RXPIN 4            ; PIC18F1220, PIC18F1320 have RX on RB4
                      00078     #endif
                      00079 #endif
                      00080 
                      00081 #ifdef BRG16
                      00082     #ifndef SPBRGH
                      00083         #define SPBRGH SPBRGH1      ; PIC18F87J10 doesn't define SPBRGH by default.
                      00084     #endif
                      00085 
                      00086     #ifndef BAUDCON
                      00087         #ifdef BAUDCON1
                      00088             #define BAUDCON BAUDCON1    ; PIC18F85J90 / PIC18F84J90
                      00089         #else
                      00090             #ifdef BAUDCTL
                      00091                 #define BAUDCON BAUDCTL ; PIC18F1220, PIC18F1320
                      00092             #endif
                      00093         #endif
                      00094     #endif
                      00095 #endif
                      00096 
                      00097 #ifndef RCREG
                      00098     #ifdef RCREG1
                      00099         #define RCREG RCREG1        ; PIC18F85J90/PIC18F84J90
                      00100     #endif
                      00101 #endif
                      00102 
                      00103 #ifndef TXIF
                      00104     #ifdef TX1IF
                      00105         #define TXIF TX1IF          ; PIC18F97J60 doesn't define TXIF by default
                      00106     #endif
                      00107 #endif
                      00108 
                      00109 #ifndef RCIF
                      00110     #ifdef RC1IF
                      00111         #define RCIF RC1IF          ; Not a problem on PIC18F97J60, but just in case future parts might 
                            need it
                      00112     #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00113 #endif
                      00114 
                      00115 #ifndef RXDTP
                      00116     #ifdef DTRXP
                      00117         #define RXDTP DTRXP         ; PIC18F14K50 doesn't define RXDTP, instead they call it DTRXP
                      00118     #endif
                      00119 #endif
                      00120 
                      00121 #ifndef TXCKP
                      00122     #ifdef CKTXP
                      00123         #define TXCKP CKTXP         ; PIC18F14K50
                      00124     #endif
                      00125 #endif
                      00126 
                      00127 
                      00128 #if BOOTLOADERSIZE < ERASE_FLASH_BLOCKSIZE
                      00129     ; This device has a large Erase FLASH Block Size, so we need to reserve a full Erase Block
                      00130     ; page for the bootloader. Reserving an entire erase block prevents the PC application
                      00131     ; from trying to accidently erase a portion of the bootloader.
                      00132     #define BOOTBLOCKSIZE ERASE_FLASH_BLOCKSIZE
                      00133     #ifndef BOOTLOADER_ADDRESS
                      00134         #ifdef CONFIG_AS_FLASH
                      00135             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE - ERASE_FLASH_BLOCKSIZE)
                      00136         #else
                      00137             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00138         #endif
                      00139     #endif
                      00140 #else
                      00141     #if (BOOTLOADERSIZE % ERASE_FLASH_BLOCKSIZE) == 0
                      00142         #define BOOTBLOCKSIZE BOOTLOADERSIZE     
                      00143     #else
                      00144         #define BOOTBLOCKSIZE (BOOTLOADERSIZE / ERASE_FLASH_BLOCKSIZE + 1) * ERASE_FLASH_BLOCKSIZE
                      00145     #endif
                      00146     #ifndef BOOTLOADER_ADDRESS
                      00147         #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00148     #endif
                      00149 #endif
                      00113 ; *****************************************************************************
                      00114 
                      00115 ; *****************************************************************************
                      00116 #define STX             0x0F            
                      00117 #define ETX             0x04
                      00118 #define DLE             0x05
                      00119 #define NTX             0xFF
                      00120 ; *****************************************************************************
                      00121 
                      00122 ; *****************************************************************************
                      00123 ; RAM Address Map
  00000000            00124 CRCL                equ 0x00
  00000001            00125 CRCH                equ 0x01
  00000002            00126 RXDATA              equ 0x02
  00000003            00127 TXDATA              equ 0x03
  00000004            00128 TMP                 equ 0x04
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00129 
                      00130 ; Framed Packet Format
                      00131 ; <STX>[<COMMAND><ADDRL><ADDRH><ADDRU><0x00><DATALEN><...DATA...>]<CRCL><CRCH><ETX>
  00000005            00132 COMMAND             equ 0x05        ; receive buffer
  00000006            00133 ADDRESS_L           equ 0x06
  00000007            00134 ADDRESS_H           equ 0x07
  00000008            00135 ADDRESS_U           equ 0x08
  00000009            00136 ADDRESS_X           equ 0x09
  0000000A            00137 DATA_COUNTL         equ 0x0A
  0000000B            00138 PACKET_DATA         equ 0x0B
  0000000B            00139 DATA_COUNTH         equ 0x0B        ; only for certain commands
                      00140 ; *****************************************************************************
                      00141 
                      00142 ; *****************************************************************************
                      00143     errorlevel -311                 ; don't warn on HIGH() operator values >16-bits
                      00144 
                      00145 ; bit banding read function
                      00146 #define INCLK   RA0
                      00147 #define INDATA  RA1
                      00148 #define CS      RA2    ; lo=normal, hi=reset
                      00149 #define OUTDATA RC6    
                      00150 
                      00151 ClrOutData macro
                      00152     bcf     PORTC, OUTDATA
                      00153     endm
                      00154     
                      00155 SetOutData macro
                      00156     bsf     PORTC, OUTDATA
                      00157     endm
                      00158 
                      00159 ToggleOutData macro
                      00160     btg     PORTC, OUTDATA
                      00161     endm
                      00162   
                      00163 #ifdef USE_SOFTBOOTWP
                      00164   #ifndef SOFTWP
                      00165     #define SOFTWP
                      00166   #endif
                      00167 #endif
                      00168 
                      00169 #ifdef USE_SOFTCONFIGWP
                      00170   #ifdef CONFIG_AS_FLASH
                      00171     #ifndef SOFTWP
                      00172       #define SOFTWP
                      00173     #endif
                      00174   #endif
                      00175 #endif
                      00176 
                      00177 #ifndef AppVector
                      00178     ; The application startup GOTO instruction will be written just before the Boot Block,
                      00179     ; courtesy of the host PC bootloader application.
                      00180     #define AppVector (BootloaderStart-.4)
                      00181 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00182 ; *****************************************************************************
                      00183 
                      00184  
                      00185 ; *****************************************************************************
                      00186 #if BOOTLOADER_ADDRESS != 0
                      00187     ORG     0
                      00188     ; The following GOTO is not strictly necessary, but may startup faster
                      00189     ; for large microcontrollers running at extremely slow clock speeds.
                      00190     ;goto    BootloaderBreakCheck  
                      00191 
                      00192     ORG     BOOTLOADER_ADDRESS
                      00193 BootloaderStart:
                      00194     bra     BootloadMode
                      00195 
                      00196 ; *****************************************************************************
                      00197 ; Determine if the application is supposed to be started or if we should
                      00198 ; go into bootloader mode.
                      00199 ;
                      00200 ; If RX pin is in BREAK state when we come out of MCLR reset, immediately 
                      00201 ; enter bootloader mode, even if there exists some application firmware in 
                      00202 ; program memory.
                      00203 BootloaderBreakCheck:
                      00204 #ifdef INVERT_UART
                      00205     btfss   RXPORT, RXPIN
                      00206 GotoAppVector:
                      00207     goto    AppVector           ; no BREAK state, attempt to start application
                      00208 #else
                      00209     btfsc   RXPORT, RXPIN
                      00210 GotoAppVector:
                      00211     goto    AppVector           ; no BREAK state, attempt to start application
                      00212 #endif
                      00213 
                      00214 BootloadMode:
                      00215 #else ; BOOTLOADER_ADDRESS == 0 ****************************************************************
000000                00216     ORG     0
000000                00217 BootloaderStart:
000000 0E00           00218     movlw   low(AppVector)      ; load address of application reset vector
000002 D004           00219     bra     BootloaderBreakCheck
                      00220 
000008                00221     ORG     0x0008
000008                00222 HighPriorityInterruptVector:
000008 EF04 F002      00223     goto    AppHighIntVector    ; Re-map Interrupt vector
                      00224 
00000C                00225 BootloaderBreakCheck:
                      00226     ; TODO: check firmware switch and branch to BootloadMode
00000C D010           00227     bra     BootloadMode
                      00228     
00000E                00229 CheckAppVector:
                      00230     ; Read instruction at the application reset vector location. 
                      00231     ; If we read 0xFFFF, assume that the application firmware has
                      00232     ; not been programmed yet, so don't try going into application mode.
00000E 6EF6           00233     movwf   TBLPTRL
000010 0E04           00234     movlw   high(AppVector)
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000012 6EF7           00235     movwf   TBLPTRH
000014 D003           00236     bra     CheckAppVector2
                      00237 
000018                00238     ORG     0x0018
000018                00239 LowPriorityInterruptVector:
000018 EF0C F002      00240     goto    AppLowIntVector     ; Re-map Interrupt vector
                      00241 
00001C                00242 CheckAppVector2:
00001C 0E00           00243     movlw   upper(AppVector)
00001E 6EF8           00244     movwf   TBLPTRU     
000020 0009           00245     tblrd   *+                  ; read instruction from program memory
000022 3CF5           00246     incfsz  TABLAT, W           ; if the lower byte != 0xFF, 
000024                00247 GotoAppVector:
000024 EF00 F002      00248     goto    AppVector           ; run application.
                      00249 
000028 0009           00250     tblrd   *+                  ; read instruction from program memory
00002A 3CF5           00251     incfsz  TABLAT, W           ; if the lower byte == 0xFF but upper byte != 0xFF,
00002C D7FB           00252     bra     GotoAppVector       ; run application.
                      00253     ; otherwise, assume application firmware is not present because we read a NOP (0xFFFF).
                      00254     ; fall through to bootloader mode...
00002E                00255 BootloadMode:
                      00256     ; Bootloader entry point
00002E 80C1           00257     bsf     ADCON1, PCFG0       ; set RA as digital port PCFG3:PCFG0 = 1111
000030 82C1           00258     bsf     ADCON1, PCFG1
000032 84C1           00259     bsf     ADCON1, PCFG2
000034 86C1           00260     bsf     ADCON1, PCFG3
                      00261     
000036 8092           00262     bsf     TRISA, TRISA0       ; set RA0 as input clock
000038 8292           00263     bsf     TRISA, TRISA1       ; set RA1 as input data
00003A 8492           00264     bsf     TRISA, TRISA2       ; set RA2 as input cs
00003C 9C94           00265     bcf     TRISC, TRISC6       ; set RC6 as output
00003E 9C82           00266     bcf     PORTC, RC6          ; set RC6=0
                      00267 
                      00268     ; loopback test
                      00269 #if (0)    
                      00270 LoopbackMode:
                      00271     btfss   PORTA, RA0
                      00272     goto    LoopbackMode_1
                      00273     bsf     PORTC, RC6
                      00274     bra     LoopbackMode
                      00275 LoopbackMode_1:
                      00276     bcf     PORTC, RC6
                      00277     bra     LoopbackMode
                      00278 #endif
                      00279         
                      00280 #if (0)
                      00281 LoopbackMode:
                      00282     call    DoReadHostByte
                      00283     movf    RXDATA, W   ; WREG = RXDATA
                      00284     movwf   TXDATA      ; TXDATA = WREG
                      00285     call    DoWriteHostByte
                      00286     bra     LoopbackMode
                      00287 #endif    
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00288          
                      00289 #endif ; end BOOTLOADER_ADDRESS == 0 ******************************************
000040 EE20 F000      00290     lfsr    FSR2, 0             ; for compatibility with Extended Instructions mode.
                      00291 
                      00292 #ifdef USE_MAX_INTOSC
000044 0000           00293     nop
                      00294 #endif
                      00295     
                      00296 #ifdef USE_PLL
                      00297     ; run internal OSC at 8Mhz,  OSCCON = 0x70
000046 0E72           00298     movlw   0x72
000048 6ED3           00299     movwf   OSCCON
                      00300 
                      00301     ; enable PLL, OSCTUNE = 0xC0
00004A 0EC0           00302     movlw   0xC0
00004C 6E9B           00303     movwf   OSCTUNE
                      00304 #endif
                      00305 
                      00306 ; *****************************************************************************
                      00307 ; WaitForHostCommand    
00004E                00308 DoAutoBaud:
00004E                00309 WaitForHostCommand:
00004E D967           00310     rcall   ReadHostByte        ; get start of transmission <STX>
000050 0A0F           00311     xorlw   STX
000052 E1FD           00312     bnz     WaitForHostCommand  ; got something unexpected, keep waiting for <STX>
                      00313 ; *****************************************************************************
                      00314 
                      00315 ; -----------------------------------------------------------------------------    
                      00316 ; Notes:    
                      00317 ; Host send the first <STX> then it must wait and receive <STX> from bootloader
                      00318 ; -----------------------------------------------------------------------------    
                      00319 
                      00320 ; *****************************************************************************
                      00321 ; Read and parse packet data.
000054                00322 StartOfLine:
000054 0E0F           00323     movlw   STX                     ; send back start of response
000056 D91B           00324     rcall   SendHostByte
                      00325 
000058 EE00 F004      00326     lfsr    FSR0, COMMAND-1         ; Point to the buffer
                      00327         
00005C                00328 ReceiveDataLoop:
00005C D960           00329     rcall   ReadHostByte            ; Get the data
00005E 0A0F           00330     xorlw   STX                     ; Check for an unexpected STX
000060 E0F9           00331     bz      StartOfLine             ; unexpected STX: abort packet and start over.
                      00332 
000062                00333 NoSTX:
000062 5002           00334     movf    RXDATA, W
000064 0A04           00335     xorlw   ETX                     ; Check for a ETX
000066 E007           00336     bz      VerifyPacketCRC         ; Yes, verify CRC
                      00337 
000068                00338 NoETX:
000068 5002           00339     movf    RXDATA, W
00006A 0A05           00340     xorlw   DLE                     ; Check for a DLE
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006C E101           00341     bnz     AppendDataBuffer
                      00342 
00006E D957           00343     rcall   ReadHostByte            ; DLE received, get the next byte and store it
                      00344     
000070                00345 AppendDataBuffer:
000070 C002 FFEC      00346     movff   RXDATA, PREINC0         ; store the data to the buffer
000074 D7F3           00347     bra     ReceiveDataLoop
                      00348 
000076                00349 VerifyPacketCRC:
000076 EE10 F005      00350     lfsr    FSR1, COMMAND
00007A 6A00           00351     clrf    CRCL
00007C 6A01           00352     clrf    CRCH
00007E CFED FFF4      00353     movff   POSTDEC0, PRODH         ; Save host packet's CRCH to PRODH for later comparison
                      00354                                     ; CRCL is now available as INDF0
000082                00355 VerifyPacketCrcLoop:
000082 50E6           00356     movf    POSTINC1, w
000084 D82F           00357     rcall   AddCrc                  ; add new data to the CRC
                      00358 
000086 50E2           00359     movf    FSR1H, w
000088 62EA           00360     cpfseq  FSR0H
00008A D7FB           00361     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
00008C 50E1           00362     movf    FSR1L, w
00008E 62E9           00363     cpfseq  FSR0L
000090 D7F8           00364     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
                      00365 
000092 5001           00366     movf    CRCH, w
000094 62F4           00367     cpfseq  PRODH
000096 D7DB           00368     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
000098 5000           00369     movf    CRCL, w
00009A 62EF           00370     cpfseq  INDF0
00009C D7D8           00371     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
                      00372 
                      00373 ; ***********************************************
                      00374 ; Pre-setup, common to all commands.
00009E 6A00           00375     clrf    CRCL
0000A0 6A01           00376     clrf    CRCH
                      00377 
0000A2 5006           00378     movf    ADDRESS_L, W            ; Set all possible pointers
0000A4 6EF6           00379     movwf   TBLPTRL
                      00380 #ifdef EEADR
0000A6 6EA9           00381     movwf   EEADR
                      00382 #endif
0000A8 5007           00383     movf    ADDRESS_H, W
0000AA 6EF7           00384     movwf   TBLPTRH
                      00385 #ifdef EEADRH
                      00386     movwf   EEADRH
                      00387 #endif
0000AC C008 FFF8      00388     movff   ADDRESS_U, TBLPTRU
0000B0 EE00 F00B      00389     lfsr    FSR0, PACKET_DATA
                      00390 ; ***********************************************
                      00391 
                      00392  
                      00393 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00394 ; ***********************************************
                      00395 ; Test the command field and sub-command.
0000B4                00396 CheckCommand:
0000B4 0E0A           00397     movlw   .10
0000B6 6005           00398     cpfslt  COMMAND
0000B8 D7CA           00399     bra     DoAutoBaud          ; invalid command - reset baud generator to re-sync with host
                      00400 
                      00401     ; This jump table must exist entirely within one 256 byte block of program memory.
                      00402 #if ($ & 0xFF) > (0xFF - .24)
                      00403     ; Too close to the end of a 256 byte boundary, push address forward to get code
                      00404     ; into the next 256 byte block.
                      00405     messg   "Wasting some code space to ensure jump table is aligned."
                      00406     ORG     $+(0x100 - ($ & 0xFF))
                      00407 #endif
0000BA                00408 JUMPTABLE_BEGIN:
0000BA 50F9           00409     movf    PCL, w              ; 0 do a read of PCL to set PCLATU:PCLATH to current program counter.
0000BC 4405           00410     rlncf   COMMAND, W          ; 2 multiply COMMAND by 2 (each BRA instruction takes 2 bytes on PIC18)
0000BE 26F9           00411     addwf   PCL, F              ; 4 Jump in command jump table based on COMMAND from host
0000C0 D027           00412     bra     BootloaderInfo      ; 6 00h
0000C2 D02F           00413     bra     ReadFlash           ; 8 01h
0000C4 D039           00414     bra     VerifyFlash         ; 10 02h
0000C6 D04F           00415     bra     EraseFlash          ; 12 03h
0000C8 D07C           00416     bra     WriteFlash          ; 14 04h
0000CA D0A8           00417     bra     ReadEeprom          ; 16 05h
0000CC D0B0           00418     bra     WriteEeprom         ; 18 06h
0000CE D0BA           00419     bra     WriteConfig         ; 20 07h
0000D0 D7A9           00420     bra     GotoAppVector       ; 22 08h
0000D2 00FF           00421     reset                       ; 24 09h
                      00422 
                      00423 #if (JUMPTABLE_BEGIN & 0xFF) > ($ & 0xFF)
                      00424     error "Jump table is not aligned to fit within a single 256 byte address range."
                      00425 #endif
                      00426 ; *****************************************************************************
                      00427 
                      00428 #ifdef INVERT_UART
                      00429 WaitForRise:
                      00430     nop
                      00431     
                      00432 WaitForRiseLoop:
                      00433     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
                      00434     return                  ; abort
                      00435 
                      00436     btfss   RXPORT, RXPIN   ; Wait for a falling edge
                      00437     bra     WaitForRiseLoop
                      00438 
                      00439 WtSR:
                      00440     btfsc   RXPORT, RXPIN   ; Wait for starting edge
                      00441     bra     WtSR
                      00442     return
                      00443 #else ; not inverted UART pins
0000D4                00444 WaitForRise:
0000D4 0000           00445     nop
                      00446 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D6                00447 WaitForRiseLoop
0000D6 B4F2           00448     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
0000D8 0012           00449     return                  ; abort
                      00450 
0000DA BE82           00451     btfsc   RXPORT, RXPIN   ; Wait for a falling edge
0000DC D7FC           00452     bra     WaitForRiseLoop
                      00453 
0000DE                00454 WtSR:
0000DE AE82           00455     btfss   RXPORT, RXPIN   ; Wait for rising edge
0000E0 D7FE           00456     bra     WtSR
0000E2 0012           00457     return
                      00458 #endif ; end #ifdef INVERT_UART
                      00459 ; *****************************************************************************
                      00460 
                      00461 ; 16-bit CCITT CRC
                      00462 ; Adds WREG byte to the CRC checksum CRCH:CRCL. WREG destroyed on return.
0000E4                00463 AddCrc:                           ; Init: CRCH = HHHH hhhh, CRCL = LLLL llll
0000E4 1801           00464     xorwf   CRCH, w               ; Pre:  HHHH hhhh     WREG =      IIII iiii
0000E6 C000 F001      00465     movff   CRCL, CRCH            ; Pre:  LLLL llll     CRCH =      LLLL llll
0000EA 6E00           00466     movwf   CRCL                  ; Pre:  IIII iiii     CRCL =      IIII iiii
0000EC 3AE8           00467     swapf   WREG                  ; Pre:  IIII iiii     WREG =      iiii IIII
0000EE 0B0F           00468     andlw   0x0F                  ; Pre:  iiii IIII     WREG =      0000 IIII
0000F0 1A00           00469     xorwf   CRCL, f               ; Pre:  IIII iiii     CRCL =      IIII jjjj
0000F2 3800           00470     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
0000F4 0BF0           00471     andlw   0xF0                  ; Pre:  jjjj IIII     WREG =      jjjj 0000
0000F6 1A01           00472     xorwf   CRCH, f               ; Pre:  LLLL llll     CRCH =      MMMM llll
0000F8 3800           00473     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
0000FA 44E8           00474     rlncf   WREG, w               ; Pre:  jjjj IIII     WREG =      jjjI IIIj
0000FC 1A01           00475     xorwf   CRCH, f               ; Pre:  MMMM llll     CRCH =      XXXN mmmm
0000FE 0BE0           00476     andlw   b'11100000'           ; Pre:  jjjI IIIj     WREG =      jjj0 0000
000100 1A01           00477     xorwf   CRCH, f               ; Pre:  jjj0 0000     CRCH =      MMMN mmmm
000102 1A00           00478     xorwf   CRCL, f               ; Pre:  MMMN mmmm     CRCL =      JJJI jjjj
000104 0012           00479     return
                      00480 
                      00481 ; ***********************************************
                      00482 ; Commands
                      00483 ; ***********************************************
                      00484 
                      00485 ; Provides information about the Bootloader to the host PC software.
000106                00486 BootInfoBlock:
000106 0400           00487     db      low(BOOTBLOCKSIZE), high(BOOTBLOCKSIZE)
000108 0501           00488     db      MAJOR_VERSION, MINOR_VERSION
00010A 84FF           00489     db      0xFF, 0x84             ; command mask : family id 
00010C 0000           00490     db      low(BootloaderStart), high(BootloaderStart)
00010E 0000           00491     db      upper(BootloaderStart), 0 
000110                00492 BootInfoBlockEnd:
                      00493 
                      00494 ; In:   <STX>[<0x00>]<CRCL><CRCH><ETX>
                      00495 ; Out:  <STX><BOOTBYTESL><BOOTBYTESH><VERL><VERH><STARTBOOTL><STARTBOOTH><STARTBOOTU><0x00><CRCL><CRCH><
                            ETX>
000110                00496 BootloaderInfo:
000110 0E06           00497     movlw   low(BootInfoBlock)
000112 6EF6           00498     movwf   TBLPTRL
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000114 0E01           00499     movlw   high(BootInfoBlock)
000116 6EF7           00500     movwf   TBLPTRH
000118 0E00           00501     movlw   upper(BootInfoBlock)
00011A 6EF8           00502     movwf   TBLPTRU
                      00503 
00011C 0E0A           00504     movlw   (BootInfoBlockEnd - BootInfoBlock)
00011E 6E0A           00505     movwf   DATA_COUNTL
000120 6A0B           00506     clrf    DATA_COUNTH
                      00507     ;; fall through to ReadFlash code -- send Bootloader Information Block from FLASH.
                      00508 
                      00509 ; In:   <STX>[<0x01><ADDRL><ADDRH><ADDRU><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00510 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
000122                00511 ReadFlash:
000122 0009           00512     tblrd   *+                  ; read from FLASH memory into TABLAT
000124 50F5           00513     movf    TABLAT, w
000126 D8A3           00514     rcall   SendEscapeByte
000128 DFDD           00515     rcall   AddCrc
                      00516 
00012A 060A           00517     decf    DATA_COUNTL, f      ; decrement counter
00012C 0E00           00518     movlw   0
00012E 5A0B           00519     subwfb  DATA_COUNTH, f
                      00520 
000130 500A           00521     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000132 100B           00522     iorwf   DATA_COUNTH, w
000134 E1F6           00523     bnz     ReadFlash           ; no, loop
000136 D094           00524     bra     SendChecksum        ; yes, send end of packet
                      00525 
                      00526 ; In:   <STX>[<0x02><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><BLOCKSH>]<CRCL><CRCH><ETX>
                      00527 ; Out:  <STX>[<CRCL1><CRCH1>...<CRCLn><CRCHn>]<ETX>
000138                00528 VerifyFlash:
000138 0009           00529     tblrd   *+
00013A 50F5           00530     movf    TABLAT, w    
00013C DFD3           00531     rcall   AddCrc
                      00532 
00013E 50F6           00533     movf    TBLPTRL, w          ; have we crossed into the next block?
                      00534 #if ERASE_FLASH_BLOCKSIZE > .255
                      00535     bnz     VerifyFlash
                      00536     movf    TBLPTRH, w
                      00537     andlw   high(ERASE_FLASH_BLOCKSIZE-1)
                      00538 #else
000140 0B3F           00539     andlw   (ERASE_FLASH_BLOCKSIZE-1)    
                      00540 #endif
000142 E1FA           00541     bnz     VerifyFlash
                      00542 
000144 5000           00543     movf    CRCL, w
000146 EC37 F001      00544     call    SendEscapeByte
00014A 5001           00545     movf    CRCH, w
00014C EC37 F001      00546     call    SendEscapeByte
                      00547 
000150 060A           00548     decf    DATA_COUNTL, f      ; decrement counter
000152 0E00           00549     movlw   0
000154 5A0B           00550     subwfb  DATA_COUNTH, f
                      00551 
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000156 500A           00552     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
000158 100B           00553     iorwf   DATA_COUNTH, w
00015A E1EE           00554     bnz     VerifyFlash         ; no, loop
00015C D085           00555     bra     SendETX             ; yes, send end of packet
                      00556 
                      00557 #ifdef SOFTWP
00015E 00FF           00558     reset                       ; this code -should- never be executed, but 
000160 00FF           00559     reset                       ; just in case of errant execution or buggy
000162 00FF           00560     reset                       ; firmware, these reset instructions may protect
000164 00FF           00561     reset                       ; against accidental erases.
                      00562 #endif
                      00563 
                      00564 ; In:   <STX>[<0x03><ADDRL><ADDRH><ADDRU><0x00><PAGESL>]<CRCL><CRCH><ETX>
                      00565 ; Out:  <STX>[<0x03>]<CRCL><CRCH><ETX>
000166                00566 EraseFlash:
                      00567 #ifdef SOFTWP
                      00568   #define ERASE_ADDRESS_MASK  (~(ERASE_FLASH_BLOCKSIZE-1))
                      00569   #if upper(ERASE_ADDRESS_MASK) != 0xFF
                      00570     movlw   upper(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundar
                            y
                      00571     andwf   TBLPTRU, f
                      00572   #endif
                      00573   #if high(ERASE_ADDRESS_MASK) != 0xFF
                      00574     movlw   high(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundary
                      00575     andwf   TBLPTRH, f
                      00576   #endif
                      00577   #if low(ERASE_ADDRESS_MASK) != 0xFF
000166 0EC0           00578     movlw   low(ERASE_ADDRESS_MASK)     ; force starting address to land on a FLASH Erase Block boundary
000168 16F6           00579     andwf   TBLPTRL, f
                      00580   #endif
                      00581 
                      00582     ; Verify Erase Address does not attempt to erase beyond the end of FLASH memory
00016A 0E00           00583     movlw   low(END_FLASH)
00016C 5CF6           00584     subwf   TBLPTRL, w
00016E 0E20           00585     movlw   high(END_FLASH)
000170 58F7           00586     subwfb  TBLPTRH, w
000172 0E00           00587     movlw   upper(END_FLASH)
000174 58F8           00588     subwfb  TBLPTRU, w
000176 E602           00589     bn      EraseEndFlashAddressOkay
                      00590 
000178 6AA6           00591     clrf    EECON1              ; inhibit writes for this block
00017A D017           00592     bra     NextEraseBlock      ; move on to next erase block
                      00593 #endif ; end #ifdef USE_SOFTBOOTWP
                      00594 
00017C                00595 EraseEndFlashAddressOkay:
                      00596 #ifdef USE_SOFTCONFIGWP
                      00597     #ifdef CONFIG_AS_FLASH
                      00598     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00599     subwf   TBLPTRL, w
                      00600     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00601     subwfb  TBLPTRH, w
                      00602     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00603     subwfb  TBLPTRU, w
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00604     bn      EraseConfigAddressOkay
                      00605 
                      00606     clrf    EECON1              ; inhibit writes for this block
                      00607     bra     NextEraseBlock      ; move on to next erase block
                      00608 
                      00609 EraseConfigAddressOkay:
                      00610     #endif ; end CONFIG_AS_FLASH
                      00611 #endif ; end USE_SOFTCONFIGWP
                      00612 
                      00613 #ifdef USE_SOFTBOOTWP
00017C 0E00           00614     movlw   low(BOOTLOADER_ADDRESS)
00017E 5CF6           00615     subwf   TBLPTRL, w
000180 0E00           00616     movlw   high(BOOTLOADER_ADDRESS)
000182 58F7           00617     subwfb  TBLPTRH, w
000184 0E00           00618     movlw   upper(BOOTLOADER_ADDRESS)
000186 58F8           00619     subwfb  TBLPTRU, w
000188 E60D           00620     bn      EraseAddressOkay
                      00621 
00018A 0E00           00622     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
00018C 5CF6           00623     subwf   TBLPTRL, w
00018E 0E04           00624     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
000190 58F7           00625     subwfb  TBLPTRH, w
000192 0E00           00626     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
000194 58F8           00627     subwfb  TBLPTRU, w
000196 E706           00628     bnn     EraseAddressOkay
                      00629 
000198 6AA6           00630     clrf    EECON1              ; inhibit writes for this block
00019A D007           00631     bra     NextEraseBlock      ; move on to next erase block
                      00632 
00019C 00FF           00633     reset                       ; this code -should- never be executed, but 
00019E 00FF           00634     reset                       ; just in case of errant execution or buggy
0001A0 00FF           00635     reset                       ; firmware, these reset instruction may protect
0001A2 00FF           00636     reset                       ; against accidental writes.
                      00637 #endif
                      00638 
0001A4                00639 EraseAddressOkay:
                      00640 #ifdef EEADR
0001A4 0E94           00641     movlw   b'10010100'         ; setup FLASH erase
                      00642 #else
                      00643     movlw   b'00010100'         ; setup FLASH erase for J device (no EEPROM bit)
                      00644 #endif
0001A6 6EA6           00645     movwf   EECON1
                      00646 
0001A8 D8C3           00647     rcall   StartWrite          ; erase the page
                      00648 
0001AA                00649 NextEraseBlock:
                      00650     ; Decrement address by erase block size
                      00651 #if ERASE_FLASH_BLOCKSIZE >= .256
                      00652     movlw   high(ERASE_FLASH_BLOCKSIZE)
                      00653     subwf   TBLPTRH, F
                      00654     clrf    WREG
                      00655     subwfb  TBLPTRU, F
                      00656 #else
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001AA 0E40           00657     movlw   ERASE_FLASH_BLOCKSIZE
0001AC 5EF6           00658     subwf   TBLPTRL, F
0001AE 6AE8           00659     clrf    WREG
0001B0 5AF7           00660     subwfb  TBLPTRH, F
0001B2 5AF8           00661     subwfb  TBLPTRU, F
                      00662 #endif
                      00663 
0001B4 2E0A           00664     decfsz  DATA_COUNTL, F
0001B6 D7D7           00665     bra     EraseFlash    
0001B8 D04F           00666     bra     SendAcknowledge     ; All done, send acknowledgement packet
                      00667 
                      00668 #ifdef SOFTWP
0001BA 00FF           00669     reset                       ; this code -should- never be executed, but 
0001BC 00FF           00670     reset                       ; just in case of errant execution or buggy
0001BE 00FF           00671     reset                       ; firmware, these reset instructions may protect
0001C0 00FF           00672     reset                       ; against accidental writes.
                      00673 #endif
                      00674 
                      00675 ; In:   <STX>[<0x04><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><DATA>...]<CRCL><CRCH><ETX>
                      00676 ; Out:  <STX>[<0x04>]<CRCL><CRCH><ETX>
0001C2                00677 WriteFlash:
                      00678 #ifdef SOFTWP
                      00679   #define WRITE_ADDRESS_MASK (~(WRITE_FLASH_BLOCKSIZE-1))
                      00680   #if upper(WRITE_ADDRESS_MASK) != 0xFF
                      00681     movlw   upper(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundar
                            y
                      00682     andwf   TBLPTRU, f
                      00683   #endif
                      00684   #if high(WRITE_ADDRESS_MASK) != 0xFF
                      00685     movlw   high(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundary
                      00686     andwf   TBLPTRH, f
                      00687   #endif
                      00688   #if low(WRITE_ADDRESS_MASK) != 0xFF
0001C2 0EF8           00689     movlw   low(WRITE_ADDRESS_MASK)     ; force starting address to land on a FLASH Write Block boundary
0001C4 16F6           00690     andwf   TBLPTRL, f
                      00691   #endif
                      00692 
                      00693     ; Verify Write Address does not attempt to write beyond the end of FLASH memory
0001C6 0E00           00694     movlw   low(END_FLASH)
0001C8 5CF6           00695     subwf   TBLPTRL, w
0001CA 0E20           00696     movlw   high(END_FLASH)
0001CC 58F7           00697     subwfb  TBLPTRH, w
0001CE 0E00           00698     movlw   upper(END_FLASH)
0001D0 58F8           00699     subwfb  TBLPTRU, w
0001D2 E602           00700     bn      WriteEndFlashAddressOkay
                      00701 
0001D4 6AA6           00702     clrf    EECON1              ; inhibit writes for this block
0001D6 D016           00703     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00704 #endif ; end #ifdef SOFTWP
                      00705 
0001D8                00706 WriteEndFlashAddressOkay:
                      00707 #ifdef USE_SOFTCONFIGWP
                      00708     #ifdef CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00709     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00710     subwf   TBLPTRL, w
                      00711     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00712     subwfb  TBLPTRH, w
                      00713     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00714     subwfb  TBLPTRU, w
                      00715     bn      WriteConfigAddressOkay
                      00716 
                      00717     clrf    EECON1              ; inhibit writes for this block
                      00718     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00719 
                      00720 WriteConfigAddressOkay:
                      00721     #endif ; end CONFIG_AS_FLASH
                      00722 #endif ; end USE_SOFTCONFIGWP
                      00723 
                      00724 #ifdef USE_SOFTBOOTWP
0001D8 0E00           00725     movlw   low(BOOTLOADER_ADDRESS)
0001DA 5CF6           00726     subwf   TBLPTRL, w
0001DC 0E00           00727     movlw   high(BOOTLOADER_ADDRESS)
0001DE 58F7           00728     subwfb  TBLPTRH, w
0001E0 0E00           00729     movlw   upper(BOOTLOADER_ADDRESS)
0001E2 58F8           00730     subwfb  TBLPTRU, w
0001E4 E60D           00731     bn      WriteAddressOkay
                      00732 
0001E6 0E00           00733     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001E8 5CF6           00734     subwf   TBLPTRL, w
0001EA 0E04           00735     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001EC 58F7           00736     subwfb  TBLPTRH, w
0001EE 0E00           00737     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
0001F0 58F8           00738     subwfb  TBLPTRU, w
0001F2 E706           00739     bnn     WriteAddressOkay
                      00740 
0001F4 6AA6           00741     clrf    EECON1                      ; inhibit writes for this block
0001F6 D006           00742     bra     LoadHoldingRegisters        ; fake the write so we can move on to real writes
                      00743 
0001F8 00FF           00744     reset                       ; this code -should- never be executed, but 
0001FA 00FF           00745     reset                       ; just in case of errant execution or buggy
0001FC 00FF           00746     reset                       ; firmware, these reset instruction may protect
0001FE 00FF           00747     reset                       ; against accidental writes.
                      00748 #endif
                      00749 
000200                00750 WriteAddressOkay:
                      00751 #ifdef EEADR
000200 0E84           00752     movlw   b'10000100'         ; Setup FLASH writes
                      00753 #else
                      00754     movlw   b'00000100'         ; Setup FLASH writes for J device (no EEPROM bit)
                      00755 #endif
000202 6EA6           00756     movwf   EECON1
                      00757 
000204                00758 LoadHoldingRegisters:
000204 CFEE FFF5      00759     movff   POSTINC0, TABLAT    ; Load the holding registers
                      00760     pmwtpi                      ; Same as tblwt *+
                          M #ifdef TBLWT_BUG
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     tblwt   *
                          M     tblrd   *+
                          M #else
000208 000D               M     tblwt   *+
                          M #endif
                      00761 
00020A 50F6           00762     movf    TBLPTRL, w          ; have we crossed into the next write block?
00020C 0B07           00763     andlw   (WRITE_FLASH_BLOCKSIZE-1)
00020E E1FA           00764     bnz     LoadHoldingRegisters; Not finished writing holding registers, repeat
                      00765 
000210 000A           00766     tblrd   *-                  ; Point back into the block to write data
000212 D88E           00767     rcall   StartWrite          ; initiate a page write
000214 0009           00768     tblrd   *+                  ; Restore pointer for loading holding registers with next block
                      00769 
000216 2E0A           00770     decfsz  DATA_COUNTL, F      
000218 D7D4           00771     bra     WriteFlash          ; Not finished writing all blocks, repeat
00021A D01E           00772     bra     SendAcknowledge     ; all done, send ACK packet
                      00773 
                      00774 ; In:   <STX>[<0x05><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00775 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
                      00776 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
00021C                00777 ReadEeprom:
00021C 6AA6           00778     clrf    EECON1 
00021E                00779 ReadEepromLoop:
00021E 80A6           00780     bsf     EECON1, RD          ; Read the data
000220 50A8           00781     movf    EEDATA, w
                      00782     #ifdef EEADRH
                      00783     infsnz  EEADR, F            ; Adjust EEDATA pointer
                      00784     incf    EEADRH, F
                      00785     #else
000222 2AA9           00786     incf    EEADR, F            ; Adjust EEDATA pointer
                      00787     #endif
000224 D824           00788     rcall   SendEscapeByte
000226 DF5E           00789     rcall   AddCrc
                      00790 
                      00791     #ifdef EEADRH
                      00792     decf    DATA_COUNTL, f      ; decrement counter
                      00793     movlw   0
                      00794     subwfb  DATA_COUNTH, f
                      00795 
                      00796     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
                      00797     iorwf   DATA_COUNTH, w
                      00798     bnz     ReadEepromLoop      ; no, loop
                      00799     bra     SendChecksum        ; yes, send end of packet
                      00800     #else
000228 2E0A           00801     decfsz  DATA_COUNTL, F
00022A D7F9           00802     bra     ReadEepromLoop      ; Not finished then repeat
00022C D019           00803     bra     SendChecksum
                      00804     #endif
                      00805 #endif ; end #ifdef EEADR
                      00806 
                      00807 ; In:   <STX>[<0x06><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH><DATA>...]<CRCL><CRCH><ETX>
                      00808 ; Out:  <STX>[<0x06>]<CRCL><CRCH><ETX>
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00809 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
00022E                00810 WriteEeprom:
00022E 0E04           00811     movlw   b'00000100'     ; Setup for EEPROM data writes
000230 6EA6           00812     movwf   EECON1
                      00813 
000232                00814 WriteEepromLoop:
000232 CFEC FFA8      00815     movff   PREINC0, EEDATA
000236 D87C           00816     rcall   StartWrite      
                      00817 
000238 B2A6           00818     btfsc   EECON1, WR      ; wait for write to complete before moving to next address
00023A D7FE           00819     bra     $-2
                      00820 
                      00821     #ifdef EEADRH
                      00822     infsnz  EEADR, F        ; Adjust EEDATA pointer
                      00823     incf    EEADRH, F
                      00824     #else
00023C 2AA9           00825     incf    EEADR, f        ; Adjust EEDATA pointer
                      00826     #endif
                      00827 
                      00828     #ifdef EEADRH
                      00829     decf    DATA_COUNTL, f      ; decrement counter
                      00830     movlw   0
                      00831     subwfb  DATA_COUNTH, f
                      00832 
                      00833     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
                      00834     iorwf   DATA_COUNTH, w
                      00835     bnz     WriteEepromLoop     ; no, loop
                      00836     bra     SendAcknowledge     ; yes, send end of packet
                      00837     #else
00023E 2E0A           00838     decfsz  DATA_COUNTL, f
000240 D7F8           00839     bra     WriteEepromLoop
000242 D00A           00840     bra     SendAcknowledge
                      00841     #endif
                      00842 #endif ; end #ifdef EEADR
                      00843  
                      00844 ; In:   <STX>[<0x07><ADDRL><ADDRH><ADDRU><0x00><BYTES><DATA>...]<CRCL><CRCH><ETX>
                      00845 ; Out:  <STX>[<0x07>]<CRCL><CRCH><ETX>
                      00846 #ifndef CONFIG_AS_FLASH     ; J flash devices store config words in FLASH, so no need for this code
                      00847     #ifndef USE_SOFTCONFIGWP
000244                00848 WriteConfig:
000244 0EC4           00849     movlw   b'11000100'
000246 6EA6           00850     movwf   EECON1
000248 0008           00851     tblrd   *               ; read existing value from config memory
                      00852 
00024A                00853 WriteConfigLoop:
00024A 50EE           00854     movf    POSTINC0, w
00024C 62F5           00855     cpfseq  TABLAT          ; is the proposed value already the same as existing value?
00024E D86E           00856     rcall   TableWriteWREG  ; write config memory only if necessary (save time and endurance)
000250 000B           00857     tblrd   +*              ; increment table pointer to next address and read existing value
000252 2E0A           00858     decfsz  DATA_COUNTL, F
000254 D7FA           00859     bra     WriteConfigLoop ; If more data available in packet, keep looping
                      00860 
000256 D000           00861     bra     SendAcknowledge ; Send acknowledge
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00862     #endif ; end #ifndef USE_SOFTCONFIGWP
                      00863 #endif ; end #ifndef CONFIG_AS_FLASH
                      00864     
                      00865 ;************************************************
                      00866 
                      00867 ; ***********************************************
                      00868 ; Send an acknowledgement packet back
                      00869 ;
                      00870 ; <STX><COMMAND><CRCL><CRCH><ETX>
                      00871 
                      00872 ; Some devices only have config words as FLASH memory. Some devices don't have EEPROM.
                      00873 ; For these devices, we can save code by jumping directly to sending back an
                      00874 ; acknowledgement packet if the PC application erroneously requests them.
                      00875 #ifdef CONFIG_AS_FLASH
                      00876 WriteConfig:
                      00877 #else
                      00878   #ifdef USE_SOFTCONFIGWP
                      00879 WriteConfig:
                      00880   #endif
                      00881 #endif ; end #ifdef CONFIG_AS_FLASH
                      00882 
                      00883 #ifndef EEADR
                      00884 ReadEeprom:
                      00885 WriteEeprom:
                      00886 #endif
                      00887 
000258                00888 SendAcknowledge:
000258 6AA6           00889     clrf    EECON1              ; inhibit write cycles to FLASH memory
                      00890 
00025A 5005           00891     movf    COMMAND, w
00025C D808           00892     rcall   SendEscapeByte      ; Send only the command byte (acknowledge packet)
00025E DF42           00893     rcall   AddCrc
                      00894 
000260                00895 SendChecksum:
000260 5000           00896     movf    CRCL, W
000262 D805           00897     rcall   SendEscapeByte
                      00898 
000264 5001           00899     movf    CRCH, W
000266 D803           00900     rcall   SendEscapeByte
                      00901 
000268                00902 SendETX:
000268 0E04           00903     movlw   ETX             ; Send stop condition
00026A D811           00904     rcall   SendHostByte
                      00905 
00026C D6F0           00906     bra     WaitForHostCommand
                      00907 ; *****************************************************************************
                      00908 
                      00909 ; *****************************************************************************
                      00910 ; Write a byte to the serial port while escaping control characters with a DLE
                      00911 ; first.
00026E                00912 SendEscapeByte:
00026E 6E03           00913     movwf   TXDATA          ; Save the data
                      00914  
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000270 0A0F           00915     xorlw   STX             ; Check for a STX
000272 E006           00916     bz      WrDLE           ; No, continue WrNext
                      00917 
000274 5003           00918     movf    TXDATA, W       
000276 0A04           00919     xorlw   ETX             ; Check for a ETX
000278 E003           00920     bz      WrDLE           ; No, continue WrNext
                      00921 
00027A 5003           00922     movf    TXDATA, W       
00027C 0A05           00923     xorlw   DLE             ; Check for a DLE
00027E E102           00924     bnz     WrNext          ; No, continue WrNext
                      00925 
000280                00926 WrDLE:
000280 0E05           00927     movlw   DLE             ; Yes, send DLE first
000282 D002           00928     bra     SendHostDLEByte
                      00929 
000284                00930 WrNext:
000284 5003           00931     movf    TXDATA, W       ; Then send STX
000286 D003           00932     bra     SendHostByte
                      00933     
000288                00934 SendHostDLEByte:
000288 EC7B F001      00935     call    DoWriteHostByte
00028C 5003           00936     movf    TXDATA, W
                      00937     
00028E                00938 SendHostByte:
00028E EC7B F001      00939     call    DoWriteHostByte
000292 0012           00940     return
                      00941         
                      00942 ; *****************************************************************************
                      00943 ; Host must set the INDATA before rising INCLK    
000294                00944 DoReadHostBit:
000294 4202           00945     rrncf   RXDATA, 1           ; RXDATA = RXDATA >> 1;
000296                00946 a1:    
000296 B480           00947     btfsc   PORTA, CS
000298 00FF           00948     reset
00029A A080           00949     btfss   PORTA, INCLK        ; wait clock go high
00029C D7FC           00950     bra     a1
00029E A280           00951     btfss   PORTA, INDATA       ; if INDATA == 1 then set RXDATA
0002A0 EF53 F001      00952     goto    a2
0002A4 8E02           00953     bsf     RXDATA, 7           ; set RXDATA's bit 7 to 1
0002A6                00954 a2:
0002A6 B480           00955     btfsc   PORTA, CS
0002A8 00FF           00956     reset
0002AA B080           00957     btfsc   PORTA, INCLK        ; wait clock go low
0002AC D7FC           00958     bra     a2
0002AE 0012           00959     return
                      00960     
                      00961 ; Host need to wait until OutData go high
                      00962 ; Host put data on InData, clock high, wait OutData to toggle, clock low
0002B0                00963 DoReadHostByte:
0002B0 6A02           00964     clrf    RXDATA
                      00965     ; Ready to receive
0002B2 EC4A F001      00966     call DoReadHostBit ; bit 0
0002B6 EC4A F001      00967     call DoReadHostBit ; bit 1
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002BA EC4A F001      00968     call DoReadHostBit ; bit 2
0002BE EC4A F001      00969     call DoReadHostBit ; bit 3
0002C2 EC4A F001      00970     call DoReadHostBit ; bit 4
0002C6 EC4A F001      00971     call DoReadHostBit ; bit 5
0002CA EC4A F001      00972     call DoReadHostBit ; bit 6
0002CE EC4A F001      00973     call DoReadHostBit ; bit 7
                      00974     ; W reg = contents of RXDATA
0002D2 5002           00975     movf    RXDATA, W
                      00976     ; Not ready to receive
                      00977     ClrOutData
0002D4 9C82               M     bcf     PORTC, OUTDATA
0002D6 0012           00978     return
                      00979 
                      00980 ; *****************************************************************************
0002D8                00981 DoWriteHostBit:
                      00982     ; check CS and clock high
0002D8                00983 b1:    
0002D8 B480           00984     btfsc   PORTA, CS
0002DA 00FF           00985     reset
0002DC A080           00986     btfss   PORTA, INCLK
0002DE D7FC           00987     bra     b1
                      00988     ; shift right TMP thru carry
0002E0 3204           00989     rrcf    TMP, 1
0002E2 E203           00990     bc      setbit
0002E4                00991 clrbit:
                      00992     ClrOutData
0002E4 9C82               M     bcf     PORTC, OUTDATA
0002E6 EF76 F001      00993     goto    b2
0002EA                00994 setbit:
                      00995     SetOutData
0002EA 8C82               M     bsf     PORTC, OUTDATA
0002EC                00996 b2:    
                      00997     ; check CS and clock low
0002EC B480           00998     btfsc   PORTA, CS
0002EE 00FF           00999     reset
0002F0 B080           01000     btfsc   PORTA, INCLK
0002F2 D7FC           01001     bra     b2
0002F4 0012           01002     return
                      01003  
                      01004 ; Host need to wait until OutData is high
                      01005 ; Then set clock high, wait 1 ms, read OutData, clock low for 1 ms 
0002F6                01006 DoWriteHostByte:
                      01007     ; Tx data ready
                      01008     SetOutData
0002F6 8C82               M     bsf     PORTC, OUTDATA
                      01009     ; Tx data
0002F8 6E04           01010     movwf   TMP ; TMP = WREG
0002FA EC6C F001      01011     call    DoWriteHostBit ; bit 0
0002FE EC6C F001      01012     call    DoWriteHostBit ; bit 1
000302 EC6C F001      01013     call    DoWriteHostBit ; bit 2
000306 EC6C F001      01014     call    DoWriteHostBit ; bit 3
00030A EC6C F001      01015     call    DoWriteHostBit ; bit 4
00030E EC6C F001      01016     call    DoWriteHostBit ; bit 5
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000312 EC6C F001      01017     call    DoWriteHostBit ; bit 6
000316 EC6C F001      01018     call    DoWriteHostBit ; bit 7
                      01019     ; Tx data done
                      01020     ClrOutData
00031A 9C82               M     bcf     PORTC, OUTDATA
00031C 0012           01021     return
                      01022 
                      01023 ; *****************************************************************************
00031E                01024 ReadHostByte:
00031E EC58 F001      01025     call    DoReadHostByte
000322 0012           01026     return
                      01027 ; *****************************************************************************
                      01028 
000324 00FF           01029     reset                       ; this code -should- never be executed, but 
000326 00FF           01030     reset                       ; just in case of errant execution or buggy
000328 00FF           01031     reset                       ; firmware, these instructions may protect
00032A 6AA6           01032     clrf    EECON1              ; against accidental erase/write operations.
                      01033 
                      01034 ; *****************************************************************************
                      01035 ; Unlock and start the write or erase sequence.
00032C                01036 TableWriteWREG:
00032C 6EF5           01037     movwf   TABLAT
00032E 000C           01038     tblwt   *
                      01039 
000330                01040 StartWrite:
000330 0E55           01041     movlw   0x55            ; Unlock
000332 6EA7           01042     movwf   EECON2
000334 0EAA           01043     movlw   0xAA
000336 6EA7           01044     movwf   EECON2
000338 82A6           01045     bsf     EECON1, WR      ; Start the write
00033A 0000           01046     nop
                      01047 
00033C 0012           01048     return
                      01049 ; *****************************************************************************
                      01050 
                      01051     END
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADDRESS_H                         00000007
ADDRESS_L                         00000006
ADDRESS_U                         00000008
ADDRESS_X                         00000009
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
AddCrc                            000000E4
AppHighIntVector                  0x408
AppLowIntVector                   0x418
AppVector                         0x400
AppendDataBuffer                  00000070
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BOOTBLOCKSIZE                     BOOTLOADERSIZE
BOOTLOADERSIZE                    .1024
BOOTLOADER_ADDRESS                0
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BootInfoBlock                     00000106
BootInfoBlockEnd                  00000110
BootloadMode                      0000002E
BootloaderBreakCheck              0000000C
BootloaderInfo                    00000110
BootloaderStart                   00000000
C                                 00000000
C1INV                             00000004
C1N                               00000000
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C1P                               00000003
C2INV                             00000005
C2N                               00000001
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
C2P                               00000002
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMMAND                           00000005
CRCH                              00000001
CRCL                              00000000
CREN                              00000004
CS                                RA2
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
CheckAppVector                    0000000E
CheckAppVector2                   0000001C
CheckCommand                      000000B4
ClrOutData                        
D                                 00000005
DATA_COUNTH                       0000000B
DATA_COUNTL                       0000000A
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEVICEID                          .265
DLE                               0x05
DONE                              00000001
D_A                               00000005
D_NOT_A                           00000005
DigitalInput                      
DoAutoBaud                        0000004E
DoReadHostBit                     00000294
DoReadHostByte                    000002B0
DoWriteHostBit                    000002D8
DoWriteHostByte                   000002F6
ECCP1AS                           00000FB6
ECCP1CON                          00000FBD
ECCP1DEL                          00000FB7
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
END_FLASH                         0x2000
END_GPR                           0x200
ERASE_ADDRESS_MASK                (~(ERASE_FLASH_BLOCKSIZE-1))
ERASE_FLASH_BLOCKSIZE             .64
ETX                               0x04
EraseAddressOkay                  000001A4
EraseEndFlashAddressOkay          0000017C
EraseFlash                        00000166
FAST                              00000001
FERR                              00000002
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GotoAppVector                     00000024
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HighPriorityInterruptVector       00000008
IDLEN                             00000007
INCLK                             RA0
INDATA                            RA1
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
JUMPTABLE_BEGIN                   000000BA
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
LoadHoldingRegisters              00000204
LowPriorityInterruptVector        00000018
MAJOR_VERSION                     .1
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

MCLR                              00000003
MINOR_VERSION                     .5
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NTX                               0xFF
NextEraseBlock                    000001AA
NoETX                             00000068
NoSTX                             00000062
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OUTDATA                           RC6
OV                                00000003
P                                 00000004
P1A                               00000002
PACKET_DATA                       0000000B
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDATA                            00000002
RXDTP                             00000005
RXPIN                             7
RXPORT                            PORTC
R_NOT_W                           00000002
R_W                               00000002
ReadEeprom                        0000021C
ReadEepromLoop                    0000021E
ReadFlash                         00000122
ReadHostByte                      0000031E
ReceiveDataLoop                   0000005C
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOFTWP                            
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STX                               0x0F
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SendAcknowledge                   00000258
SendChecksum                      00000260
SendETX                           00000268
SendEscapeByte                    0000026E
SendHostByte                      0000028E
SendHostDLEByte                   00000288
SetOutData                        
StartOfLine                       00000054
StartWrite                        00000330
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMP                               00000004
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXDATA                            00000003
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
TableWriteWREG                    0000032C
ToggleOutData                     
UA                                00000001
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

UARTNUM                           1
USE_AUTOBAUD                      
USE_MAX_INTOSC                    
USE_PLL                           
USE_SOFTBOOTWP                    
UxBAUDCON                         BAUDCON
UxPIR                             PIR1
UxRCIF                            RCIF
UxRCREG                           RCREG
UxRCSTA                           RCSTA
UxSPBRG                           SPBRG
UxSPBRGH                          SPBRGH
UxTXIF                            TXIF
UxTXREG                           TXREG
UxTXSTA                           TXSTA
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFM                             00000002
VREFP                             00000003
VerifyFlash                       00000138
VerifyPacketCRC                   00000076
VerifyPacketCrcLoop               00000082
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WRITE_ADDRESS_MASK                (~(WRITE_FLASH_BLOCKSIZE-1))
WRITE_FLASH_BLOCKSIZE             .8
WUE                               00000001
WaitForHostCommand                0000004E
WaitForRise                       000000D4
WaitForRiseLoop                   000000D6
WrDLE                             00000280
WrNext                            00000284
WriteAddressOkay                  00000200
WriteConfig                       00000244
WriteConfigLoop                   0000024A
WriteEeprom                       0000022E
WriteEepromLoop                   00000232
WriteEndFlashAddressOkay          000001D8
WriteFlash                        000001C2
WtSR                              000000DE
Z                                 00000002
_BBSIZ_BB1K_4L                    000000FF
_BBSIZ_BB256_4L                   000000CF
_BBSIZ_BB512_4L                   000000DF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_BOR_NOSLP_2L                     000000FD
_BOR_OFF_2L                       000000F9
_BOR_ON_2L                        000000FF
_BOR_SOFT_2L                      000000FB
_CCP2MX_RB3_3H                    000000FE
_CCP2MX_RC1_3H                    000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO_1H                      000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO1_1H                    000000F9
_OSC_INTIO2_1H                    000000F8
_OSC_LP_1H                        000000F0
_OSC_RCIO_1H                      000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_ANA_3H                    000000FF
_PBADEN_DIG_3H                    000000FD
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18LF2321                        00000001
a1                                00000296
a2                                000002A6
b1                                000002D8
b2                                000002EC
MPASM 5.73              PIC18 BOOTLOADER.ASM   6-19-2017  20:59:59         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

clrbit                            000002E4
pmwtpi                            
setbit                            000002EA


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXX--XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXX--
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:   835
Program Memory Bytes Free:  7357


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     2 suppressed

