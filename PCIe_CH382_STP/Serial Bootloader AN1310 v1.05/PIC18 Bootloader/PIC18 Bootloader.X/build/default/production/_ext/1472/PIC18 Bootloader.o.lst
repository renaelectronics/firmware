MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 ;
                      00025 ; Author        Date        Comment
                      00026 ; ************************************************************************
                      00027 ; E. Schlunder  07/20/2010  Software Boot Block Write Protect code 
                      00028 ;                           improved. 96KB memory size devices should
                      00029 ;                           work now.
                      00030 ; E. Schlunder  02/26/2010  Changed order of start up code so that PLLEN
                      00031 ;                           is enabled before we wait for RXD IDLE state. 
                      00032 ;                           This improves connection time/reliablity on 
                      00033 ;                           J devices.
                      00034 ; E. Schlunder  08/28/2009  Software Boot Block Write Protect option.
                      00035 ; E. Schlunder  07/09/2009  Brought back support for bootloader at 
                      00036 ;                           address 0 for hardware boot block write 
                      00037 ;                           protection on certain devices.
                      00038 ; E. Schlunder  05/07/2009  Replaced the simple checksum with a
                      00039 ;                           16-bit CCIT CRC checksum. 
                      00040 ;                           Added ReadFlashCrc command for quick verify.
                      00041 ; E. Schlunder  05/02/2009  Improved autobaud code to handle 1Mbps
                      00042 ;                           and BRG16/BRGH.
                      00043 ; E. Schlunder  05/01/2009  Added support for DEVICES.INC generated
                      00044 ;                           from Device Database tool. 
                      00045 ; E. Schlunder  04/29/2009  Added support for locating the bootloader
                      00046 ;                           at the end of program memory instead of
                      00047 ;                           the beginning. This will eventually let us
                      00048 ;                           use normal application firmware code without
                      00049 ;                           linker script modifications.
                      00050 ; E. Schlunder  04/26/2009  Optimized Config Write routine to avoid 
                      00051 ;                           re-writing values matching existing config
                      00052 ;                           data.
                      00053 ; E. Schlunder  04/24/2009  Optimized EEPROM Write routine a little bit.
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;                           Optimized FLASH Read routine to stream data
                      00055 ;                           directly from FLASH instead of using RAM
                      00056 ;                           buffer.
                      00057 ;                           Added option for faster STX acknowledgements.
                      00058 ; E. Schlunder  04/17/2009  Added code to enter bootloader mode if
                      00059 ;                           a serial break condition is detected on
                      00060 ;                           RXD as we come out of reset. This will
                      00061 ;                           make it possible to re-enter the bootloader
                      00062 ;                           even if the application firmware is missing
                      00063 ;                           code to re-enter bootloader mode.
                      00064 ;                           This also simplies the bootloader, as
                      00065 ;                           we do not need a boot flag any more.
                      00066 ; E. Schlunder  04/15/2009  Removed EOF command 8, new PC software
                      00067 ;                           does 64 byte block aligned writes at all
                      00068 ;                           times on J device, so there is no need for
                      00069 ;                           this command going forward.
                      00070 ; E. Schlunder  04/14/2009  Added a BootloadMode vector back at the 
                      00071 ;                           beginning of program memory so that user
                      00072 ;                           applications can jump back into the boot 
                      00073 ;                           loader without having to erase the boot flag.
                      00074 ; E. Schlunder  04/08/2009  Now initializes FSR2 to 0 so that the code 
                      00075 ;                           can operate under Extended Instruction Set
                      00076 ;                           mode if necessary.
                      00077 ; E. Schlunder  04/01/2009  Fixed bug in J_FLASH erase address increment.
                      00078 ;                           Added support for enabling PLL.
                      00079 ;                           Added support for inverted UART signaling.
                      00080 ;                           Added support for fixed (non-autobaud) 
                      00081 ;                           operation, helps with debugging code under ICD.
                      00082 ; E. Schlunder  03/25/2009  No longer attempts to use EEADRH on PIC18F4321.
                      00083 ;
                      00084 ; UART Bootloader for PIC18F by Ross Fosler 
                      00085 ; 09/01/2006  Modified to support PIC18xxJxx & 160k PIC18Fxxx Flash Devices
                      00086 ; 03/01/2002 ... First full implementation
                      00087 ; 03/07/2002 Changed entry method to use last byte of EEDATA.
                      00088 ;            Also removed all possible infinite loops w/ clrwdt.
                      00089 ; 03/07/2002 Added code for direct boot entry. I.E. boot vector.
                      00090 ; 03/09/2002 Changed the general packet format, removed the LEN field.
                      00091 ; 03/09/2002 Modified the erase command to do multiple row erase.
                      00092 ; 03/12/2002 Fixed write problem to CONFIG area. Write was offset by a byte.
                      00093 ; 03/15/2002 Added work around for 18F8720 tblwt*+ problem.
                      00094 ; 03/20/2002 Modified receive & parse engine to vector to autobaud on a checksum 
                      00095 ;            error since a chechsum error could likely be a communications problem.
                      00096 ; 03/22/2002 Removed clrwdt from the startup. This instruction affects the TO and 
                      00097 ;            PD flags. Removing this instruction should have no affect on code 
                      00098 ;       operation since the wdt is cleared on a reset and boot entry is always
                      00099 ;       on a reset.
                      00100 ; 03/22/2002    Modified the protocol to incorporate the autobaud as part of the 
                      00101 ;       first received <STX>. Doing this improves robustness by allowing
                      00102 ;       re-sync under any condition. Previously it was possible to enter a 
                      00103 ;       state where only a hard reset would allow re-syncing.
                      00104 ; 03/27/2002    Removed the boot vector and related code. This could lead to customer
                      00105 ;       issues. There is a very minute probability that errent code execution
                      00106 ;       could jump into the boot area and cause artificial boot entry.
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; *****************************************************************************
                      00108 #include <p18cxxx.inc>
                      00001   INCLUDE <mpasmx.inc>
                      00001         LIST
                      00002 ; mpasmx.inc  Standard Header File, Microchip Technology, Inc.
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 21 2017
                      00005 ;  MPASM PIC18LF2321 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01301         LIST
                      03715   ENDIF
                      03716  
                      03717   IFDEF __18LF25K80
                      03718     INCLUDE <p18lf25k80.inc>
                      03719   ENDIF
                      03720  
                      03721   IFDEF __18LF4420
                      03722     INCLUDE <p18lf4420.inc>
                      03723   ENDIF
                      03724  
                      03725   IFDEF __18F6622
                      03726     INCLUDE <p18f6622.inc>
                      03727   ENDIF
                      03728  
                      03729   IFDEF __18F66K22
                      03730     INCLUDE <p18f66k22.inc>
                      03731   ENDIF
                      03732  
                      03733   IFDEF __18LF8723
                      03734     INCLUDE <p18lf8723.inc>
                      03735   ENDIF
                      03736  
                      03737   IFDEF __18F2410
                      03738     INCLUDE <p18f2410.inc>
                      03739   ENDIF
                      03740  
                      03741   IFDEF __18LF248
                      03742     INCLUDE <p18lf248.inc>
                      03743   ENDIF
                      03744  
                      03745   IFDEF __MCV20USB
                      03746     INCLUDE <pmcv20usb.inc>
                      03747   ENDIF
                      03748  
                      00109 #include "devices.inc"
                      00001 #ifdef __18F13K22
                      00002      #define DEVICEID                .634
                      00003      #define WRITE_FLASH_BLOCKSIZE   .8
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004      #define ERASE_FLASH_BLOCKSIZE   .64
                      00005      #define END_FLASH               0x2000
                      00006      #define END_GPR                 0x100
                      00007 #endif
                      00008 
                      00009 #ifdef __18F13K50
                      00010      #define DEVICEID                .570
                      00011      #define WRITE_FLASH_BLOCKSIZE   .8
                      00012      #define ERASE_FLASH_BLOCKSIZE   .64
                      00013      #define END_FLASH               0x2000
                      00014      #define END_GPR                 0x300
                      00015 #endif
                      00016 
                      00017 #ifdef __18F14K22
                      00018      #define DEVICEID                .633
                      00019      #define WRITE_FLASH_BLOCKSIZE   .16
                      00020      #define ERASE_FLASH_BLOCKSIZE   .64
                      00021      #define END_FLASH               0x4000
                      00022      #define END_GPR                 0x200
                      00023 #endif
                      00024 
                      00025 #ifdef __18F14K50
                      00026      #define DEVICEID                .571
                      00027      #define WRITE_FLASH_BLOCKSIZE   .16
                      00028      #define ERASE_FLASH_BLOCKSIZE   .64
                      00029      #define END_FLASH               0x4000
                      00030      #define END_GPR                 0x300
                      00031 #endif
                      00032 
                      00033 #ifdef __18F23K20
                      00034      #define DEVICEID                .263
                      00035      #define WRITE_FLASH_BLOCKSIZE   .8
                      00036      #define ERASE_FLASH_BLOCKSIZE   .64
                      00037      #define END_FLASH               0x2000
                      00038      #define END_GPR                 0x200
                      00039 #endif
                      00040 
                      00041 #ifdef __18F23K22
                      00042      #define DEVICEID                .698
                      00043      #define WRITE_FLASH_BLOCKSIZE   .64
                      00044      #define ERASE_FLASH_BLOCKSIZE   .64
                      00045      #define END_FLASH               0x2000
                      00046      #define END_GPR                 0x200
                      00047 #endif
                      00048 
                      00049 #ifdef __18F24J10
                      00050      #define CONFIG_AS_FLASH
                      00051      #define DEVICEID                .232
                      00052      #define WRITE_FLASH_BLOCKSIZE   .64
                      00053      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00054      #define END_FLASH               0x4000
                      00055      #define END_GPR                 0x400
                      00056 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00057 
                      00058 #ifdef __18F24J11
                      00059      #define CONFIG_AS_FLASH
                      00060      #define DEVICEID                .620
                      00061      #define WRITE_FLASH_BLOCKSIZE   .64
                      00062      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00063      #define END_FLASH               0x4000
                      00064      #define END_GPR                 0xEC0
                      00065 #endif
                      00066 
                      00067 #ifdef __18F24J50
                      00068      #define CONFIG_AS_FLASH
                      00069      #define DEVICEID                .608
                      00070      #define WRITE_FLASH_BLOCKSIZE   .64
                      00071      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00072      #define END_FLASH               0x4000
                      00073      #define END_GPR                 0xEC0
                      00074 #endif
                      00075 
                      00076 #ifdef __18F24K20
                      00077      #define DEVICEID                .261
                      00078      #define WRITE_FLASH_BLOCKSIZE   .32
                      00079      #define ERASE_FLASH_BLOCKSIZE   .64
                      00080      #define END_FLASH               0x4000
                      00081      #define END_GPR                 0x300
                      00082 #endif
                      00083 
                      00084 #ifdef __18F24K22
                      00085      #define DEVICEID                .690
                      00086      #define WRITE_FLASH_BLOCKSIZE   .64
                      00087      #define ERASE_FLASH_BLOCKSIZE   .64
                      00088      #define END_FLASH               0x4000
                      00089      #define END_GPR                 0x300
                      00090 #endif
                      00091 
                      00092 #ifdef __18F25J10
                      00093      #define CONFIG_AS_FLASH
                      00094      #define DEVICEID                .224
                      00095      #define WRITE_FLASH_BLOCKSIZE   .64
                      00096      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00097      #define END_FLASH               0x8000
                      00098      #define END_GPR                 0x400
                      00099 #endif
                      00100 
                      00101 #ifdef __18F25J11
                      00102      #define CONFIG_AS_FLASH
                      00103      #define DEVICEID                .621
                      00104      #define WRITE_FLASH_BLOCKSIZE   .64
                      00105      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00106      #define END_FLASH               0x8000
                      00107      #define END_GPR                 0xEC0
                      00108 #endif
                      00109 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00110 #ifdef __18F25J50
                      00111      #define CONFIG_AS_FLASH
                      00112      #define DEVICEID                .609
                      00113      #define WRITE_FLASH_BLOCKSIZE   .64
                      00114      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00115      #define END_FLASH               0x8000
                      00116      #define END_GPR                 0xEC0
                      00117 #endif
                      00118 
                      00119 #ifdef __18F25K20
                      00120      #define DEVICEID                .259
                      00121      #define WRITE_FLASH_BLOCKSIZE   .32
                      00122      #define ERASE_FLASH_BLOCKSIZE   .64
                      00123      #define END_FLASH               0x8000
                      00124      #define END_GPR                 0x600
                      00125 #endif
                      00126 
                      00127 #ifdef __18F25K22
                      00128      #define DEVICEID                .682
                      00129      #define WRITE_FLASH_BLOCKSIZE   .64
                      00130      #define ERASE_FLASH_BLOCKSIZE   .64
                      00131      #define END_FLASH               0x8000
                      00132      #define END_GPR                 0x600
                      00133 #endif
                      00134 
                      00135 #ifdef __18F25K80
                      00136      #define DEVICEID                .780
                      00137      #define WRITE_FLASH_BLOCKSIZE   .64
                      00138      #define ERASE_FLASH_BLOCKSIZE   .64
                      00139      #define END_FLASH               0x8000
                      00140      #define END_GPR                 0xE41
                      00141 #endif
                      00142 
                      00143 #ifdef __18F26J11
                      00144      #define CONFIG_AS_FLASH
                      00145      #define DEVICEID                .622
                      00146      #define WRITE_FLASH_BLOCKSIZE   .64
                      00147      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00148      #define END_FLASH               0x10000
                      00149      #define END_GPR                 0xEC0
                      00150 #endif
                      00151 
                      00152 #ifdef __18F26J13
                      00153      #define CONFIG_AS_FLASH
                      00154      #define DEVICEID                .713
                      00155      #define WRITE_FLASH_BLOCKSIZE   .64
                      00156      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00157      #define END_FLASH               0x10000
                      00158      #define END_GPR                 0xEB0
                      00159 #endif
                      00160 
                      00161 #ifdef __18F26J50
                      00162      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00163      #define DEVICEID                .610
                      00164      #define WRITE_FLASH_BLOCKSIZE   .64
                      00165      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00166      #define END_FLASH               0x10000
                      00167      #define END_GPR                 0xEC0
                      00168 #endif
                      00169 
                      00170 #ifdef __18F26J53
                      00171      #define CONFIG_AS_FLASH
                      00172      #define DEVICEID                .705
                      00173      #define WRITE_FLASH_BLOCKSIZE   .64
                      00174      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00175      #define END_FLASH               0x10000
                      00176      #define END_GPR                 0xEB0
                      00177 #endif
                      00178 
                      00179 #ifdef __18F26K20
                      00180      #define DEVICEID                .257
                      00181      #define WRITE_FLASH_BLOCKSIZE   .64
                      00182      #define ERASE_FLASH_BLOCKSIZE   .64
                      00183      #define END_FLASH               0x10000
                      00184      #define END_GPR                 0xF60
                      00185 #endif
                      00186 
                      00187 #ifdef __18F26K22
                      00188      #define DEVICEID                .674
                      00189      #define WRITE_FLASH_BLOCKSIZE   .64
                      00190      #define ERASE_FLASH_BLOCKSIZE   .64
                      00191      #define END_FLASH               0x10000
                      00192      #define END_GPR                 0xF38
                      00193 #endif
                      00194 
                      00195 #ifdef __18F26K80
                      00196      #define DEVICEID                .777
                      00197      #define WRITE_FLASH_BLOCKSIZE   .64
                      00198      #define ERASE_FLASH_BLOCKSIZE   .64
                      00199      #define END_FLASH               0x10000
                      00200      #define END_GPR                 0xE41
                      00201 #endif
                      00202 
                      00203 #ifdef __18F27J13
                      00204      #define CONFIG_AS_FLASH
                      00205      #define DEVICEID                .715
                      00206      #define WRITE_FLASH_BLOCKSIZE   .64
                      00207      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00208      #define END_FLASH               0x20000
                      00209      #define END_GPR                 0xEB0
                      00210 #endif
                      00211 
                      00212 #ifdef __18F27J53
                      00213      #define CONFIG_AS_FLASH
                      00214      #define DEVICEID                .707
                      00215      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00216      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00217      #define END_FLASH               0x20000
                      00218      #define END_GPR                 0xEB0
                      00219 #endif
                      00220 
                      00221 #ifdef __18F43K20
                      00222      #define DEVICEID                .262
                      00223      #define WRITE_FLASH_BLOCKSIZE   .8
                      00224      #define ERASE_FLASH_BLOCKSIZE   .64
                      00225      #define END_FLASH               0x2000
                      00226      #define END_GPR                 0x200
                      00227 #endif
                      00228 
                      00229 #ifdef __18F43K22
                      00230      #define DEVICEID                .696
                      00231      #define WRITE_FLASH_BLOCKSIZE   .64
                      00232      #define ERASE_FLASH_BLOCKSIZE   .64
                      00233      #define END_FLASH               0x2000
                      00234      #define END_GPR                 0x200
                      00235 #endif
                      00236 
                      00237 #ifdef __18F44J10
                      00238      #define CONFIG_AS_FLASH
                      00239      #define DEVICEID                .233
                      00240      #define WRITE_FLASH_BLOCKSIZE   .64
                      00241      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00242      #define END_FLASH               0x4000
                      00243      #define END_GPR                 0x400
                      00244 #endif
                      00245 
                      00246 #ifdef __18F44J11
                      00247      #define CONFIG_AS_FLASH
                      00248      #define DEVICEID                .623
                      00249      #define WRITE_FLASH_BLOCKSIZE   .64
                      00250      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00251      #define END_FLASH               0x4000
                      00252      #define END_GPR                 0xEC0
                      00253 #endif
                      00254 
                      00255 #ifdef __18F44J50
                      00256      #define CONFIG_AS_FLASH
                      00257      #define DEVICEID                .611
                      00258      #define WRITE_FLASH_BLOCKSIZE   .64
                      00259      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00260      #define END_FLASH               0x4000
                      00261      #define END_GPR                 0xEC0
                      00262 #endif
                      00263 
                      00264 #ifdef __18F44K20
                      00265      #define DEVICEID                .260
                      00266      #define WRITE_FLASH_BLOCKSIZE   .32
                      00267      #define ERASE_FLASH_BLOCKSIZE   .64
                      00268      #define END_FLASH               0x4000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00269      #define END_GPR                 0x300
                      00270 #endif
                      00271 
                      00272 #ifdef __18F44K22
                      00273      #define DEVICEID                .688
                      00274      #define WRITE_FLASH_BLOCKSIZE   .64
                      00275      #define ERASE_FLASH_BLOCKSIZE   .64
                      00276      #define END_FLASH               0x4000
                      00277      #define END_GPR                 0x300
                      00278 #endif
                      00279 
                      00280 #ifdef __18F45J10
                      00281      #define CONFIG_AS_FLASH
                      00282      #define DEVICEID                .225
                      00283      #define WRITE_FLASH_BLOCKSIZE   .64
                      00284      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00285      #define END_FLASH               0x8000
                      00286      #define END_GPR                 0x400
                      00287 #endif
                      00288 
                      00289 #ifdef __18F45J11
                      00290      #define CONFIG_AS_FLASH
                      00291      #define DEVICEID                .624
                      00292      #define WRITE_FLASH_BLOCKSIZE   .64
                      00293      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00294      #define END_FLASH               0x8000
                      00295      #define END_GPR                 0xEC0
                      00296 #endif
                      00297 
                      00298 #ifdef __18F45J50
                      00299      #define CONFIG_AS_FLASH
                      00300      #define DEVICEID                .612
                      00301      #define WRITE_FLASH_BLOCKSIZE   .64
                      00302      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00303      #define END_FLASH               0x8000
                      00304      #define END_GPR                 0xEC0
                      00305 #endif
                      00306 
                      00307 #ifdef __18F45K20
                      00308      #define DEVICEID                .258
                      00309      #define WRITE_FLASH_BLOCKSIZE   .32
                      00310      #define ERASE_FLASH_BLOCKSIZE   .64
                      00311      #define END_FLASH               0x8000
                      00312      #define END_GPR                 0x600
                      00313 #endif
                      00314 
                      00315 #ifdef __18F45K22
                      00316      #define DEVICEID                .680
                      00317      #define WRITE_FLASH_BLOCKSIZE   .64
                      00318      #define ERASE_FLASH_BLOCKSIZE   .64
                      00319      #define END_FLASH               0x8000
                      00320      #define END_GPR                 0x600
                      00321 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00322 
                      00323 #ifdef __18F45K80
                      00324      #define DEVICEID                .779
                      00325      #define WRITE_FLASH_BLOCKSIZE   .64
                      00326      #define ERASE_FLASH_BLOCKSIZE   .64
                      00327      #define END_FLASH               0x8000
                      00328      #define END_GPR                 0xE41
                      00329 #endif
                      00330 
                      00331 #ifdef __18F46J11
                      00332      #define CONFIG_AS_FLASH
                      00333      #define DEVICEID                .625
                      00334      #define WRITE_FLASH_BLOCKSIZE   .64
                      00335      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00336      #define END_FLASH               0x10000
                      00337      #define END_GPR                 0xEC0
                      00338 #endif
                      00339 
                      00340 #ifdef __18F46J13
                      00341      #define CONFIG_AS_FLASH
                      00342      #define DEVICEID                .717
                      00343      #define WRITE_FLASH_BLOCKSIZE   .64
                      00344      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00345      #define END_FLASH               0x10000
                      00346      #define END_GPR                 0xEB0
                      00347 #endif
                      00348 
                      00349 #ifdef __18F46J50
                      00350      #define CONFIG_AS_FLASH
                      00351      #define DEVICEID                .613
                      00352      #define WRITE_FLASH_BLOCKSIZE   .64
                      00353      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00354      #define END_FLASH               0x10000
                      00355      #define END_GPR                 0xEC0
                      00356 #endif
                      00357 
                      00358 #ifdef __18F46J53
                      00359      #define CONFIG_AS_FLASH
                      00360      #define DEVICEID                .709
                      00361      #define WRITE_FLASH_BLOCKSIZE   .64
                      00362      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00363      #define END_FLASH               0x10000
                      00364      #define END_GPR                 0xEB0
                      00365 #endif
                      00366 
                      00367 #ifdef __18F46K20
                      00368      #define DEVICEID                .256
                      00369      #define WRITE_FLASH_BLOCKSIZE   .64
                      00370      #define ERASE_FLASH_BLOCKSIZE   .64
                      00371      #define END_FLASH               0x10000
                      00372      #define END_GPR                 0xF60
                      00373 #endif
                      00374 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00375 #ifdef __18F46K22
                      00376      #define DEVICEID                .672
                      00377      #define WRITE_FLASH_BLOCKSIZE   .64
                      00378      #define ERASE_FLASH_BLOCKSIZE   .64
                      00379      #define END_FLASH               0x10000
                      00380      #define END_GPR                 0xF38
                      00381 #endif
                      00382 
                      00383 #ifdef __18F46K80
                      00384      #define DEVICEID                .776
                      00385      #define WRITE_FLASH_BLOCKSIZE   .64
                      00386      #define ERASE_FLASH_BLOCKSIZE   .64
                      00387      #define END_FLASH               0x10000
                      00388      #define END_GPR                 0xE41
                      00389 #endif
                      00390 
                      00391 #ifdef __18F47J13
                      00392      #define CONFIG_AS_FLASH
                      00393      #define DEVICEID                .719
                      00394      #define WRITE_FLASH_BLOCKSIZE   .64
                      00395      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00396      #define END_FLASH               0x20000
                      00397      #define END_GPR                 0xEB0
                      00398 #endif
                      00399 
                      00400 #ifdef __18F47J53
                      00401      #define CONFIG_AS_FLASH
                      00402      #define DEVICEID                .711
                      00403      #define WRITE_FLASH_BLOCKSIZE   .64
                      00404      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00405      #define END_FLASH               0x20000
                      00406      #define END_GPR                 0xEB0
                      00407 #endif
                      00408 
                      00409 #ifdef __18F63J11
                      00410      #define CONFIG_AS_FLASH
                      00411      #define DEVICEID                .456
                      00412      #define WRITE_FLASH_BLOCKSIZE   .64
                      00413      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00414      #define END_FLASH               0x2000
                      00415      #define END_GPR                 0x400
                      00416 #endif
                      00417 
                      00418 #ifdef __18F63J90
                      00419      #define CONFIG_AS_FLASH
                      00420      #define DEVICEID                .448
                      00421      #define WRITE_FLASH_BLOCKSIZE   .64
                      00422      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00423      #define END_FLASH               0x2000
                      00424      #define END_GPR                 0x400
                      00425 #endif
                      00426 
                      00427 #ifdef __18F64J11
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00428      #define CONFIG_AS_FLASH
                      00429      #define DEVICEID                .457
                      00430      #define WRITE_FLASH_BLOCKSIZE   .64
                      00431      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00432      #define END_FLASH               0x4000
                      00433      #define END_GPR                 0x400
                      00434 #endif
                      00435 
                      00436 #ifdef __18F64J90
                      00437      #define CONFIG_AS_FLASH
                      00438      #define DEVICEID                .449
                      00439      #define WRITE_FLASH_BLOCKSIZE   .64
                      00440      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00441      #define END_FLASH               0x4000
                      00442      #define END_GPR                 0x400
                      00443 #endif
                      00444 
                      00445 #ifdef __18F65J10
                      00446      #define CONFIG_AS_FLASH
                      00447      #define DEVICEID                .169
                      00448      #define WRITE_FLASH_BLOCKSIZE   .64
                      00449      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00450      #define END_FLASH               0x8000
                      00451      #define END_GPR                 0x800
                      00452 #endif
                      00453 
                      00454 #ifdef __18F65J11
                      00455      #define CONFIG_AS_FLASH
                      00456      #define DEVICEID                .459
                      00457      #define WRITE_FLASH_BLOCKSIZE   .64
                      00458      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00459      #define END_FLASH               0x8000
                      00460      #define END_GPR                 0x800
                      00461 #endif
                      00462 
                      00463 #ifdef __18F65J15
                      00464      #define CONFIG_AS_FLASH
                      00465      #define DEVICEID                .170
                      00466      #define WRITE_FLASH_BLOCKSIZE   .64
                      00467      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00468      #define END_FLASH               0xC000
                      00469      #define END_GPR                 0x800
                      00470 #endif
                      00471 
                      00472 #ifdef __18F65J50
                      00473      #define CONFIG_AS_FLASH
                      00474      #define DEVICEID                .520
                      00475      #define WRITE_FLASH_BLOCKSIZE   .64
                      00476      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00477      #define END_FLASH               0x8000
                      00478      #define END_GPR                 0xF40
                      00479 #endif
                      00480 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00481 #ifdef __18F65J90
                      00482      #define CONFIG_AS_FLASH
                      00483      #define DEVICEID                .451
                      00484      #define WRITE_FLASH_BLOCKSIZE   .64
                      00485      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00486      #define END_FLASH               0x8000
                      00487      #define END_GPR                 0x800
                      00488 #endif
                      00489 
                      00490 #ifdef __18F65K22
                      00491      #define DEVICEID                .664
                      00492      #define WRITE_FLASH_BLOCKSIZE   .64
                      00493      #define ERASE_FLASH_BLOCKSIZE   .64
                      00494      #define END_FLASH               0x8000
                      00495      #define END_GPR                 0x800
                      00496 #endif
                      00497 
                      00498 #ifdef __18F65K80
                      00499      #define DEVICEID                .778
                      00500      #define WRITE_FLASH_BLOCKSIZE   .64
                      00501      #define ERASE_FLASH_BLOCKSIZE   .64
                      00502      #define END_FLASH               0x8000
                      00503      #define END_GPR                 0xE41
                      00504 #endif
                      00505 
                      00506 #ifdef __18F65K90
                      00507      #define DEVICEID                .658
                      00508      #define WRITE_FLASH_BLOCKSIZE   .64
                      00509      #define ERASE_FLASH_BLOCKSIZE   .64
                      00510      #define END_FLASH               0x8000
                      00511      #define END_GPR                 0x800
                      00512 #endif
                      00513 
                      00514 #ifdef __18F66J10
                      00515      #define CONFIG_AS_FLASH
                      00516      #define DEVICEID                .171
                      00517      #define WRITE_FLASH_BLOCKSIZE   .64
                      00518      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00519      #define END_FLASH               0x10000
                      00520      #define END_GPR                 0x800
                      00521 #endif
                      00522 
                      00523 #ifdef __18F66J11
                      00524      #define CONFIG_AS_FLASH
                      00525      #define DEVICEID                .546
                      00526      #define WRITE_FLASH_BLOCKSIZE   .64
                      00527      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00528      #define END_FLASH               0x10000
                      00529      #define END_GPR                 0xF40
                      00530 #endif
                      00531 
                      00532 #ifdef __18F66J15
                      00533      #define CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00534      #define DEVICEID                .172
                      00535      #define WRITE_FLASH_BLOCKSIZE   .64
                      00536      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00537      #define END_FLASH               0x18000
                      00538      #define END_GPR                 0xF60
                      00539 #endif
                      00540 
                      00541 #ifdef __18F66J16
                      00542      #define CONFIG_AS_FLASH
                      00543      #define DEVICEID                .547
                      00544      #define WRITE_FLASH_BLOCKSIZE   .64
                      00545      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00546      #define END_FLASH               0x18000
                      00547      #define END_GPR                 0xF40
                      00548 #endif
                      00549 
                      00550 #ifdef __18F66J50
                      00551      #define CONFIG_AS_FLASH
                      00552      #define DEVICEID                .522
                      00553      #define WRITE_FLASH_BLOCKSIZE   .64
                      00554      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00555      #define END_FLASH               0x10000
                      00556      #define END_GPR                 0xF40
                      00557 #endif
                      00558 
                      00559 #ifdef __18F66J55
                      00560      #define CONFIG_AS_FLASH
                      00561      #define DEVICEID                .523
                      00562      #define WRITE_FLASH_BLOCKSIZE   .64
                      00563      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00564      #define END_FLASH               0x18000
                      00565      #define END_GPR                 0xF40
                      00566 #endif
                      00567 
                      00568 #ifdef __18F66J60
                      00569      #define CONFIG_AS_FLASH
                      00570      #define DEVICEID                .192
                      00571      #define WRITE_FLASH_BLOCKSIZE   .64
                      00572      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00573      #define END_FLASH               0x10000
                      00574      #define END_GPR                 0xE80
                      00575 #endif
                      00576 
                      00577 #ifdef __18F66J65
                      00578      #define CONFIG_AS_FLASH
                      00579      #define DEVICEID                .248
                      00580      #define WRITE_FLASH_BLOCKSIZE   .64
                      00581      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00582      #define END_FLASH               0x18000
                      00583      #define END_GPR                 0xE80
                      00584 #endif
                      00585 
                      00586 #ifdef __18F66J90
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00587      #define CONFIG_AS_FLASH
                      00588      #define DEVICEID                .640
                      00589      #define WRITE_FLASH_BLOCKSIZE   .64
                      00590      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00591      #define END_FLASH               0x10000
                      00592      #define END_GPR                 0xF54
                      00593 #endif
                      00594 
                      00595 #ifdef __18F66J93
                      00596      #define CONFIG_AS_FLASH
                      00597      #define DEVICEID                .642
                      00598      #define WRITE_FLASH_BLOCKSIZE   .64
                      00599      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00600      #define END_FLASH               0x10000
                      00601      #define END_GPR                 0xF54
                      00602 #endif
                      00603 
                      00604 #ifdef __18F66K22
                      00605      #define DEVICEID                .662
                      00606      #define WRITE_FLASH_BLOCKSIZE   .64
                      00607      #define ERASE_FLASH_BLOCKSIZE   .64
                      00608      #define END_FLASH               0x10000
                      00609      #define END_GPR                 0xF16
                      00610 #endif
                      00611 
                      00612 #ifdef __18F66K80
                      00613      #define DEVICEID                .775
                      00614      #define WRITE_FLASH_BLOCKSIZE   .64
                      00615      #define ERASE_FLASH_BLOCKSIZE   .64
                      00616      #define END_FLASH               0x10000
                      00617      #define END_GPR                 0xE41
                      00618 #endif
                      00619 
                      00620 #ifdef __18F66K90
                      00621      #define DEVICEID                .656
                      00622      #define WRITE_FLASH_BLOCKSIZE   .64
                      00623      #define ERASE_FLASH_BLOCKSIZE   .64
                      00624      #define END_FLASH               0x10000
                      00625      #define END_GPR                 0xEF4
                      00626 #endif
                      00627 
                      00628 #ifdef __18F67J10
                      00629      #define CONFIG_AS_FLASH
                      00630      #define DEVICEID                .173
                      00631      #define WRITE_FLASH_BLOCKSIZE   .64
                      00632      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00633      #define END_FLASH               0x20000
                      00634      #define END_GPR                 0xF60
                      00635 #endif
                      00636 
                      00637 #ifdef __18F67J11
                      00638      #define CONFIG_AS_FLASH
                      00639      #define DEVICEID                .548
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00640      #define WRITE_FLASH_BLOCKSIZE   .64
                      00641      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00642      #define END_FLASH               0x20000
                      00643      #define END_GPR                 0xF40
                      00644 #endif
                      00645 
                      00646 #ifdef __18F67J50
                      00647      #define CONFIG_AS_FLASH
                      00648      #define DEVICEID                .524
                      00649      #define WRITE_FLASH_BLOCKSIZE   .64
                      00650      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00651      #define END_FLASH               0x20000
                      00652      #define END_GPR                 0xF40
                      00653 #endif
                      00654 
                      00655 #ifdef __18F67J60
                      00656      #define CONFIG_AS_FLASH
                      00657      #define DEVICEID                .249
                      00658      #define WRITE_FLASH_BLOCKSIZE   .64
                      00659      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00660      #define END_FLASH               0x20000
                      00661      #define END_GPR                 0xE80
                      00662 #endif
                      00663 
                      00664 #ifdef __18F67J90
                      00665      #define CONFIG_AS_FLASH
                      00666      #define DEVICEID                .641
                      00667      #define WRITE_FLASH_BLOCKSIZE   .64
                      00668      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00669      #define END_FLASH               0x20000
                      00670      #define END_GPR                 0xF54
                      00671 #endif
                      00672 
                      00673 #ifdef __18F67J93
                      00674      #define CONFIG_AS_FLASH
                      00675      #define DEVICEID                .643
                      00676      #define WRITE_FLASH_BLOCKSIZE   .64
                      00677      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00678      #define END_FLASH               0x20000
                      00679      #define END_GPR                 0xF54
                      00680 #endif
                      00681 
                      00682 #ifdef __18F67K22
                      00683      #define DEVICEID                .652
                      00684      #define WRITE_FLASH_BLOCKSIZE   .128
                      00685      #define ERASE_FLASH_BLOCKSIZE   .128
                      00686      #define END_FLASH               0x20000
                      00687      #define END_GPR                 0xF16
                      00688 #endif
                      00689 
                      00690 #ifdef __18F67K90
                      00691      #define DEVICEID                .648
                      00692      #define WRITE_FLASH_BLOCKSIZE   .128
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00693      #define ERASE_FLASH_BLOCKSIZE   .128
                      00694      #define END_FLASH               0x20000
                      00695      #define END_GPR                 0xEF4
                      00696 #endif
                      00697 
                      00698 #ifdef __18F83J11
                      00699      #define CONFIG_AS_FLASH
                      00700      #define DEVICEID                .460
                      00701      #define WRITE_FLASH_BLOCKSIZE   .64
                      00702      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00703      #define END_FLASH               0x2000
                      00704      #define END_GPR                 0x400
                      00705 #endif
                      00706 
                      00707 #ifdef __18F83J90
                      00708      #define CONFIG_AS_FLASH
                      00709      #define DEVICEID                .452
                      00710      #define WRITE_FLASH_BLOCKSIZE   .64
                      00711      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00712      #define END_FLASH               0x2000
                      00713      #define END_GPR                 0x400
                      00714 #endif
                      00715 
                      00716 #ifdef __18F84J11
                      00717      #define CONFIG_AS_FLASH
                      00718      #define DEVICEID                .461
                      00719      #define WRITE_FLASH_BLOCKSIZE   .64
                      00720      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00721      #define END_FLASH               0x4000
                      00722      #define END_GPR                 0x400
                      00723 #endif
                      00724 
                      00725 #ifdef __18F84J90
                      00726      #define CONFIG_AS_FLASH
                      00727      #define DEVICEID                .453
                      00728      #define WRITE_FLASH_BLOCKSIZE   .64
                      00729      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00730      #define END_FLASH               0x4000
                      00731      #define END_GPR                 0x400
                      00732 #endif
                      00733 
                      00734 #ifdef __18F85J10
                      00735      #define CONFIG_AS_FLASH
                      00736      #define DEVICEID                .175
                      00737      #define WRITE_FLASH_BLOCKSIZE   .64
                      00738      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00739      #define END_FLASH               0x8000
                      00740      #define END_GPR                 0x800
                      00741 #endif
                      00742 
                      00743 #ifdef __18F85J11
                      00744      #define CONFIG_AS_FLASH
                      00745      #define DEVICEID                .463
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00746      #define WRITE_FLASH_BLOCKSIZE   .64
                      00747      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00748      #define END_FLASH               0x8000
                      00749      #define END_GPR                 0x800
                      00750 #endif
                      00751 
                      00752 #ifdef __18F85J15
                      00753      #define CONFIG_AS_FLASH
                      00754      #define DEVICEID                .184
                      00755      #define WRITE_FLASH_BLOCKSIZE   .64
                      00756      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00757      #define END_FLASH               0xC000
                      00758      #define END_GPR                 0x800
                      00759 #endif
                      00760 
                      00761 #ifdef __18F85J50
                      00762      #define CONFIG_AS_FLASH
                      00763      #define DEVICEID                .525
                      00764      #define WRITE_FLASH_BLOCKSIZE   .64
                      00765      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00766      #define END_FLASH               0x8000
                      00767      #define END_GPR                 0xF40
                      00768 #endif
                      00769 
                      00770 #ifdef __18F85J90
                      00771      #define CONFIG_AS_FLASH
                      00772      #define DEVICEID                .455
                      00773      #define WRITE_FLASH_BLOCKSIZE   .64
                      00774      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00775      #define END_FLASH               0x8000
                      00776      #define END_GPR                 0x800
                      00777 #endif
                      00778 
                      00779 #ifdef __18F85K22
                      00780      #define DEVICEID                .667
                      00781      #define WRITE_FLASH_BLOCKSIZE   .64
                      00782      #define ERASE_FLASH_BLOCKSIZE   .64
                      00783      #define END_FLASH               0x8000
                      00784      #define END_GPR                 0x800
                      00785 #endif
                      00786 
                      00787 #ifdef __18F85K90
                      00788      #define DEVICEID                .661
                      00789      #define WRITE_FLASH_BLOCKSIZE   .64
                      00790      #define ERASE_FLASH_BLOCKSIZE   .64
                      00791      #define END_FLASH               0x8000
                      00792      #define END_GPR                 0x800
                      00793 #endif
                      00794 
                      00795 #ifdef __18F86J10
                      00796      #define CONFIG_AS_FLASH
                      00797      #define DEVICEID                .185
                      00798      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00799      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00800      #define END_FLASH               0x10000
                      00801      #define END_GPR                 0x800
                      00802 #endif
                      00803 
                      00804 #ifdef __18F86J11
                      00805      #define CONFIG_AS_FLASH
                      00806      #define DEVICEID                .551
                      00807      #define WRITE_FLASH_BLOCKSIZE   .64
                      00808      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00809      #define END_FLASH               0x10000
                      00810      #define END_GPR                 0xF40
                      00811 #endif
                      00812 
                      00813 #ifdef __18F86J15
                      00814      #define CONFIG_AS_FLASH
                      00815      #define DEVICEID                .186
                      00816      #define WRITE_FLASH_BLOCKSIZE   .64
                      00817      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00818      #define END_FLASH               0x18000
                      00819      #define END_GPR                 0xF60
                      00820 #endif
                      00821 
                      00822 #ifdef __18F86J16
                      00823      #define CONFIG_AS_FLASH
                      00824      #define DEVICEID                .552
                      00825      #define WRITE_FLASH_BLOCKSIZE   .64
                      00826      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00827      #define END_FLASH               0x18000
                      00828      #define END_GPR                 0xF40
                      00829 #endif
                      00830 
                      00831 #ifdef __18F86J50
                      00832      #define CONFIG_AS_FLASH
                      00833      #define DEVICEID                .527
                      00834      #define WRITE_FLASH_BLOCKSIZE   .64
                      00835      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00836      #define END_FLASH               0x10000
                      00837      #define END_GPR                 0xF40
                      00838 #endif
                      00839 
                      00840 #ifdef __18F86J55
                      00841      #define CONFIG_AS_FLASH
                      00842      #define DEVICEID                .528
                      00843      #define WRITE_FLASH_BLOCKSIZE   .64
                      00844      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00845      #define END_FLASH               0x18000
                      00846      #define END_GPR                 0xF40
                      00847 #endif
                      00848 
                      00849 #ifdef __18F86J60
                      00850      #define CONFIG_AS_FLASH
                      00851      #define DEVICEID                .193
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00852      #define WRITE_FLASH_BLOCKSIZE   .64
                      00853      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00854      #define END_FLASH               0x10000
                      00855      #define END_GPR                 0xE80
                      00856 #endif
                      00857 
                      00858 #ifdef __18F86J65
                      00859      #define CONFIG_AS_FLASH
                      00860      #define DEVICEID                .250
                      00861      #define WRITE_FLASH_BLOCKSIZE   .64
                      00862      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00863      #define END_FLASH               0x18000
                      00864      #define END_GPR                 0xE80
                      00865 #endif
                      00866 
                      00867 #ifdef __18F86J72
                      00868      #define CONFIG_AS_FLASH
                      00869      #define DEVICEID                .642
                      00870      #define WRITE_FLASH_BLOCKSIZE   .64
                      00871      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00872      #define END_FLASH               0x10000
                      00873      #define END_GPR                 0xF54
                      00874 #endif
                      00875 
                      00876 #ifdef __18F86J90
                      00877      #define CONFIG_AS_FLASH
                      00878      #define DEVICEID                .644
                      00879      #define WRITE_FLASH_BLOCKSIZE   .64
                      00880      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00881      #define END_FLASH               0x10000
                      00882      #define END_GPR                 0xF54
                      00883 #endif
                      00884 
                      00885 #ifdef __18F86J93
                      00886      #define CONFIG_AS_FLASH
                      00887      #define DEVICEID                .646
                      00888      #define WRITE_FLASH_BLOCKSIZE   .64
                      00889      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00890      #define END_FLASH               0x10000
                      00891      #define END_GPR                 0xF54
                      00892 #endif
                      00893 
                      00894 #ifdef __18F86K22
                      00895      #define DEVICEID                .665
                      00896      #define WRITE_FLASH_BLOCKSIZE   .64
                      00897      #define ERASE_FLASH_BLOCKSIZE   .64
                      00898      #define END_FLASH               0x10000
                      00899      #define END_GPR                 0xF16
                      00900 #endif
                      00901 
                      00902 #ifdef __18F86K90
                      00903      #define DEVICEID                .659
                      00904      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00905      #define ERASE_FLASH_BLOCKSIZE   .64
                      00906      #define END_FLASH               0x10000
                      00907      #define END_GPR                 0xEF4
                      00908 #endif
                      00909 
                      00910 #ifdef __18F87J10
                      00911      #define CONFIG_AS_FLASH
                      00912      #define DEVICEID                .187
                      00913      #define WRITE_FLASH_BLOCKSIZE   .64
                      00914      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00915      #define END_FLASH               0x20000
                      00916      #define END_GPR                 0xF60
                      00917 #endif
                      00918 
                      00919 #ifdef __18F87J11
                      00920      #define CONFIG_AS_FLASH
                      00921      #define DEVICEID                .553
                      00922      #define WRITE_FLASH_BLOCKSIZE   .64
                      00923      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00924      #define END_FLASH               0x20000
                      00925      #define END_GPR                 0xF40
                      00926 #endif
                      00927 
                      00928 #ifdef __18F87J50
                      00929      #define CONFIG_AS_FLASH
                      00930      #define DEVICEID                .529
                      00931      #define WRITE_FLASH_BLOCKSIZE   .64
                      00932      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00933      #define END_FLASH               0x20000
                      00934      #define END_GPR                 0xF40
                      00935 #endif
                      00936 
                      00937 #ifdef __18F87J60
                      00938      #define CONFIG_AS_FLASH
                      00939      #define DEVICEID                .251
                      00940      #define WRITE_FLASH_BLOCKSIZE   .64
                      00941      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00942      #define END_FLASH               0x20000
                      00943      #define END_GPR                 0xE80
                      00944 #endif
                      00945 
                      00946 #ifdef __18F87J72
                      00947      #define CONFIG_AS_FLASH
                      00948      #define DEVICEID                .643
                      00949      #define WRITE_FLASH_BLOCKSIZE   .64
                      00950      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00951      #define END_FLASH               0x20000
                      00952      #define END_GPR                 0xF54
                      00953 #endif
                      00954 
                      00955 #ifdef __18F87J90
                      00956      #define CONFIG_AS_FLASH
                      00957      #define DEVICEID                .645
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00958      #define WRITE_FLASH_BLOCKSIZE   .64
                      00959      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00960      #define END_FLASH               0x20000
                      00961      #define END_GPR                 0xF54
                      00962 #endif
                      00963 
                      00964 #ifdef __18F87J93
                      00965      #define CONFIG_AS_FLASH
                      00966      #define DEVICEID                .647
                      00967      #define WRITE_FLASH_BLOCKSIZE   .64
                      00968      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00969      #define END_FLASH               0x20000
                      00970      #define END_GPR                 0xF54
                      00971 #endif
                      00972 
                      00973 #ifdef __18F87K22
                      00974      #define DEVICEID                .654
                      00975      #define WRITE_FLASH_BLOCKSIZE   .128
                      00976      #define ERASE_FLASH_BLOCKSIZE   .128
                      00977      #define END_FLASH               0x20000
                      00978      #define END_GPR                 0xF16
                      00979 #endif
                      00980 
                      00981 #ifdef __18F87K90
                      00982      #define DEVICEID                .650
                      00983      #define WRITE_FLASH_BLOCKSIZE   .128
                      00984      #define ERASE_FLASH_BLOCKSIZE   .128
                      00985      #define END_FLASH               0x20000
                      00986      #define END_GPR                 0xEF4
                      00987 #endif
                      00988 
                      00989 #ifdef __18F96J60
                      00990      #define CONFIG_AS_FLASH
                      00991      #define DEVICEID                .194
                      00992      #define WRITE_FLASH_BLOCKSIZE   .64
                      00993      #define ERASE_FLASH_BLOCKSIZE   .1024
                      00994      #define END_FLASH               0x10000
                      00995      #define END_GPR                 0xE80
                      00996 #endif
                      00997 
                      00998 #ifdef __18F96J65
                      00999      #define CONFIG_AS_FLASH
                      01000      #define DEVICEID                .252
                      01001      #define WRITE_FLASH_BLOCKSIZE   .64
                      01002      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01003      #define END_FLASH               0x18000
                      01004      #define END_GPR                 0xE80
                      01005 #endif
                      01006 
                      01007 #ifdef __18F97J60
                      01008      #define CONFIG_AS_FLASH
                      01009      #define DEVICEID                .253
                      01010      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01011      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01012      #define END_FLASH               0x20000
                      01013      #define END_GPR                 0xE80
                      01014 #endif
                      01015 
                      01016 #ifdef __18F242
                      01017      #define DEVICEID                .36
                      01018      #define WRITE_FLASH_BLOCKSIZE   .8
                      01019      #define ERASE_FLASH_BLOCKSIZE   .64
                      01020      #define END_FLASH               0x4000
                      01021      #define END_GPR                 0x300
                      01022 #endif
                      01023 
                      01024 #ifdef __18F248
                      01025      #define DEVICEID                .64
                      01026      #define WRITE_FLASH_BLOCKSIZE   .8
                      01027      #define ERASE_FLASH_BLOCKSIZE   .64
                      01028      #define END_FLASH               0x4000
                      01029      #define END_GPR                 0x300
                      01030 #endif
                      01031 
                      01032 #ifdef __18F252
                      01033      #define DEVICEID                .32
                      01034      #define WRITE_FLASH_BLOCKSIZE   .8
                      01035      #define ERASE_FLASH_BLOCKSIZE   .64
                      01036      #define END_FLASH               0x8000
                      01037      #define END_GPR                 0x600
                      01038 #endif
                      01039 
                      01040 #ifdef __18F258
                      01041      #define DEVICEID                .66
                      01042      #define WRITE_FLASH_BLOCKSIZE   .8
                      01043      #define ERASE_FLASH_BLOCKSIZE   .64
                      01044      #define END_FLASH               0x8000
                      01045      #define END_GPR                 0x600
                      01046 #endif
                      01047 
                      01048 #ifdef __18F442
                      01049      #define DEVICEID                .37
                      01050      #define WRITE_FLASH_BLOCKSIZE   .8
                      01051      #define ERASE_FLASH_BLOCKSIZE   .64
                      01052      #define END_FLASH               0x4000
                      01053      #define END_GPR                 0x300
                      01054 #endif
                      01055 
                      01056 #ifdef __18F448
                      01057      #define DEVICEID                .65
                      01058      #define WRITE_FLASH_BLOCKSIZE   .8
                      01059      #define ERASE_FLASH_BLOCKSIZE   .64
                      01060      #define END_FLASH               0x4000
                      01061      #define END_GPR                 0x300
                      01062 #endif
                      01063 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01064 #ifdef __18F452
                      01065      #define DEVICEID                .33
                      01066      #define WRITE_FLASH_BLOCKSIZE   .8
                      01067      #define ERASE_FLASH_BLOCKSIZE   .64
                      01068      #define END_FLASH               0x8000
                      01069      #define END_GPR                 0x600
                      01070 #endif
                      01071 
                      01072 #ifdef __18F458
                      01073      #define DEVICEID                .67
                      01074      #define WRITE_FLASH_BLOCKSIZE   .8
                      01075      #define ERASE_FLASH_BLOCKSIZE   .64
                      01076      #define END_FLASH               0x8000
                      01077      #define END_GPR                 0x600
                      01078 #endif
                      01079 
                      01080 #ifdef __18F1220
                      01081      #define DEVICEID                .63
                      01082      #define WRITE_FLASH_BLOCKSIZE   .8
                      01083      #define ERASE_FLASH_BLOCKSIZE   .64
                      01084      #define END_FLASH               0x1000
                      01085      #define END_GPR                 0x100
                      01086 #endif
                      01087 
                      01088 #ifdef __18F1230
                      01089      #define DEVICEID                .240
                      01090      #define WRITE_FLASH_BLOCKSIZE   .8
                      01091      #define ERASE_FLASH_BLOCKSIZE   .64
                      01092      #define END_FLASH               0x1000
                      01093      #define END_GPR                 0x100
                      01094 #endif
                      01095 
                      01096 #ifdef __18F1320
                      01097      #define DEVICEID                .62
                      01098      #define WRITE_FLASH_BLOCKSIZE   .8
                      01099      #define ERASE_FLASH_BLOCKSIZE   .64
                      01100      #define END_FLASH               0x2000
                      01101      #define END_GPR                 0x100
                      01102 #endif
                      01103 
                      01104 #ifdef __18F1330
                      01105      #define DEVICEID                .241
                      01106      #define WRITE_FLASH_BLOCKSIZE   .8
                      01107      #define ERASE_FLASH_BLOCKSIZE   .64
                      01108      #define END_FLASH               0x2000
                      01109      #define END_GPR                 0x100
                      01110 #endif
                      01111 
                      01112 #ifdef __18F2220
                      01113      #define DEVICEID                .44
                      01114      #define WRITE_FLASH_BLOCKSIZE   .8
                      01115      #define ERASE_FLASH_BLOCKSIZE   .64
                      01116      #define END_FLASH               0x1000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01117      #define END_GPR                 0x200
                      01118 #endif
                      01119 
                      01120 #ifdef __18F2221
                      01121      #define DEVICEID                .267
                      01122      #define WRITE_FLASH_BLOCKSIZE   .8
                      01123      #define ERASE_FLASH_BLOCKSIZE   .64
                      01124      #define END_FLASH               0x1000
                      01125      #define END_GPR                 0x200
                      01126 #endif
                      01127 
                      01128 #ifdef __18F2320
                      01129      #define DEVICEID                .40
                      01130      #define WRITE_FLASH_BLOCKSIZE   .8
                      01131      #define ERASE_FLASH_BLOCKSIZE   .64
                      01132      #define END_FLASH               0x2000
                      01133      #define END_GPR                 0x200
                      01134 #endif
                      01135 
                      01136 #ifdef __18F2321
                      01137      #define DEVICEID                .265
                      01138      #define WRITE_FLASH_BLOCKSIZE   .8
                      01139      #define ERASE_FLASH_BLOCKSIZE   .64
                      01140      #define END_FLASH               0x2000
                      01141      #define END_GPR                 0x200
                      01142 #endif
                      01143 
                      01144 #ifdef __18F2331
                      01145      #define DEVICEID                .71
                      01146      #define WRITE_FLASH_BLOCKSIZE   .8
                      01147      #define ERASE_FLASH_BLOCKSIZE   .64
                      01148      #define END_FLASH               0x2000
                      01149      #define END_GPR                 0x300
                      01150 #endif
                      01151 
                      01152 #ifdef __18LF2321
                      01153      #define DEVICEID                .265
                      01154      #define WRITE_FLASH_BLOCKSIZE   .8
                      01155      #define ERASE_FLASH_BLOCKSIZE   .64
                      01156      #define END_FLASH               0x2000
                      01157      #define END_GPR                 0x200
                      01158 #endif
                      01159 
                      01160 #ifdef __18LF2331
                      01161      #define DEVICEID                .71
                      01162      #define WRITE_FLASH_BLOCKSIZE   .8
                      01163      #define ERASE_FLASH_BLOCKSIZE   .64
                      01164      #define END_FLASH               0x2000
                      01165      #define END_GPR                 0x300
                      01166 #endif
                      01167      
                      01168      
                      01169 #ifdef __18F2410
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01170      #define DEVICEID                .139
                      01171      #define WRITE_FLASH_BLOCKSIZE   .32
                      01172      #define ERASE_FLASH_BLOCKSIZE   .64
                      01173      #define END_FLASH               0x4000
                      01174      #define END_GPR                 0x300
                      01175 #endif
                      01176 
                      01177 #ifdef __18F2420
                      01178      #define DEVICEID                .138
                      01179      #define WRITE_FLASH_BLOCKSIZE   .32
                      01180      #define ERASE_FLASH_BLOCKSIZE   .64
                      01181      #define END_FLASH               0x4000
                      01182      #define END_GPR                 0x300
                      01183 #endif
                      01184 
                      01185 #ifdef __18F2423
                      01186      #define DEVICEID                .277
                      01187      #define WRITE_FLASH_BLOCKSIZE   .32
                      01188      #define ERASE_FLASH_BLOCKSIZE   .64
                      01189      #define END_FLASH               0x4000
                      01190      #define END_GPR                 0x300
                      01191 #endif
                      01192 
                      01193 #ifdef __18F2431
                      01194      #define DEVICEID                .70
                      01195      #define WRITE_FLASH_BLOCKSIZE   .8
                      01196      #define ERASE_FLASH_BLOCKSIZE   .64
                      01197      #define END_FLASH               0x4000
                      01198      #define END_GPR                 0x300
                      01199 #endif
                      01200 
                      01201 #ifdef __18F2439
                      01202      #define DEVICEID                .36
                      01203      #define WRITE_FLASH_BLOCKSIZE   .8
                      01204      #define ERASE_FLASH_BLOCKSIZE   .64
                      01205      #define END_FLASH               0x3000
                      01206      #define END_GPR                 0x280
                      01207 #endif
                      01208 
                      01209 #ifdef __18F2450
                      01210      #define DEVICEID                .289
                      01211      #define WRITE_FLASH_BLOCKSIZE   .16
                      01212      #define ERASE_FLASH_BLOCKSIZE   .64
                      01213      #define END_FLASH               0x4000
                      01214      #define END_GPR                 0x500
                      01215 #endif
                      01216 
                      01217 #ifdef __18F2455
                      01218      #define DEVICEID                .147
                      01219      #define WRITE_FLASH_BLOCKSIZE   .32
                      01220      #define ERASE_FLASH_BLOCKSIZE   .64
                      01221      #define END_FLASH               0x6000
                      01222      #define END_GPR                 0x800
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01223 #endif
                      01224 
                      01225 #ifdef __18F2458
                      01226      #define DEVICEID                .339
                      01227      #define WRITE_FLASH_BLOCKSIZE   .32
                      01228      #define ERASE_FLASH_BLOCKSIZE   .64
                      01229      #define END_FLASH               0x6000
                      01230      #define END_GPR                 0x800
                      01231 #endif
                      01232 
                      01233 #ifdef __18F2480
                      01234      #define DEVICEID                .215
                      01235      #define WRITE_FLASH_BLOCKSIZE   .32
                      01236      #define ERASE_FLASH_BLOCKSIZE   .64
                      01237      #define END_FLASH               0x4000
                      01238      #define END_GPR                 0x300
                      01239 #endif
                      01240 
                      01241 #ifdef __18F2510
                      01242      #define DEVICEID                .137
                      01243      #define WRITE_FLASH_BLOCKSIZE   .32
                      01244      #define ERASE_FLASH_BLOCKSIZE   .64
                      01245      #define END_FLASH               0x8000
                      01246      #define END_GPR                 0x600
                      01247 #endif
                      01248 
                      01249 #ifdef __18F2515
                      01250      #define DEVICEID                .103
                      01251      #define WRITE_FLASH_BLOCKSIZE   .64
                      01252      #define ERASE_FLASH_BLOCKSIZE   .64
                      01253      #define END_FLASH               0xC000
                      01254      #define END_GPR                 0xF80
                      01255 #endif
                      01256 
                      01257 #ifdef __18F2520
                      01258      #define DEVICEID                .136
                      01259      #define WRITE_FLASH_BLOCKSIZE   .32
                      01260      #define ERASE_FLASH_BLOCKSIZE   .64
                      01261      #define END_FLASH               0x8000
                      01262      #define END_GPR                 0x600
                      01263 #endif
                      01264 
                      01265 #ifdef __18F2523
                      01266      #define DEVICEID                .273
                      01267      #define WRITE_FLASH_BLOCKSIZE   .32
                      01268      #define ERASE_FLASH_BLOCKSIZE   .64
                      01269      #define END_FLASH               0x8000
                      01270      #define END_GPR                 0x600
                      01271 #endif
                      01272 
                      01273 #ifdef __18F2525
                      01274      #define DEVICEID                .102
                      01275      #define WRITE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01276      #define ERASE_FLASH_BLOCKSIZE   .64
                      01277      #define END_FLASH               0xC000
                      01278      #define END_GPR                 0xF80
                      01279 #endif
                      01280 
                      01281 #ifdef __18F2539
                      01282      #define DEVICEID                .32
                      01283      #define WRITE_FLASH_BLOCKSIZE   .8
                      01284      #define ERASE_FLASH_BLOCKSIZE   .64
                      01285      #define END_FLASH               0x6000
                      01286      #define END_GPR                 0x580
                      01287 #endif
                      01288 
                      01289 #ifdef __18F2550
                      01290      #define DEVICEID                .146
                      01291      #define WRITE_FLASH_BLOCKSIZE   .32
                      01292      #define ERASE_FLASH_BLOCKSIZE   .64
                      01293      #define END_FLASH               0x8000
                      01294      #define END_GPR                 0x800
                      01295 #endif
                      01296 
                      01297 #ifdef __18F2553
                      01298      #define DEVICEID                .338
                      01299      #define WRITE_FLASH_BLOCKSIZE   .32
                      01300      #define ERASE_FLASH_BLOCKSIZE   .64
                      01301      #define END_FLASH               0x8000
                      01302      #define END_GPR                 0x800
                      01303 #endif
                      01304 
                      01305 #ifdef __18F2580
                      01306      #define DEVICEID                .214
                      01307      #define WRITE_FLASH_BLOCKSIZE   .32
                      01308      #define ERASE_FLASH_BLOCKSIZE   .64
                      01309      #define END_FLASH               0x8000
                      01310      #define END_GPR                 0x600
                      01311 #endif
                      01312 
                      01313 #ifdef __18F2585
                      01314      #define DEVICEID                .119
                      01315      #define WRITE_FLASH_BLOCKSIZE   .64
                      01316      #define ERASE_FLASH_BLOCKSIZE   .64
                      01317      #define END_FLASH               0xC000
                      01318      #define END_GPR                 0xD00
                      01319 #endif
                      01320 
                      01321 #ifdef __18F2610
                      01322      #define DEVICEID                .101
                      01323      #define WRITE_FLASH_BLOCKSIZE   .64
                      01324      #define ERASE_FLASH_BLOCKSIZE   .64
                      01325      #define END_FLASH               0x10000
                      01326      #define END_GPR                 0xF80
                      01327 #endif
                      01328 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01329 #ifdef __18F2620
                      01330      #define DEVICEID                .100
                      01331      #define WRITE_FLASH_BLOCKSIZE   .64
                      01332      #define ERASE_FLASH_BLOCKSIZE   .64
                      01333      #define END_FLASH               0x10000
                      01334      #define END_GPR                 0xF80
                      01335 #endif
                      01336 
                      01337 #ifdef __18F2680
                      01338      #define DEVICEID                .118
                      01339      #define WRITE_FLASH_BLOCKSIZE   .64
                      01340      #define ERASE_FLASH_BLOCKSIZE   .64
                      01341      #define END_FLASH               0x10000
                      01342      #define END_GPR                 0xD00
                      01343 #endif
                      01344 
                      01345 #ifdef __18F2682
                      01346      #define DEVICEID                .312
                      01347      #define WRITE_FLASH_BLOCKSIZE   .64
                      01348      #define ERASE_FLASH_BLOCKSIZE   .64
                      01349      #define END_FLASH               0x14000
                      01350      #define END_GPR                 0xD00
                      01351 #endif
                      01352 
                      01353 #ifdef __18F2685
                      01354      #define DEVICEID                .313
                      01355      #define WRITE_FLASH_BLOCKSIZE   .64
                      01356      #define ERASE_FLASH_BLOCKSIZE   .64
                      01357      #define END_FLASH               0x18000
                      01358      #define END_GPR                 0xD00
                      01359 #endif
                      01360 
                      01361 #ifdef __18F4220
                      01362      #define DEVICEID                .45
                      01363      #define WRITE_FLASH_BLOCKSIZE   .8
                      01364      #define ERASE_FLASH_BLOCKSIZE   .64
                      01365      #define END_FLASH               0x1000
                      01366      #define END_GPR                 0x200
                      01367 #endif
                      01368 
                      01369 #ifdef __18F4221
                      01370      #define DEVICEID                .266
                      01371      #define WRITE_FLASH_BLOCKSIZE   .8
                      01372      #define ERASE_FLASH_BLOCKSIZE   .64
                      01373      #define END_FLASH               0x1000
                      01374      #define END_GPR                 0x200
                      01375 #endif
                      01376 
                      01377 #ifdef __18F4320
                      01378      #define DEVICEID                .41
                      01379      #define WRITE_FLASH_BLOCKSIZE   .8
                      01380      #define ERASE_FLASH_BLOCKSIZE   .64
                      01381      #define END_FLASH               0x2000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01382      #define END_GPR                 0x200
                      01383 #endif
                      01384 
                      01385 #ifdef __18F4321
                      01386      #define DEVICEID                .264
                      01387      #define WRITE_FLASH_BLOCKSIZE   .8
                      01388      #define ERASE_FLASH_BLOCKSIZE   .64
                      01389      #define END_FLASH               0x2000
                      01390      #define END_GPR                 0x200
                      01391 #endif
                      01392 
                      01393 #ifdef __18F4331
                      01394      #define DEVICEID                .69
                      01395      #define WRITE_FLASH_BLOCKSIZE   .8
                      01396      #define ERASE_FLASH_BLOCKSIZE   .64
                      01397      #define END_FLASH               0x2000
                      01398      #define END_GPR                 0x300
                      01399 #endif
                      01400 
                      01401 #ifdef __18F4410
                      01402      #define DEVICEID                .135
                      01403      #define WRITE_FLASH_BLOCKSIZE   .32
                      01404      #define ERASE_FLASH_BLOCKSIZE   .64
                      01405      #define END_FLASH               0x4000
                      01406      #define END_GPR                 0x300
                      01407 #endif
                      01408 
                      01409 #ifdef __18F4420
                      01410      #define DEVICEID                .134
                      01411      #define WRITE_FLASH_BLOCKSIZE   .32
                      01412      #define ERASE_FLASH_BLOCKSIZE   .64
                      01413      #define END_FLASH               0x4000
                      01414      #define END_GPR                 0x300
                      01415 #endif
                      01416 
                      01417 #ifdef __18F4423
                      01418      #define DEVICEID                .269
                      01419      #define WRITE_FLASH_BLOCKSIZE   .32
                      01420      #define ERASE_FLASH_BLOCKSIZE   .64
                      01421      #define END_FLASH               0x4000
                      01422      #define END_GPR                 0x300
                      01423 #endif
                      01424 
                      01425 #ifdef __18F4431
                      01426      #define DEVICEID                .68
                      01427      #define WRITE_FLASH_BLOCKSIZE   .8
                      01428      #define ERASE_FLASH_BLOCKSIZE   .64
                      01429      #define END_FLASH               0x4000
                      01430      #define END_GPR                 0x300
                      01431 #endif
                      01432 
                      01433 #ifdef __18F4439
                      01434      #define DEVICEID                .37
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01435      #define WRITE_FLASH_BLOCKSIZE   .8
                      01436      #define ERASE_FLASH_BLOCKSIZE   .64
                      01437      #define END_FLASH               0x3000
                      01438      #define END_GPR                 0x280
                      01439 #endif
                      01440 
                      01441 #ifdef __18F4450
                      01442      #define DEVICEID                .288
                      01443      #define WRITE_FLASH_BLOCKSIZE   .16
                      01444      #define ERASE_FLASH_BLOCKSIZE   .64
                      01445      #define END_FLASH               0x4000
                      01446      #define END_GPR                 0x500
                      01447 #endif
                      01448 
                      01449 #ifdef __18F4455
                      01450      #define DEVICEID                .145
                      01451      #define WRITE_FLASH_BLOCKSIZE   .32
                      01452      #define ERASE_FLASH_BLOCKSIZE   .64
                      01453      #define END_FLASH               0x6000
                      01454      #define END_GPR                 0x800
                      01455 #endif
                      01456 
                      01457 #ifdef __18F4458
                      01458      #define DEVICEID                .337
                      01459      #define WRITE_FLASH_BLOCKSIZE   .32
                      01460      #define ERASE_FLASH_BLOCKSIZE   .64
                      01461      #define END_FLASH               0x6000
                      01462      #define END_GPR                 0x800
                      01463 #endif
                      01464 
                      01465 #ifdef __18F4480
                      01466      #define DEVICEID                .213
                      01467      #define WRITE_FLASH_BLOCKSIZE   .32
                      01468      #define ERASE_FLASH_BLOCKSIZE   .64
                      01469      #define END_FLASH               0x4000
                      01470      #define END_GPR                 0x300
                      01471 #endif
                      01472 
                      01473 #ifdef __18F4510
                      01474      #define DEVICEID                .133
                      01475      #define WRITE_FLASH_BLOCKSIZE   .32
                      01476      #define ERASE_FLASH_BLOCKSIZE   .64
                      01477      #define END_FLASH               0x8000
                      01478      #define END_GPR                 0x600
                      01479 #endif
                      01480 
                      01481 #ifdef __18F4515
                      01482      #define DEVICEID                .99
                      01483      #define WRITE_FLASH_BLOCKSIZE   .64
                      01484      #define ERASE_FLASH_BLOCKSIZE   .64
                      01485      #define END_FLASH               0xC000
                      01486      #define END_GPR                 0xF80
                      01487 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01488 
                      01489 #ifdef __18F4520
                      01490      #define DEVICEID                .132
                      01491      #define WRITE_FLASH_BLOCKSIZE   .32
                      01492      #define ERASE_FLASH_BLOCKSIZE   .64
                      01493      #define END_FLASH               0x8000
                      01494      #define END_GPR                 0x600
                      01495 #endif
                      01496 
                      01497 #ifdef __18F4523
                      01498      #define DEVICEID                .265
                      01499      #define WRITE_FLASH_BLOCKSIZE   .32
                      01500      #define ERASE_FLASH_BLOCKSIZE   .64
                      01501      #define END_FLASH               0x8000
                      01502      #define END_GPR                 0x600
                      01503 #endif
                      01504 
                      01505 #ifdef __18F4525
                      01506      #define DEVICEID                .98
                      01507      #define WRITE_FLASH_BLOCKSIZE   .64
                      01508      #define ERASE_FLASH_BLOCKSIZE   .64
                      01509      #define END_FLASH               0xC000
                      01510      #define END_GPR                 0xF80
                      01511 #endif
                      01512 
                      01513 #ifdef __18F4539
                      01514      #define DEVICEID                .33
                      01515      #define WRITE_FLASH_BLOCKSIZE   .8
                      01516      #define ERASE_FLASH_BLOCKSIZE   .64
                      01517      #define END_FLASH               0x6000
                      01518      #define END_GPR                 0x580
                      01519 #endif
                      01520 
                      01521 #ifdef __18F4550
                      01522      #define DEVICEID                .144
                      01523      #define WRITE_FLASH_BLOCKSIZE   .32
                      01524      #define ERASE_FLASH_BLOCKSIZE   .64
                      01525      #define END_FLASH               0x8000
                      01526      #define END_GPR                 0x800
                      01527 #endif
                      01528 
                      01529 #ifdef __18F4553
                      01530      #define DEVICEID                .336
                      01531      #define WRITE_FLASH_BLOCKSIZE   .32
                      01532      #define ERASE_FLASH_BLOCKSIZE   .64
                      01533      #define END_FLASH               0x8000
                      01534      #define END_GPR                 0x800
                      01535 #endif
                      01536 
                      01537 #ifdef __18F4580
                      01538      #define DEVICEID                .212
                      01539      #define WRITE_FLASH_BLOCKSIZE   .32
                      01540      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01541      #define END_FLASH               0x8000
                      01542      #define END_GPR                 0x600
                      01543 #endif
                      01544 
                      01545 #ifdef __18F4585
                      01546      #define DEVICEID                .117
                      01547      #define WRITE_FLASH_BLOCKSIZE   .64
                      01548      #define ERASE_FLASH_BLOCKSIZE   .64
                      01549      #define END_FLASH               0xC000
                      01550      #define END_GPR                 0xD00
                      01551 #endif
                      01552 
                      01553 #ifdef __18F4610
                      01554      #define DEVICEID                .97
                      01555      #define WRITE_FLASH_BLOCKSIZE   .64
                      01556      #define ERASE_FLASH_BLOCKSIZE   .64
                      01557      #define END_FLASH               0x10000
                      01558      #define END_GPR                 0xF80
                      01559 #endif
                      01560 
                      01561 #ifdef __18F4620
                      01562      #define DEVICEID                .96
                      01563      #define WRITE_FLASH_BLOCKSIZE   .64
                      01564      #define ERASE_FLASH_BLOCKSIZE   .64
                      01565      #define END_FLASH               0x10000
                      01566      #define END_GPR                 0xF80
                      01567 #endif
                      01568 
                      01569 #ifdef __18F4680
                      01570      #define DEVICEID                .116
                      01571      #define WRITE_FLASH_BLOCKSIZE   .64
                      01572      #define ERASE_FLASH_BLOCKSIZE   .64
                      01573      #define END_FLASH               0x10000
                      01574      #define END_GPR                 0xD00
                      01575 #endif
                      01576 
                      01577 #ifdef __18F4682
                      01578      #define DEVICEID                .314
                      01579      #define WRITE_FLASH_BLOCKSIZE   .64
                      01580      #define ERASE_FLASH_BLOCKSIZE   .64
                      01581      #define END_FLASH               0x14000
                      01582      #define END_GPR                 0xD00
                      01583 #endif
                      01584 
                      01585 #ifdef __18F4685
                      01586      #define DEVICEID                .315
                      01587      #define WRITE_FLASH_BLOCKSIZE   .64
                      01588      #define ERASE_FLASH_BLOCKSIZE   .64
                      01589      #define END_FLASH               0x18000
                      01590      #define END_GPR                 0xD00
                      01591 #endif
                      01592 
                      01593 ; PIC18F6310 does not support self-programming.
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01594 ; PIC18F6390 does not support self-programming.
                      01595 ; PIC18F6393 does not support self-programming.
                      01596 ; PIC18F6410 does not support self-programming.
                      01597 ; PIC18F6490 does not support self-programming.
                      01598 ; PIC18F6493 does not support self-programming.
                      01599 #ifdef __18F6520
                      01600      #define DEVICEID                .89
                      01601      #define WRITE_FLASH_BLOCKSIZE   .8
                      01602      #define ERASE_FLASH_BLOCKSIZE   .64
                      01603      #define END_FLASH               0x8000
                      01604      #define END_GPR                 0x800
                      01605 #endif
                      01606 
                      01607 #ifdef __18F6525
                      01608      #define DEVICEID                .87
                      01609      #define WRITE_FLASH_BLOCKSIZE   .8
                      01610      #define ERASE_FLASH_BLOCKSIZE   .64
                      01611      #define END_FLASH               0xC000
                      01612      #define END_GPR                 0xF00
                      01613 #endif
                      01614 
                      01615 #ifdef __18F6527
                      01616      #define DEVICEID                .154
                      01617      #define WRITE_FLASH_BLOCKSIZE   .64
                      01618      #define ERASE_FLASH_BLOCKSIZE   .64
                      01619      #define END_FLASH               0xC000
                      01620      #define END_GPR                 0xF60
                      01621 #endif
                      01622 
                      01623 #ifdef __18F6585
                      01624      #define DEVICEID                .83
                      01625      #define WRITE_FLASH_BLOCKSIZE   .8
                      01626      #define ERASE_FLASH_BLOCKSIZE   .64
                      01627      #define END_FLASH               0xC000
                      01628      #define END_GPR                 0xD00
                      01629 #endif
                      01630 
                      01631 #ifdef __18F6620
                      01632      #define DEVICEID                .51
                      01633      #define WRITE_FLASH_BLOCKSIZE   .8
                      01634      #define ERASE_FLASH_BLOCKSIZE   .64
                      01635      #define END_FLASH               0x10000
                      01636      #define END_GPR                 0xF00
                      01637 #endif
                      01638 
                      01639 #ifdef __18F6621
                      01640      #define DEVICEID                .85
                      01641      #define WRITE_FLASH_BLOCKSIZE   .8
                      01642      #define ERASE_FLASH_BLOCKSIZE   .64
                      01643      #define END_FLASH               0x10000
                      01644      #define END_GPR                 0xF00
                      01645 #endif
                      01646 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01647 #ifdef __18F6622
                      01648      #define DEVICEID                .156
                      01649      #define WRITE_FLASH_BLOCKSIZE   .64
                      01650      #define ERASE_FLASH_BLOCKSIZE   .64
                      01651      #define END_FLASH               0x10000
                      01652      #define END_GPR                 0xF60
                      01653 #endif
                      01654 
                      01655 #ifdef __18F6627
                      01656      #define DEVICEID                .158
                      01657      #define WRITE_FLASH_BLOCKSIZE   .64
                      01658      #define ERASE_FLASH_BLOCKSIZE   .64
                      01659      #define END_FLASH               0x18000
                      01660      #define END_GPR                 0xF60
                      01661 #endif
                      01662 
                      01663 #ifdef __18F6628
                      01664      #define DEVICEID                .590
                      01665      #define WRITE_FLASH_BLOCKSIZE   .64
                      01666      #define ERASE_FLASH_BLOCKSIZE   .64
                      01667      #define END_FLASH               0x18000
                      01668      #define END_GPR                 0xF60
                      01669 #endif
                      01670 
                      01671 #ifdef __18F6680
                      01672      #define DEVICEID                .81
                      01673      #define WRITE_FLASH_BLOCKSIZE   .8
                      01674      #define ERASE_FLASH_BLOCKSIZE   .64
                      01675      #define END_FLASH               0x10000
                      01676      #define END_GPR                 0xD00
                      01677 #endif
                      01678 
                      01679 #ifdef __18F6720
                      01680      #define DEVICEID                .49
                      01681      #define WRITE_FLASH_BLOCKSIZE   .8
                      01682      #define ERASE_FLASH_BLOCKSIZE   .64
                      01683      #define END_FLASH               0x20000
                      01684      #define END_GPR                 0xF00
                      01685 #endif
                      01686 
                      01687 #ifdef __18F6722
                      01688      #define DEVICEID                .160
                      01689      #define WRITE_FLASH_BLOCKSIZE   .64
                      01690      #define ERASE_FLASH_BLOCKSIZE   .64
                      01691      #define END_FLASH               0x20000
                      01692      #define END_GPR                 0xF60
                      01693 #endif
                      01694 
                      01695 #ifdef __18F6723
                      01696      #define DEVICEID                .592
                      01697      #define WRITE_FLASH_BLOCKSIZE   .64
                      01698      #define ERASE_FLASH_BLOCKSIZE   .64
                      01699      #define END_FLASH               0x20000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01700      #define END_GPR                 0xF60
                      01701 #endif
                      01702 
                      01703 ; PIC18F8310 does not support self-programming.
                      01704 ; PIC18F8390 does not support self-programming.
                      01705 ; PIC18F8393 does not support self-programming.
                      01706 ; PIC18F8410 does not support self-programming.
                      01707 ; PIC18F8490 does not support self-programming.
                      01708 ; PIC18F8493 does not support self-programming.
                      01709 #ifdef __18F8520
                      01710      #define DEVICEID                .88
                      01711      #define WRITE_FLASH_BLOCKSIZE   .8
                      01712      #define ERASE_FLASH_BLOCKSIZE   .64
                      01713      #define END_FLASH               0x8000
                      01714      #define END_GPR                 0x800
                      01715 #endif
                      01716 
                      01717 #ifdef __18F8525
                      01718      #define DEVICEID                .86
                      01719      #define WRITE_FLASH_BLOCKSIZE   .8
                      01720      #define ERASE_FLASH_BLOCKSIZE   .64
                      01721      #define END_FLASH               0xC000
                      01722      #define END_GPR                 0xF00
                      01723 #endif
                      01724 
                      01725 #ifdef __18F8527
                      01726      #define DEVICEID                .155
                      01727      #define WRITE_FLASH_BLOCKSIZE   .64
                      01728      #define ERASE_FLASH_BLOCKSIZE   .64
                      01729      #define END_FLASH               0xC000
                      01730      #define END_GPR                 0xF60
                      01731 #endif
                      01732 
                      01733 #ifdef __18F8585
                      01734      #define DEVICEID                .82
                      01735      #define WRITE_FLASH_BLOCKSIZE   .8
                      01736      #define ERASE_FLASH_BLOCKSIZE   .64
                      01737      #define END_FLASH               0xC000
                      01738      #define END_GPR                 0xD00
                      01739 #endif
                      01740 
                      01741 #ifdef __18F8620
                      01742      #define DEVICEID                .50
                      01743      #define WRITE_FLASH_BLOCKSIZE   .8
                      01744      #define ERASE_FLASH_BLOCKSIZE   .64
                      01745      #define END_FLASH               0x10000
                      01746      #define END_GPR                 0xF00
                      01747 #endif
                      01748 
                      01749 #ifdef __18F8621
                      01750      #define DEVICEID                .84
                      01751      #define WRITE_FLASH_BLOCKSIZE   .8
                      01752      #define ERASE_FLASH_BLOCKSIZE   .64
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01753      #define END_FLASH               0x10000
                      01754      #define END_GPR                 0xF00
                      01755 #endif
                      01756 
                      01757 #ifdef __18F8622
                      01758      #define DEVICEID                .157
                      01759      #define WRITE_FLASH_BLOCKSIZE   .64
                      01760      #define ERASE_FLASH_BLOCKSIZE   .64
                      01761      #define END_FLASH               0x10000
                      01762      #define END_GPR                 0xF60
                      01763 #endif
                      01764 
                      01765 #ifdef __18F8627
                      01766      #define DEVICEID                .159
                      01767      #define WRITE_FLASH_BLOCKSIZE   .64
                      01768      #define ERASE_FLASH_BLOCKSIZE   .64
                      01769      #define END_FLASH               0x18000
                      01770      #define END_GPR                 0xF60
                      01771 #endif
                      01772 
                      01773 #ifdef __18F8628
                      01774      #define DEVICEID                .591
                      01775      #define WRITE_FLASH_BLOCKSIZE   .64
                      01776      #define ERASE_FLASH_BLOCKSIZE   .64
                      01777      #define END_FLASH               0x18000
                      01778      #define END_GPR                 0xF60
                      01779 #endif
                      01780 
                      01781 #ifdef __18F8680
                      01782      #define DEVICEID                .80
                      01783      #define WRITE_FLASH_BLOCKSIZE   .8
                      01784      #define ERASE_FLASH_BLOCKSIZE   .64
                      01785      #define END_FLASH               0x10000
                      01786      #define END_GPR                 0xD00
                      01787 #endif
                      01788 
                      01789 #ifdef __18F8720
                      01790      #define DEVICEID                .48
                      01791      #define WRITE_FLASH_BLOCKSIZE   .8
                      01792      #define ERASE_FLASH_BLOCKSIZE   .64
                      01793      #define END_FLASH               0x20000
                      01794      #define END_GPR                 0xF00
                      01795 #endif
                      01796 
                      01797 #ifdef __18F8722
                      01798      #define DEVICEID                .161
                      01799      #define WRITE_FLASH_BLOCKSIZE   .64
                      01800      #define ERASE_FLASH_BLOCKSIZE   .64
                      01801      #define END_FLASH               0x20000
                      01802      #define END_GPR                 0xF60
                      01803 #endif
                      01804 
                      01805 #ifdef __18F8723
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01806      #define DEVICEID                .593
                      01807      #define WRITE_FLASH_BLOCKSIZE   .64
                      01808      #define ERASE_FLASH_BLOCKSIZE   .64
                      01809      #define END_FLASH               0x20000
                      01810      #define END_GPR                 0xF60
                      01811 #endif
                      01812 
                      01813 #ifdef __18LF13K22
                      01814      #define DEVICEID                .636
                      01815      #define WRITE_FLASH_BLOCKSIZE   .8
                      01816      #define ERASE_FLASH_BLOCKSIZE   .64
                      01817      #define END_FLASH               0x2000
                      01818      #define END_GPR                 0x100
                      01819 #endif
                      01820 
                      01821 #ifdef __18LF13K50
                      01822      #define DEVICEID                .568
                      01823      #define WRITE_FLASH_BLOCKSIZE   .8
                      01824      #define ERASE_FLASH_BLOCKSIZE   .64
                      01825      #define END_FLASH               0x2000
                      01826      #define END_GPR                 0x300
                      01827 #endif
                      01828 
                      01829 #ifdef __18LF14K22
                      01830      #define DEVICEID                .635
                      01831      #define WRITE_FLASH_BLOCKSIZE   .16
                      01832      #define ERASE_FLASH_BLOCKSIZE   .64
                      01833      #define END_FLASH               0x4000
                      01834      #define END_GPR                 0x200
                      01835 #endif
                      01836 
                      01837 #ifdef __18LF14K50
                      01838      #define DEVICEID                .569
                      01839      #define WRITE_FLASH_BLOCKSIZE   .16
                      01840      #define ERASE_FLASH_BLOCKSIZE   .64
                      01841      #define END_FLASH               0x4000
                      01842      #define END_GPR                 0x300
                      01843 #endif
                      01844 
                      01845 #ifdef __18LF23K22
                      01846      #define DEVICEID                .699
                      01847      #define WRITE_FLASH_BLOCKSIZE   .64
                      01848      #define ERASE_FLASH_BLOCKSIZE   .64
                      01849      #define END_FLASH               0x2000
                      01850      #define END_GPR                 0x200
                      01851 #endif
                      01852 
                      01853 #ifdef __18LF24J10
                      01854      #define CONFIG_AS_FLASH
                      01855      #define DEVICEID                .234
                      01856      #define WRITE_FLASH_BLOCKSIZE   .64
                      01857      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01858      #define END_FLASH               0x4000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01859      #define END_GPR                 0x400
                      01860 #endif
                      01861 
                      01862 #ifdef __18LF24J11
                      01863      #define CONFIG_AS_FLASH
                      01864      #define DEVICEID                .626
                      01865      #define WRITE_FLASH_BLOCKSIZE   .64
                      01866      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01867      #define END_FLASH               0x4000
                      01868      #define END_GPR                 0xEC0
                      01869 #endif
                      01870 
                      01871 #ifdef __18LF24J50
                      01872      #define CONFIG_AS_FLASH
                      01873      #define DEVICEID                .614
                      01874      #define WRITE_FLASH_BLOCKSIZE   .64
                      01875      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01876      #define END_FLASH               0x4000
                      01877      #define END_GPR                 0xEC0
                      01878 #endif
                      01879 
                      01880 #ifdef __18LF24K22
                      01881      #define DEVICEID                .691
                      01882      #define WRITE_FLASH_BLOCKSIZE   .64
                      01883      #define ERASE_FLASH_BLOCKSIZE   .64
                      01884      #define END_FLASH               0x4000
                      01885      #define END_GPR                 0x300
                      01886 #endif
                      01887 
                      01888 #ifdef __18LF25J10
                      01889      #define CONFIG_AS_FLASH
                      01890      #define DEVICEID                .226
                      01891      #define WRITE_FLASH_BLOCKSIZE   .64
                      01892      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01893      #define END_FLASH               0x8000
                      01894      #define END_GPR                 0x400
                      01895 #endif
                      01896 
                      01897 #ifdef __18LF25J11
                      01898      #define CONFIG_AS_FLASH
                      01899      #define DEVICEID                .627
                      01900      #define WRITE_FLASH_BLOCKSIZE   .64
                      01901      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01902      #define END_FLASH               0x8000
                      01903      #define END_GPR                 0xEC0
                      01904 #endif
                      01905 
                      01906 #ifdef __18LF25J50
                      01907      #define CONFIG_AS_FLASH
                      01908      #define DEVICEID                .615
                      01909      #define WRITE_FLASH_BLOCKSIZE   .64
                      01910      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01911      #define END_FLASH               0x8000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01912      #define END_GPR                 0xEC0
                      01913 #endif
                      01914 
                      01915 #ifdef __18LF25K22
                      01916      #define DEVICEID                .683
                      01917      #define WRITE_FLASH_BLOCKSIZE   .64
                      01918      #define ERASE_FLASH_BLOCKSIZE   .64
                      01919      #define END_FLASH               0x8000
                      01920      #define END_GPR                 0x600
                      01921 #endif
                      01922 
                      01923 #ifdef __18LF25K80
                      01924      #define DEVICEID                .787
                      01925      #define WRITE_FLASH_BLOCKSIZE   .64
                      01926      #define ERASE_FLASH_BLOCKSIZE   .64
                      01927      #define END_FLASH               0x8000
                      01928      #define END_GPR                 0xE41
                      01929 #endif
                      01930 
                      01931 #ifdef __18LF26J11
                      01932      #define CONFIG_AS_FLASH
                      01933      #define DEVICEID                .628
                      01934      #define WRITE_FLASH_BLOCKSIZE   .64
                      01935      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01936      #define END_FLASH               0x10000
                      01937      #define END_GPR                 0xEC0
                      01938 #endif
                      01939 
                      01940 #ifdef __18LF26J13
                      01941      #define CONFIG_AS_FLASH
                      01942      #define DEVICEID                .729
                      01943      #define WRITE_FLASH_BLOCKSIZE   .64
                      01944      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01945      #define END_FLASH               0x10000
                      01946      #define END_GPR                 0xEB0
                      01947 #endif
                      01948 
                      01949 #ifdef __18LF26J50
                      01950      #define CONFIG_AS_FLASH
                      01951      #define DEVICEID                .616
                      01952      #define WRITE_FLASH_BLOCKSIZE   .64
                      01953      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01954      #define END_FLASH               0x10000
                      01955      #define END_GPR                 0xEC0
                      01956 #endif
                      01957 
                      01958 #ifdef __18LF26J53
                      01959      #define CONFIG_AS_FLASH
                      01960      #define DEVICEID                .721
                      01961      #define WRITE_FLASH_BLOCKSIZE   .64
                      01962      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01963      #define END_FLASH               0x10000
                      01964      #define END_GPR                 0xEB0
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01965 #endif
                      01966 
                      01967 #ifdef __18LF26K22
                      01968      #define DEVICEID                .675
                      01969      #define WRITE_FLASH_BLOCKSIZE   .64
                      01970      #define ERASE_FLASH_BLOCKSIZE   .64
                      01971      #define END_FLASH               0x10000
                      01972      #define END_GPR                 0xF38
                      01973 #endif
                      01974 
                      01975 #ifdef __18LF26K80
                      01976      #define DEVICEID                .784
                      01977      #define WRITE_FLASH_BLOCKSIZE   .64
                      01978      #define ERASE_FLASH_BLOCKSIZE   .64
                      01979      #define END_FLASH               0x10000
                      01980      #define END_GPR                 0xE41
                      01981 #endif
                      01982 
                      01983 #ifdef __18LF27J13
                      01984      #define CONFIG_AS_FLASH
                      01985      #define DEVICEID                .731
                      01986      #define WRITE_FLASH_BLOCKSIZE   .64
                      01987      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01988      #define END_FLASH               0x20000
                      01989      #define END_GPR                 0xEB0
                      01990 #endif
                      01991 
                      01992 #ifdef __18LF27J53
                      01993      #define CONFIG_AS_FLASH
                      01994      #define DEVICEID                .723
                      01995      #define WRITE_FLASH_BLOCKSIZE   .64
                      01996      #define ERASE_FLASH_BLOCKSIZE   .1024
                      01997      #define END_FLASH               0x20000
                      01998      #define END_GPR                 0xEB0
                      01999 #endif
                      02000 
                      02001 #ifdef __18LF43K22
                      02002      #define DEVICEID                .697
                      02003      #define WRITE_FLASH_BLOCKSIZE   .64
                      02004      #define ERASE_FLASH_BLOCKSIZE   .64
                      02005      #define END_FLASH               0x2000
                      02006      #define END_GPR                 0x200
                      02007 #endif
                      02008 
                      02009 #ifdef __18LF44J10
                      02010      #define CONFIG_AS_FLASH
                      02011      #define DEVICEID                .235
                      02012      #define WRITE_FLASH_BLOCKSIZE   .64
                      02013      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02014      #define END_FLASH               0x4000
                      02015      #define END_GPR                 0x400
                      02016 #endif
                      02017 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02018 #ifdef __18LF44J11
                      02019      #define CONFIG_AS_FLASH
                      02020      #define DEVICEID                .629
                      02021      #define WRITE_FLASH_BLOCKSIZE   .64
                      02022      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02023      #define END_FLASH               0x4000
                      02024      #define END_GPR                 0xEC0
                      02025 #endif
                      02026 
                      02027 #ifdef __18LF44J50
                      02028      #define CONFIG_AS_FLASH
                      02029      #define DEVICEID                .617
                      02030      #define WRITE_FLASH_BLOCKSIZE   .64
                      02031      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02032      #define END_FLASH               0x4000
                      02033      #define END_GPR                 0xEC0
                      02034 #endif
                      02035 
                      02036 #ifdef __18LF44K22
                      02037      #define DEVICEID                .689
                      02038      #define WRITE_FLASH_BLOCKSIZE   .64
                      02039      #define ERASE_FLASH_BLOCKSIZE   .64
                      02040      #define END_FLASH               0x4000
                      02041      #define END_GPR                 0x300
                      02042 #endif
                      02043 
                      02044 #ifdef __18LF45J10
                      02045      #define CONFIG_AS_FLASH
                      02046      #define DEVICEID                .227
                      02047      #define WRITE_FLASH_BLOCKSIZE   .64
                      02048      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02049      #define END_FLASH               0x8000
                      02050      #define END_GPR                 0x400
                      02051 #endif
                      02052 
                      02053 #ifdef __18LF45J11
                      02054      #define CONFIG_AS_FLASH
                      02055      #define DEVICEID                .630
                      02056      #define WRITE_FLASH_BLOCKSIZE   .64
                      02057      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02058      #define END_FLASH               0x8000
                      02059      #define END_GPR                 0xEC0
                      02060 #endif
                      02061 
                      02062 #ifdef __18LF45J50
                      02063      #define CONFIG_AS_FLASH
                      02064      #define DEVICEID                .618
                      02065      #define WRITE_FLASH_BLOCKSIZE   .64
                      02066      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02067      #define END_FLASH               0x8000
                      02068      #define END_GPR                 0xEC0
                      02069 #endif
                      02070 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02071 #ifdef __18LF45K22
                      02072      #define DEVICEID                .681
                      02073      #define WRITE_FLASH_BLOCKSIZE   .64
                      02074      #define ERASE_FLASH_BLOCKSIZE   .64
                      02075      #define END_FLASH               0x8000
                      02076      #define END_GPR                 0x600
                      02077 #endif
                      02078 
                      02079 #ifdef __18LF45K80
                      02080      #define DEVICEID                .786
                      02081      #define WRITE_FLASH_BLOCKSIZE   .64
                      02082      #define ERASE_FLASH_BLOCKSIZE   .64
                      02083      #define END_FLASH               0x8000
                      02084      #define END_GPR                 0xE41
                      02085 #endif
                      02086 
                      02087 #ifdef __18LF46J11
                      02088      #define CONFIG_AS_FLASH
                      02089      #define DEVICEID                .631
                      02090      #define WRITE_FLASH_BLOCKSIZE   .64
                      02091      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02092      #define END_FLASH               0x10000
                      02093      #define END_GPR                 0xEC0
                      02094 #endif
                      02095 
                      02096 #ifdef __18LF46J13
                      02097      #define CONFIG_AS_FLASH
                      02098      #define DEVICEID                .733
                      02099      #define WRITE_FLASH_BLOCKSIZE   .64
                      02100      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02101      #define END_FLASH               0x10000
                      02102      #define END_GPR                 0xEB0
                      02103 #endif
                      02104 
                      02105 #ifdef __18LF46J50
                      02106      #define CONFIG_AS_FLASH
                      02107      #define DEVICEID                .619
                      02108      #define WRITE_FLASH_BLOCKSIZE   .64
                      02109      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02110      #define END_FLASH               0x10000
                      02111      #define END_GPR                 0xEC0
                      02112 #endif
                      02113 
                      02114 #ifdef __18LF46J53
                      02115      #define CONFIG_AS_FLASH
                      02116      #define DEVICEID                .725
                      02117      #define WRITE_FLASH_BLOCKSIZE   .64
                      02118      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02119      #define END_FLASH               0x10000
                      02120      #define END_GPR                 0xEB0
                      02121 #endif
                      02122 
                      02123 #ifdef __18LF46K22
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02124      #define DEVICEID                .673
                      02125      #define WRITE_FLASH_BLOCKSIZE   .64
                      02126      #define ERASE_FLASH_BLOCKSIZE   .64
                      02127      #define END_FLASH               0x10000
                      02128      #define END_GPR                 0xF38
                      02129 #endif
                      02130 
                      02131 #ifdef __18LF46K80
                      02132      #define DEVICEID                .783
                      02133      #define WRITE_FLASH_BLOCKSIZE   .64
                      02134      #define ERASE_FLASH_BLOCKSIZE   .64
                      02135      #define END_FLASH               0x10000
                      02136      #define END_GPR                 0xE41
                      02137 #endif
                      02138 
                      02139 #ifdef __18LF47J13
                      02140      #define CONFIG_AS_FLASH
                      02141      #define DEVICEID                .735
                      02142      #define WRITE_FLASH_BLOCKSIZE   .64
                      02143      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02144      #define END_FLASH               0x20000
                      02145      #define END_GPR                 0xEB0
                      02146 #endif
                      02147 
                      02148 #ifdef __18LF47J53
                      02149      #define CONFIG_AS_FLASH
                      02150      #define DEVICEID                .727
                      02151      #define WRITE_FLASH_BLOCKSIZE   .64
                      02152      #define ERASE_FLASH_BLOCKSIZE   .1024
                      02153      #define END_FLASH               0x20000
                      02154      #define END_GPR                 0xEB0
                      02155 #endif
                      02156 
                      02157 #ifdef __18LF65K80
                      02158      #define DEVICEID                .785
                      02159      #define WRITE_FLASH_BLOCKSIZE   .64
                      02160      #define ERASE_FLASH_BLOCKSIZE   .64
                      02161      #define END_FLASH               0x8000
                      02162      #define END_GPR                 0xE41
                      02163 #endif
                      02164 
                      02165 #ifdef __18LF66K80
                      02166      #define DEVICEID                .782
                      02167      #define WRITE_FLASH_BLOCKSIZE   .64
                      02168      #define ERASE_FLASH_BLOCKSIZE   .64
                      02169      #define END_FLASH               0x10000
                      02170      #define END_GPR                 0xE41
                      02171 #endif
                      00110 #include "bootconfig.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 ;#define TBLWT_BUG               ; Enable this to work around timing bug found in some PIC18Fxx20's
                      00026 ;#define INVERT_UART             ; If you don't have an RS232 transceiver, you might want this option
                      00027 #define USE_MAX_INTOSC          ; Sets OSCCON<IRCF2:IRCF0> for maximum INTOSC frequency (8MHz)
                      00028 #define USE_PLL                 ; Sets OSCTUNE.PLLEN bit at start up for frequency multiplication.
                      00029 ;#define PICDEM_LCD2             ; RB0 = 1 required to enable MAX3221 TX output on PICDEM LCD 2 demo boa
                            rd
                      00030 #define USE_SOFTBOOTWP          ; enable software boot block write protection
                      00031 ;#define USE_SOFTCONFIGWP        ; enable software config words write protection
                      00032 
                      00033 ; Autobaud will be used by default. To save code space or to force a specific baud rate to be used, 
                      00034 ; you can optionally define a BAUDRG value instead. Most PIC18's support BRG16 mode and use the 
                      00035 ; following equation:
                      00036 ;       BAUDRG = Fosc / (4 * Baud Rate) - 1
                      00037 ;
                      00038 ; Old PIC18's without BRG16 mode need this equation instead:
                      00039 ;       BAUDRG = Fosc / (16 * Baud Rate) - 1
                      00040 ;
                      00041 ; Examples:
                      00042 ;#define BAUDRG .51              ; 19.2Kbps from 4MHz (BRG16 = 1, BRGH = 1)
                      00043 ;#define BAUDRG .103             ; 115.2Kbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00044 ;#define BAUDRG .85              ; 115.2Kbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00045 ;#define BAUDRG .68              ; 115.2Kbps from 32MHz (BRG16 = 1, BRGH = 1)
                      00046 ;#define BAUDRG .16              ; 115.2Kbps from 8MHz (BRG16 = 1, BRGH = 1)
                      00047 ;#define BAUDRG .11              ; 1Mbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00048 ;#define BAUDRG .9               ; 1Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00049 ;#define BAUDRG .4               ; 2Mbps from 40MHz (BRG16 = 1, BRGH = 1)
                      00050 ;#define BAUDRG .3               ; 3Mbps from 48MHz (BRG16 = 1, BRGH = 1)
                      00051 ;#define BAUDRG .12              ; 19.2Kbps from 4MHz, 115.2Kbps from 24MHz (BRG16 = 0, BRGH = 1)
                      00052 ;#define BAUDRG .10              ; 115.2Kbps from 19.6608MHz (BRG16 = 0, BRGH = 1)
                      00053 
                      00054 ; Bootloader must start at the beginning of a FLASH Erase Block. If unspecified,
                      00055 ; bootloader will automatically be located at the end of program memory address space.
                      00056 ;#define BOOTLOADER_ADDRESS   0  ; bootloader at beginning, application start/ISR vectors require remapp
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ing
                      00057 ;#define BOOTLOADER_ADDRESS   END_FLASH - (ERASE_FLASH_BLOCKSIZE * 20)  ; useful for running under debug
                            ger (debug executive wants to reside at the end of memory space too)
                      00058 ;#define BOOTLOADER_ADDRESS  (END_FLASH - ERASE_FLASH_BLOCKSIZE) ; use on J parts to locate inside flash
                             config erase block
                      00059 
                      00060 #ifdef BOOTLOADER_ADDRESS
                      00061   #if BOOTLOADER_ADDRESS == 0
                      00062     ; For Bootloader located at program memory address 0, the application firmware must 
                      00063     ; provide remapped reset and interrupt vectors outside of the Boot Block. The following 
                      00064     ; #defines tell the bootloader firmware where application entry points are to be expected:
                      00065     #define AppVector           0x400   ; application start up code should be located here.
                      00066     #define AppHighIntVector    0x408   ; application high priority interrupt should be located here
                      00067     #define AppLowIntVector     0x418   ; application low priority interrupt should be located here
                      00068   #endif
                      00069 #endif
                      00070 
                      00071 ; Define UART pins and registers. 
                      00072 ; Modify the following lines if you want to use a different UART module.
                      00073 ;
                      00074 ; Note: If your UART's RX pin happens to be multiplexed with analog ANx input
                      00075 ;       functionality, you may need to edit the "preprocess.inc" DigitalInput
                      00076 ;       macro. Code there needs to enable the digital input buffer (refer to
                      00077 ;       ADC chapter of your device's datasheet).
                      00078 #define UARTNUM 1
                      00079 #if UARTNUM == 1
                      00080     #define UxSPBRG         SPBRG
                      00081     #define UxSPBRGH        SPBRGH
                      00082     #define UxRCSTA         RCSTA
                      00083     #define UxTXSTA         TXSTA
                      00084     #define UxRCREG         RCREG
                      00085     #define UxTXREG         TXREG
                      00086     #define UxPIR           PIR1
                      00087     #define UxRCIF          RCIF
                      00088     #define UxTXIF          TXIF
                      00089     #define UxBAUDCON       BAUDCON
                      00090 
                      00091 ;    #define RXPORT         PORTC   ; RX on RC7 is used by default for most PIC18's.
                      00092 ;    #define RXPIN          .7
                      00093 
                      00094 ;    #define RXPORT          PORTB   ; PIC18F14K50: RX on RB5/AN11
                      00095 ;    #define RXPIN           .5
                      00096 
                      00097 ;    #define RXANSEL         ANSELH  ; RX/AN11 multiplexed -- must enable digital input buffer
                      00098 ;    #define RXAN            .3      ; ANSELH<3> controls AN11 digital input buffer
                      00099 #endif
                      00100 
                      00101 #if UARTNUM == 2
                      00102     #define UxSPBRG         SPBRG2
                      00103     #define UxSPBRGH        SPBRGH2
                      00104     #define UxRCSTA         RCSTA2
                      00105     #define UxTXSTA         TXSTA2
                      00106     #define UxRCREG         RCREG2
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107     #define UxTXREG         TXREG2
                      00108     #define UxPIR           PIR3
                      00109     #define UxRCIF          RC2IF
                      00110     #define UxTXIF          TX2IF
                      00111     #define UxBAUDCON       BAUDCON2
                      00112 
                      00113 ;    #define RXPORT          PORTG   ; RG2 is default RX2 pin for some high pin count PIC18's.
                      00114 ;    #define RXPIN           .2
                      00115 
                      00116 ;    #define RXPORT          PORTD   ; RX2 pin PPS'ed to RD4/RP21 on PIC18F46J11 for example.
                      00117 ;    #define RXPIN           .4
                      00118 
                      00119 ;    #define RXANSEL         ANSELH  ; On PICs where RX is multiplexed with ANx analog inputs,
                      00120 ;    #define RXAN            .3      ; the digital input buffer needs to be enabled via ANSELx SFRs
                      00121 
                      00122     ; devices that use PPS to remap UART2 pins will need these lines defined:
                      00123 ;    #define PPS_UTX         .5      ; PPS code for TX2/CK2 output function
                      00124 ;    #define PPS_UTX_PIN     RPOR23  ; UART TX assigned to RP23 pin
                      00125 ;    #define PPS_URX_PIN     .21     ; UART RX assigned to RP21 pin
                      00126 ;    #define PPS_URX         RPINR16 ; PPS register for RX2/CK2 input function
                      00127 #endif
                      00128 
                      00129 ; If you get linker errors complaining "can not fit the absolute section," you might want to
                      00130 ; increase BOOTLOADERSIZE below or set the BOOTLOADER_ADDRESS above to a smaller address number.
                      00131 
                      00132 ; Because we need to know the total size of the bootloader before the assembler has finished
                      00133 ; compiling the source code, we have to estimate the final bootloader size and provide it
                      00134 ; here as BOOTLOADERSIZE. This number is in bytes (twice the instruction word count). 
                      00135 ;
                      00136 ; If you see the bootloader is reserving more FLASH memory than it really needs (you'll
                      00137 ; see a bunch of FFFF/NOP instructions at the end of the bootloader memory region),
                      00138 ; you can try reducing BOOTLOADERSIZE.
                      00139 #define BOOTLOADERSIZE  .708
                      00140 
                      00141 #define MAJOR_VERSION   .1              ; Bootloader Firmware Version
                      00142 #define MINOR_VERSION   .5
                      00111 #include "preprocess.inc"
                      00001 ; Copyright (c) 2002-2011,  Microchip Technology Inc.
                      00002 ;
                      00003 ; Microchip licenses this software to you solely for use with Microchip
                      00004 ; products.  The software is owned by Microchip and its licensors, and
                      00005 ; is protected under applicable copyright laws.  All rights reserved.
                      00006 ;
                      00007 ; SOFTWARE IS PROVIDED "AS IS."  MICROCHIP EXPRESSLY DISCLAIMS ANY
                      00008 ; WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT
                      00009 ; NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
                      00010 ; FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL
                      00011 ; MICROCHIP BE LIABLE FOR ANY INCIDENTAL, SPECIAL, INDIRECT OR
                      00012 ; CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, HARM TO YOUR
                      00013 ; EQUIPMENT, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY
                      00014 ; OR SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT LIMITED
                      00015 ; TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR CONTRIBUTION,
                      00016 ; OR OTHER SIMILAR COSTS.
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 ;
                      00018 ; To the fullest extent allowed by law, Microchip and its licensors
                      00019 ; liability shall not exceed the amount of fees, if any, that you
                      00020 ; have paid directly to Microchip to use this software.
                      00021 ;
                      00022 ; MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE
                      00023 ; OF THESE TERMS.
                      00024 
                      00025 DigitalInput macro
                      00026 #ifdef __18F1320
                      00027     #if BOOTLOADER_ADDRESS == 0
                      00028     nop                         ; start up GOTO instruction errata
                      00029     #endif
                      00030     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00031 #endif
                      00032 #ifdef __18F1220
                      00033     #if BOOTLOADER_ADDRESS == 0
                      00034     nop                         ; start up GOTO instruction errata
                      00035     #endif
                      00036     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                      00037 #endif
                      00038 
                      00039 #ifdef RXANSEL
                      00040     banksel RXANSEL
                      00041     bcf     RXANSEL, RXAN
                      00042 #else
                      00043     #ifdef ANSC7
                      00044         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                      00045         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
                      00046     #endif
                      00047 #endif
                      00048     endm        
                      00049 
                      00050 pmwtpi macro                        ; tblwt*+ macro for PIC18Fxx20 bug
                      00051 #ifdef TBLWT_BUG
                      00052     tblwt   *
                      00053     tblrd   *+
                      00054 #else
                      00055     tblwt   *+
                      00056 #endif
                      00057     endm
                      00058 
                      00059 #ifndef BAUDRG
                      00060     #ifndef USE_AUTOBAUD
                      00061         #define USE_AUTOBAUD
                      00062     #endif
                      00063 #endif
                      00064 
                      00065 #ifndef RXPORT
                      00066     #ifdef PORTC
                      00067         #define RXPORT PORTC
                      00068     #else
                      00069         #define RXPORT PORTB    ; PIC18F1220, PIC18F1320
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070     #endif
                      00071 #endif
                      00072 
                      00073 #ifndef RXPIN
                      00074     #ifdef PORTC
                      00075         #define RXPIN 7            ; most PIC18's have RX on RC7
                      00076     #else
                      00077         #define RXPIN 4            ; PIC18F1220, PIC18F1320 have RX on RB4
                      00078     #endif
                      00079 #endif
                      00080 
                      00081 #ifdef BRG16
                      00082     #ifndef SPBRGH
                      00083         #define SPBRGH SPBRGH1      ; PIC18F87J10 doesn't define SPBRGH by default.
                      00084     #endif
                      00085 
                      00086     #ifndef BAUDCON
                      00087         #ifdef BAUDCON1
                      00088             #define BAUDCON BAUDCON1    ; PIC18F85J90 / PIC18F84J90
                      00089         #else
                      00090             #ifdef BAUDCTL
                      00091                 #define BAUDCON BAUDCTL ; PIC18F1220, PIC18F1320
                      00092             #endif
                      00093         #endif
                      00094     #endif
                      00095 #endif
                      00096 
                      00097 #ifndef RCREG
                      00098     #ifdef RCREG1
                      00099         #define RCREG RCREG1        ; PIC18F85J90/PIC18F84J90
                      00100     #endif
                      00101 #endif
                      00102 
                      00103 #ifndef TXIF
                      00104     #ifdef TX1IF
                      00105         #define TXIF TX1IF          ; PIC18F97J60 doesn't define TXIF by default
                      00106     #endif
                      00107 #endif
                      00108 
                      00109 #ifndef RCIF
                      00110     #ifdef RC1IF
                      00111         #define RCIF RC1IF          ; Not a problem on PIC18F97J60, but just in case future parts might 
                            need it
                      00112     #endif
                      00113 #endif
                      00114 
                      00115 #ifndef RXDTP
                      00116     #ifdef DTRXP
                      00117         #define RXDTP DTRXP         ; PIC18F14K50 doesn't define RXDTP, instead they call it DTRXP
                      00118     #endif
                      00119 #endif
                      00120 
                      00121 #ifndef TXCKP
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00122     #ifdef CKTXP
                      00123         #define TXCKP CKTXP         ; PIC18F14K50
                      00124     #endif
                      00125 #endif
                      00126 
                      00127 
                      00128 #if BOOTLOADERSIZE < ERASE_FLASH_BLOCKSIZE
                      00129     ; This device has a large Erase FLASH Block Size, so we need to reserve a full Erase Block
                      00130     ; page for the bootloader. Reserving an entire erase block prevents the PC application
                      00131     ; from trying to accidently erase a portion of the bootloader.
                      00132     #define BOOTBLOCKSIZE ERASE_FLASH_BLOCKSIZE
                      00133     #ifndef BOOTLOADER_ADDRESS
                      00134         #ifdef CONFIG_AS_FLASH
                      00135             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE - ERASE_FLASH_BLOCKSIZE)
                      00136         #else
                      00137             #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00138         #endif
                      00139     #endif
                      00140 #else
                      00141     #if (BOOTLOADERSIZE % ERASE_FLASH_BLOCKSIZE) == 0
                      00142         #define BOOTBLOCKSIZE BOOTLOADERSIZE     
                      00143     #else
                      00144         #define BOOTBLOCKSIZE (BOOTLOADERSIZE / ERASE_FLASH_BLOCKSIZE + 1) * ERASE_FLASH_BLOCKSIZE
                      00145     #endif
                      00146     #ifndef BOOTLOADER_ADDRESS
                      00147         #define BOOTLOADER_ADDRESS  (END_FLASH - BOOTBLOCKSIZE)
                      00148     #endif
                      00149 #endif
                      00112 ; *****************************************************************************
                      00113 
                      00114 ; *****************************************************************************
                      00115 #define STX             0x0F            
                      00116 #define ETX             0x04
                      00117 #define DLE             0x05
                      00118 #define NTX             0xFF
                      00119 ; *****************************************************************************
                      00120 
                      00121 ; *****************************************************************************
                      00122 ; RAM Address Map
  00000000            00123 CRCL                equ 0x00
  00000001            00124 CRCH                equ 0x01
  00000002            00125 RXDATA              equ 0x02
  00000003            00126 TXDATA              equ 0x03
                      00127 
                      00128 ; Framed Packet Format
                      00129 ; <STX>[<COMMAND><ADDRL><ADDRH><ADDRU><0x00><DATALEN><...DATA...>]<CRCL><CRCH><ETX>
  00000005            00130 COMMAND             equ 0x05        ; receive buffer
  00000006            00131 ADDRESS_L           equ 0x06
  00000007            00132 ADDRESS_H           equ 0x07
  00000008            00133 ADDRESS_U           equ 0x08
  00000009            00134 ADDRESS_X           equ 0x09
  0000000A            00135 DATA_COUNTL         equ 0x0A
  0000000B            00136 PACKET_DATA         equ 0x0B
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            00137 DATA_COUNTH         equ 0x0B        ; only for certain commands
                      00138 ; *****************************************************************************
                      00139 
                      00140 ; *****************************************************************************
                      00141     errorlevel -311                 ; don't warn on HIGH() operator values >16-bits
                      00142 
                      00143 #ifdef USE_SOFTBOOTWP
                      00144   #ifndef SOFTWP
                      00145     #define SOFTWP
                      00146   #endif
                      00147 #endif
                      00148 
                      00149 #ifdef USE_SOFTCONFIGWP
                      00150   #ifdef CONFIG_AS_FLASH
                      00151     #ifndef SOFTWP
                      00152       #define SOFTWP
                      00153     #endif
                      00154   #endif
                      00155 #endif
                      00156 
                      00157 #ifndef AppVector
                      00158     ; The application startup GOTO instruction will be written just before the Boot Block,
                      00159     ; courtesy of the host PC bootloader application.
                      00160     #define AppVector (BootloaderStart-.4)
                      00161 #endif
                      00162 ; *****************************************************************************
                      00163 
                      00164  
                      00165 ; *****************************************************************************
                      00166 #if BOOTLOADER_ADDRESS != 0
000000                00167     ORG     0
                      00168     ; The following GOTO is not strictly necessary, but may startup faster
                      00169     ; for large microcontrollers running at extremely slow clock speeds.
                      00170     ;goto    BootloaderBreakCheck  
                      00171 
001D00                00172     ORG     BOOTLOADER_ADDRESS
001D00                00173 BootloaderStart:
001D00 D003           00174     bra     BootloadMode
                      00175 
                      00176 ; *****************************************************************************
                      00177 ; Determine if the application is supposed to be started or if we should
                      00178 ; go into bootloader mode.
                      00179 ;
                      00180 ; If RX pin is in BREAK state when we come out of MCLR reset, immediately 
                      00181 ; enter bootloader mode, even if there exists some application firmware in 
                      00182 ; program memory.
001D02                00183 BootloaderBreakCheck:
                      00184     DigitalInput                ; set RX pin as digital input on certain parts
                          M #ifdef __18F1320
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M #endif
                          M #ifdef __18F1220
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                          M #endif
                          M 
                          M #ifdef RXANSEL
                          M     banksel RXANSEL
                          M     bcf     RXANSEL, RXAN
                          M #else
                          M     #ifdef ANSC7
                          M         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                          M         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
                          M     #endif
                          M #endif
                      00185 #ifdef INVERT_UART
                      00186     btfss   RXPORT, RXPIN
                      00187 GotoAppVector:
                      00188     goto    AppVector           ; no BREAK state, attempt to start application
                      00189 #else
001D02 BE82           00190     btfsc   RXPORT, RXPIN
001D04                00191 GotoAppVector:
001D04 EF7E F00E      00192     goto    AppVector           ; no BREAK state, attempt to start application
                      00193 #endif
                      00194 
001D08                00195 BootloadMode:
                      00196     DigitalInput                ; set RX pin as digital input on certain parts
                          M #ifdef __18F1320
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                          M #endif
                          M #ifdef __18F1220
                          M     #if BOOTLOADER_ADDRESS == 0
                          M     nop                         ; start up GOTO instruction errata
                          M     #endif
                          M     bsf     ADCON1, PCFG6       ; RB4/AN6/RX pin on PIC18F1x20 requires digital mode
                          M #endif
                          M 
                          M #ifdef RXANSEL
                          M     banksel RXANSEL
                          M     bcf     RXANSEL, RXAN
                          M #else
                          M     #ifdef ANSC7
                          M         banksel ANSELC          ; ANSELC is in non-access bank 0x0F on PIC18F46K22 family
                          M         bcf     ANSELC, ANSC7   ; Digital input enable on RC7/RX pin for PIC18F46K22 family
                          M     #endif
                          M #endif
                      00197 #else ; BOOTLOADER_ADDRESS == 0 ****************************************************************
                      00198     ORG     0
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00199 BootloaderStart:
                      00200     DigitalInput                ; set RX pin as digital input on certain parts
                      00201     movlw   low(AppVector)      ; load address of application reset vector
                      00202     bra     BootloaderBreakCheck
                      00203 
                      00204         ORG         0x0008
                      00205 HighPriorityInterruptVector:
                      00206         goto    AppHighIntVector    ; Re-map Interrupt vector
                      00207 
                      00208 BootloaderBreakCheck:
                      00209 #ifdef INVERT_UART
                      00210     btfsc   RXPORT, RXPIN
                      00211     bra     BootloadMode
                      00212 #else
                      00213     btfss   RXPORT, RXPIN
                      00214     bra     BootloadMode
                      00215 #endif
                      00216 CheckAppVector:
                      00217     ; Read instruction at the application reset vector location. 
                      00218     ; If we read 0xFFFF, assume that the application firmware has
                      00219     ; not been programmed yet, so don't try going into application mode.
                      00220     movwf   TBLPTRL
                      00221     movlw   high(AppVector)
                      00222     movwf   TBLPTRH
                      00223     bra     CheckAppVector2
                      00224 
                      00225         ORG         0x0018
                      00226 LowPriorityInterruptVector:
                      00227         goto    AppLowIntVector     ; Re-map Interrupt vector
                      00228 
                      00229 CheckAppVector2:
                      00230     movlw   upper(AppVector)
                      00231     movwf   TBLPTRU     
                      00232     tblrd   *+                  ; read instruction from program memory
                      00233     incfsz  TABLAT, W           ; if the lower byte != 0xFF, 
                      00234 GotoAppVector:
                      00235     goto    AppVector           ; run application.
                      00236 
                      00237     tblrd   *+                  ; read instruction from program memory
                      00238     incfsz  TABLAT, W           ; if the lower byte == 0xFF but upper byte != 0xFF,
                      00239     bra     GotoAppVector       ; run application.
                      00240     ; otherwise, assume application firmware is not present because we read a NOP (0xFFFF).
                      00241     ; fall through to bootloader mode...
                      00242 BootloadMode:
                      00243 #endif ; end BOOTLOADER_ADDRESS == 0 ******************************************
001D08 EE20 F000      00244     lfsr    FSR2, 0             ; for compatibility with Extended Instructions mode.
                      00245 
                      00246 #ifdef USE_MAX_INTOSC
001D0C 0E70           00247     movlw   b'01110000'         ; set INTOSC to maximum speed (usually 8MHz)
001D0E 12D3           00248     iorwf   OSCCON, f
                      00249 #endif
                      00250 
                      00251 #ifdef USE_PLL
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00252     #ifdef PLLEN
                      00253         #ifdef OSCTUNE
001D10 8C9B           00254             bsf     OSCTUNE, PLLEN      ; enable PLL for faster internal clock
                      00255         #else
                      00256             ; 18F8680, 18F8585, 18F6680, and 18F6585 doesn't have OSCTUNE register.
                      00257             ; Instead, PLLEN bit is in OSCCON.
                      00258             bsf     OSCCON, PLLEN      ; enable PLL for faster internal clock
                      00259         #endif
                      00260     #else
                      00261         #ifdef SPLLEN
                      00262             bsf     OSCTUNE, SPLLEN     ; PIC18F14K50 has SPLLEN at bit 6
                      00263         #endif
                      00264     #endif
                      00265 #endif
                      00266 
                      00267 #ifdef INVERT_UART
                      00268     btfsc   RXPORT, RXPIN       ; wait for RX pin to go IDLE
                      00269     bra     $-2
                      00270 #else
001D12 AE82           00271     btfss   RXPORT, RXPIN       ; wait for RX pin to go IDLE
001D14 D7FE           00272     bra     $-2
                      00273 #endif
                      00274 
                      00275 #ifdef PPS_UTX_PIN
                      00276     banksel PPSCON
                      00277     ; unlock PPS registers
                      00278     movlw   0x55
                      00279     movwf   EECON2, ACCESS
                      00280     movlw   0xAA
                      00281     movwf   EECON2, ACCESS
                      00282     bcf     PPSCON, IOLOCK, BANKED
                      00283 
                      00284     ; assign UART RX/TX to PPS remappable pins
                      00285     movlw   PPS_UTX
                      00286     movwf   PPS_UTX_PIN, BANKED
                      00287 
                      00288     movlw   PPS_URX_PIN
                      00289     movwf   PPS_URX, BANKED
                      00290 
                      00291     ; lock PPS registers from inadvertent changes
                      00292     movlw   0x55
                      00293     movwf   EECON2, ACCESS
                      00294     movlw   0xAA
                      00295     movwf   EECON2, ACCESS
                      00296     bsf     PPSCON, IOLOCK, BANKED
                      00297     movlb   0x0F
                      00298 #endif
                      00299 
001D16 0E90           00300     movlw   b'10010000'         ; Setup UART
001D18 6EAB           00301     movwf   UxRCSTA
001D1A 0E26           00302     movlw   b'00100110'         ; BRGH = 1, TXEN = 1
001D1C 6EAC           00303     movwf   UxTXSTA
                      00304 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00305 #ifdef INVERT_UART
                      00306     bsf     UxBAUDCON, RXDTP
                      00307     bsf     UxBAUDCON, TXCKP
                      00308 #endif
                      00309 
                      00310 #ifdef BRG16
001D1E 86B8           00311     bsf     UxBAUDCON, BRG16
001D20 0E02           00312     movlw   b'00000010'         ; 1:8 prescaler - no division required later (but no rounding possible)
                      00313 #else
                      00314     movlw   b'00000011'         ; 1:16 prescaler - thus we only have to divide by 2 later on.
                      00315 #endif
001D22 6ED5           00316     movwf   T0CON
                      00317 
                      00318 #ifdef PICDEM_LCD2
                      00319     bsf     LATB, LATB0         ; PICDEM LCD 2 demoboard requires RB0 high to enable MAX3221 TX output t
                            o PC.
                      00320     bcf     TRISB, TRISB0
                      00321 #endif
                      00322 ; *****************************************************************************
                      00323 
                      00324 
                      00325 ; *****************************************************************************
                      00326 #ifdef USE_AUTOBAUD
001D24                00327 DoAutoBaud:
                      00328 ; ___    __________            ________
                      00329 ;    \__/          \__________/
                      00330 ;       |                     |
                      00331 ;       |-------- p ----------|
                      00332 ;
                      00333 ;   p = The number of instructions between the first and last
                      00334 ;           rising edge of the RS232 control sequence 0x0F. Other 
                      00335 ;       possible control sequences are 0x01, 0x03, 0x07, 0x1F, 
                      00336 ;       0x3F, 0x7F.
                      00337 ;
                      00338 ;   SPBRG = (p / 32) - 1    BRGH = 1, BRG16 = 0
                      00339 ;   SPBRG = (p / 8) - 1     BRGH = 1, BRG16 = 1
                      00340 
001D24 98AB           00341     bcf     UxRCSTA, CREN       ; Stop receiving
001D26 50AE           00342     movf    UxRCREG, W          ; Empty the buffer
001D28 50AE           00343     movf    UxRCREG, W
                      00344 
001D2A                00345 RetryAutoBaud:
001D2A 6AD7           00346     clrf    TMR0H               ; reset timer count value
001D2C 6AD6           00347     clrf    TMR0L
001D2E 94F2           00348     bcf     INTCON, TMR0IF
001D30 D84D           00349     rcall   WaitForRise         ; wait for a start bit to pass by
001D32 8ED5           00350     bsf     T0CON, TMR0ON       ; start timer counting for entire D7..D0 data bit period.
001D34 D84B           00351     rcall   WaitForRise         ; wait for stop bit
001D36 9ED5           00352     bcf     T0CON, TMR0ON       ; stop the timer from counting further. 
                      00353 
001D38 B4F2           00354     btfsc   INTCON, TMR0IF      ; if TMR0 overflowed, we did not get a good baud capture
001D3A D7F7           00355     bra     RetryAutoBaud       ; try again
                      00356 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00357     #ifdef BRG16
                      00358     ; save new baud rate generator value
001D3C CFD6 FFAF      00359     movff   TMR0L, UxSPBRG      ; warning: must read TMR0L before TMR0H holds real data
001D40 CFD7 FFB0      00360     movff   TMR0H, UxSPBRGH
                      00361     #else 
                      00362     movff   TMR0L, UxSPBRG      ; warning: must read TMR0L before TMR0H holds real data
                      00363     ; TMR0H:TMR0L holds (p / 16).
                      00364     rrcf    TMR0H, w            ; divide by 2
                      00365     rrcf    UxSPBRG, F            
                      00366     btfss   STATUS, C           ; rounding
                      00367     decf    UxSPBRG, F    
                      00368     #endif
                      00369 
001D44 88AB           00370     bsf     UxRCSTA, CREN       ; start receiving
                      00371 
001D46                00372 WaitForHostCommand:
001D46 D920           00373     rcall   ReadHostByte        ; get start of transmission <STX>
001D48 0A0F           00374     xorlw   STX
001D4A E1EC           00375     bnz     DoAutoBaud          ; got something unexpected, perform autobaud
                      00376 #else ; not using autobaud
                      00377     movlw   low(BAUDRG)         ; set fixed baud rate generator value
                      00378     movwf   UxSPBRG
                      00379     #ifdef UxSPBRGH
                      00380         #if high(BAUDRG) != 0
                      00381     movlw   high(BAUDRG)
                      00382     movwf   UxSPBRGH
                      00383         #endif
                      00384     #endif
                      00385     bsf     UxRCSTA, CREN       ; start receiving
                      00386 DoAutoBaud:
                      00387 WaitForHostCommand:
                      00388     rcall   ReadHostByte        ; get start of transmission <STX>
                      00389     xorlw   STX
                      00390     bnz     WaitForHostCommand  ; got something unexpected, keep waiting for <STX>
                      00391 #endif ; end #ifdef USE_AUTOBAUD
                      00392         
                      00393 ; *****************************************************************************
                      00394 
                      00395 ; *****************************************************************************
                      00396 ; Read and parse packet data.
001D4C                00397 StartOfLine:
001D4C 0E0F           00398     movlw   STX                     ; send back start of response
001D4E D917           00399     rcall   SendHostByte
                      00400 
001D50 EE00 F004      00401     lfsr    FSR0, COMMAND-1         ; Point to the buffer
                      00402         
001D54                00403 ReceiveDataLoop:
001D54 D919           00404     rcall   ReadHostByte            ; Get the data
001D56 0A0F           00405     xorlw   STX                     ; Check for an unexpected STX
001D58 E0F9           00406     bz      StartOfLine             ; unexpected STX: abort packet and start over.
                      00407 
001D5A                00408 NoSTX:
001D5A 5002           00409     movf    RXDATA, W
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001D5C 0A04           00410     xorlw   ETX                     ; Check for a ETX
001D5E E007           00411     bz      VerifyPacketCRC         ; Yes, verify CRC
                      00412 
001D60                00413 NoETX:
001D60 5002           00414     movf    RXDATA, W
001D62 0A05           00415     xorlw   DLE                     ; Check for a DLE
001D64 E101           00416     bnz     AppendDataBuffer
                      00417 
001D66 D910           00418     rcall   ReadHostByte            ; DLE received, get the next byte and store it
                      00419     
001D68                00420 AppendDataBuffer:
001D68 C002 FFEC      00421     movff   RXDATA, PREINC0         ; store the data to the buffer
001D6C D7F3           00422     bra     ReceiveDataLoop
                      00423 
001D6E                00424 VerifyPacketCRC:
001D6E EE10 F005      00425     lfsr    FSR1, COMMAND
001D72 6A00           00426     clrf    CRCL
001D74 6A01           00427     clrf    CRCH
001D76 CFED FFF4      00428     movff   POSTDEC0, PRODH         ; Save host packet's CRCH to PRODH for later comparison
                      00429                                     ; CRCL is now available as INDF0
001D7A                00430 VerifyPacketCrcLoop:
001D7A 50E6           00431     movf    POSTINC1, w
001D7C D82F           00432     rcall   AddCrc                  ; add new data to the CRC
                      00433 
001D7E 50E2           00434     movf    FSR1H, w
001D80 62EA           00435     cpfseq  FSR0H
001D82 D7FB           00436     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
001D84 50E1           00437     movf    FSR1L, w
001D86 62E9           00438     cpfseq  FSR0L
001D88 D7F8           00439     bra     VerifyPacketCrcLoop     ; we aren't at the end of the received data yet, loop
                      00440 
001D8A 5001           00441     movf    CRCH, w
001D8C 62F4           00442     cpfseq  PRODH
001D8E D7CA           00443     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
001D90 5000           00444     movf    CRCL, w
001D92 62EF           00445     cpfseq  INDF0
001D94 D7C7           00446     bra     DoAutoBaud              ; invalid CRC, reset baud rate generator to re-sync with host
                      00447 
                      00448 ; ***********************************************
                      00449 ; Pre-setup, common to all commands.
001D96 6A00           00450     clrf    CRCL
001D98 6A01           00451     clrf    CRCH
                      00452 
001D9A 5006           00453     movf    ADDRESS_L, W            ; Set all possible pointers
001D9C 6EF6           00454     movwf   TBLPTRL
                      00455 #ifdef EEADR
001D9E 6EA9           00456     movwf   EEADR
                      00457 #endif
001DA0 5007           00458     movf    ADDRESS_H, W
001DA2 6EF7           00459     movwf   TBLPTRH
                      00460 #ifdef EEADRH
                      00461     movwf   EEADRH
                      00462 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001DA4 C008 FFF8      00463     movff   ADDRESS_U, TBLPTRU
001DA8 EE00 F00B      00464     lfsr    FSR0, PACKET_DATA
                      00465 ; ***********************************************
                      00466 
                      00467  
                      00468 
                      00469 ; ***********************************************
                      00470 ; Test the command field and sub-command.
001DAC                00471 CheckCommand:
001DAC 0E0A           00472     movlw   .10
001DAE 6005           00473     cpfslt  COMMAND
001DB0 D7B9           00474     bra     DoAutoBaud          ; invalid command - reset baud generator to re-sync with host
                      00475 
                      00476     ; This jump table must exist entirely within one 256 byte block of program memory.
                      00477 #if ($ & 0xFF) > (0xFF - .24)
                      00478     ; Too close to the end of a 256 byte boundary, push address forward to get code
                      00479     ; into the next 256 byte block.
                      00480     messg   "Wasting some code space to ensure jump table is aligned."
                      00481     ORG     $+(0x100 - ($ & 0xFF))
                      00482 #endif
001DB2                00483 JUMPTABLE_BEGIN:
001DB2 50F9           00484     movf    PCL, w              ; 0 do a read of PCL to set PCLATU:PCLATH to current program counter.
001DB4 4405           00485     rlncf   COMMAND, W          ; 2 multiply COMMAND by 2 (each BRA instruction takes 2 bytes on PIC18)
001DB6 26F9           00486     addwf   PCL, F              ; 4 Jump in command jump table based on COMMAND from host
001DB8 D027           00487     bra     BootloaderInfo      ; 6 00h
001DBA D02F           00488     bra     ReadFlash           ; 8 01h
001DBC D039           00489     bra     VerifyFlash         ; 10 02h
001DBE D04F           00490     bra     EraseFlash          ; 12 03h
001DC0 D07C           00491     bra     WriteFlash          ; 14 04h
001DC2 D0A8           00492     bra     ReadEeprom          ; 16 05h
001DC4 D0B0           00493     bra     WriteEeprom         ; 18 06h
001DC6 D0BA           00494     bra     WriteConfig         ; 20 07h
001DC8 D79D           00495     bra     GotoAppVector       ; 22 08h
001DCA 00FF           00496     reset                       ; 24 09h
                      00497 
                      00498 #if (JUMPTABLE_BEGIN & 0xFF) > ($ & 0xFF)
                      00499     error "Jump table is not aligned to fit within a single 256 byte address range."
                      00500 #endif
                      00501 ; *****************************************************************************
                      00502 
                      00503 #ifdef INVERT_UART
                      00504 WaitForRise:
                      00505     clrwdt
                      00506 
                      00507 WaitForRiseLoop:
                      00508     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
                      00509     return                  ; abort
                      00510 
                      00511     btfss   RXPORT, RXPIN   ; Wait for a falling edge
                      00512     bra     WaitForRiseLoop
                      00513 
                      00514 WtSR:
                      00515     btfsc   RXPORT, RXPIN   ; Wait for starting edge
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00516     bra     WtSR
                      00517     return
                      00518 #else ; not inverted UART pins
001DCC                00519 WaitForRise:
001DCC 0004           00520     clrwdt
                      00521 
001DCE                00522 WaitForRiseLoop
001DCE B4F2           00523     btfsc   INTCON, TMR0IF  ; if TMR0 overflowed, we did not get a good baud capture
001DD0 0012           00524     return                  ; abort
                      00525 
001DD2 BE82           00526     btfsc   RXPORT, RXPIN   ; Wait for a falling edge
001DD4 D7FC           00527     bra     WaitForRiseLoop
                      00528 
001DD6                00529 WtSR:
001DD6 AE82           00530     btfss   RXPORT, RXPIN   ; Wait for rising edge
001DD8 D7FE           00531     bra     WtSR
001DDA 0012           00532     return
                      00533 #endif ; end #ifdef INVERT_UART
                      00534 ; *****************************************************************************
                      00535 
                      00536 ; 16-bit CCITT CRC
                      00537 ; Adds WREG byte to the CRC checksum CRCH:CRCL. WREG destroyed on return.
001DDC                00538 AddCrc:                           ; Init: CRCH = HHHH hhhh, CRCL = LLLL llll
001DDC 1801           00539     xorwf   CRCH, w               ; Pre:  HHHH hhhh     WREG =      IIII iiii
001DDE C000 F001      00540     movff   CRCL, CRCH            ; Pre:  LLLL llll     CRCH =      LLLL llll
001DE2 6E00           00541     movwf   CRCL                  ; Pre:  IIII iiii     CRCL =      IIII iiii
001DE4 3AE8           00542     swapf   WREG                  ; Pre:  IIII iiii     WREG =      iiii IIII
001DE6 0B0F           00543     andlw   0x0F                  ; Pre:  iiii IIII     WREG =      0000 IIII
001DE8 1A00           00544     xorwf   CRCL, f               ; Pre:  IIII iiii     CRCL =      IIII jjjj
001DEA 3800           00545     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
001DEC 0BF0           00546     andlw   0xF0                  ; Pre:  jjjj IIII     WREG =      jjjj 0000
001DEE 1A01           00547     xorwf   CRCH, f               ; Pre:  LLLL llll     CRCH =      MMMM llll
001DF0 3800           00548     swapf   CRCL, w               ; Pre:  IIII jjjj     WREG =      jjjj IIII
001DF2 44E8           00549     rlncf   WREG, w               ; Pre:  jjjj IIII     WREG =      jjjI IIIj
001DF4 1A01           00550     xorwf   CRCH, f               ; Pre:  MMMM llll     CRCH =      XXXN mmmm
001DF6 0BE0           00551     andlw   b'11100000'           ; Pre:  jjjI IIIj     WREG =      jjj0 0000
001DF8 1A01           00552     xorwf   CRCH, f               ; Pre:  jjj0 0000     CRCH =      MMMN mmmm
001DFA 1A00           00553     xorwf   CRCL, f               ; Pre:  MMMN mmmm     CRCL =      JJJI jjjj
001DFC 0012           00554     return
                      00555 
                      00556 ; ***********************************************
                      00557 ; Commands
                      00558 ; ***********************************************
                      00559 
                      00560 ; Provides information about the Bootloader to the host PC software.
001DFE                00561 BootInfoBlock:
001DFE 0300           00562     db      low(BOOTBLOCKSIZE), high(BOOTBLOCKSIZE)
001E00 0501           00563     db      MAJOR_VERSION, MINOR_VERSION
001E02 84FF           00564     db      0xFF, 0x84             ; command mask : family id 
001E04 1D00           00565     db      low(BootloaderStart), high(BootloaderStart)
001E06 0000           00566     db      upper(BootloaderStart), 0 
001E08                00567 BootInfoBlockEnd:
                      00568 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00569 ; In:   <STX>[<0x00>]<CRCL><CRCH><ETX>
                      00570 ; Out:  <STX><BOOTBYTESL><BOOTBYTESH><VERL><VERH><STARTBOOTL><STARTBOOTH><STARTBOOTU><0x00><CRCL><CRCH><
                            ETX>
001E08                00571 BootloaderInfo:
001E08 0EFE           00572     movlw   low(BootInfoBlock)
001E0A 6EF6           00573     movwf   TBLPTRL
001E0C 0E1D           00574     movlw   high(BootInfoBlock)
001E0E 6EF7           00575     movwf   TBLPTRH
001E10 0E00           00576     movlw   upper(BootInfoBlock)
001E12 6EF8           00577     movwf   TBLPTRU
                      00578 
001E14 0E0A           00579     movlw   (BootInfoBlockEnd - BootInfoBlock)
001E16 6E0A           00580     movwf   DATA_COUNTL
001E18 6A0B           00581     clrf    DATA_COUNTH
                      00582     ;; fall through to ReadFlash code -- send Bootloader Information Block from FLASH.
                      00583 
                      00584 ; In:   <STX>[<0x01><ADDRL><ADDRH><ADDRU><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00585 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
001E1A                00586 ReadFlash:
001E1A 0009           00587     tblrd   *+                  ; read from FLASH memory into TABLAT
001E1C 50F5           00588     movf    TABLAT, w
001E1E D8A3           00589     rcall   SendEscapeByte
001E20 DFDD           00590     rcall   AddCrc
                      00591 
001E22 060A           00592     decf    DATA_COUNTL, f      ; decrement counter
001E24 0E00           00593     movlw   0
001E26 5A0B           00594     subwfb  DATA_COUNTH, f
                      00595 
001E28 500A           00596     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
001E2A 100B           00597     iorwf   DATA_COUNTH, w
001E2C E1F6           00598     bnz     ReadFlash           ; no, loop
001E2E D094           00599     bra     SendChecksum        ; yes, send end of packet
                      00600 
                      00601 ; In:   <STX>[<0x02><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><BLOCKSH>]<CRCL><CRCH><ETX>
                      00602 ; Out:  <STX>[<CRCL1><CRCH1>...<CRCLn><CRCHn>]<ETX>
001E30                00603 VerifyFlash:
001E30 0009           00604     tblrd   *+
001E32 50F5           00605     movf    TABLAT, w    
001E34 DFD3           00606     rcall   AddCrc
                      00607 
001E36 50F6           00608     movf    TBLPTRL, w          ; have we crossed into the next block?
                      00609 #if ERASE_FLASH_BLOCKSIZE > .255
                      00610     bnz     VerifyFlash
                      00611     movf    TBLPTRH, w
                      00612     andlw   high(ERASE_FLASH_BLOCKSIZE-1)
                      00613 #else
001E38 0B3F           00614     andlw   (ERASE_FLASH_BLOCKSIZE-1)    
                      00615 #endif
001E3A E1FA           00616     bnz     VerifyFlash
                      00617 
001E3C 5000           00618     movf    CRCL, w
001E3E ECB3 F00F      00619     call    SendEscapeByte
001E42 5001           00620     movf    CRCH, w
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001E44 ECB3 F00F      00621     call    SendEscapeByte
                      00622 
001E48 060A           00623     decf    DATA_COUNTL, f      ; decrement counter
001E4A 0E00           00624     movlw   0
001E4C 5A0B           00625     subwfb  DATA_COUNTH, f
                      00626 
001E4E 500A           00627     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
001E50 100B           00628     iorwf   DATA_COUNTH, w
001E52 E1EE           00629     bnz     VerifyFlash         ; no, loop
001E54 D085           00630     bra     SendETX             ; yes, send end of packet
                      00631 
                      00632 #ifdef SOFTWP
001E56 00FF           00633     reset                       ; this code -should- never be executed, but 
001E58 00FF           00634     reset                       ; just in case of errant execution or buggy
001E5A 00FF           00635     reset                       ; firmware, these reset instructions may protect
001E5C 00FF           00636     reset                       ; against accidental erases.
                      00637 #endif
                      00638 
                      00639 ; In:   <STX>[<0x03><ADDRL><ADDRH><ADDRU><0x00><PAGESL>]<CRCL><CRCH><ETX>
                      00640 ; Out:  <STX>[<0x03>]<CRCL><CRCH><ETX>
001E5E                00641 EraseFlash:
                      00642 #ifdef SOFTWP
                      00643   #define ERASE_ADDRESS_MASK  (~(ERASE_FLASH_BLOCKSIZE-1))
                      00644   #if upper(ERASE_ADDRESS_MASK) != 0xFF
                      00645     movlw   upper(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundar
                            y
                      00646     andwf   TBLPTRU, f
                      00647   #endif
                      00648   #if high(ERASE_ADDRESS_MASK) != 0xFF
                      00649     movlw   high(ERASE_ADDRESS_MASK)    ; force starting address to land on a FLASH Erase Block boundary
                      00650     andwf   TBLPTRH, f
                      00651   #endif
                      00652   #if low(ERASE_ADDRESS_MASK) != 0xFF
001E5E 0EC0           00653     movlw   low(ERASE_ADDRESS_MASK)     ; force starting address to land on a FLASH Erase Block boundary
001E60 16F6           00654     andwf   TBLPTRL, f
                      00655   #endif
                      00656 
                      00657     ; Verify Erase Address does not attempt to erase beyond the end of FLASH memory
001E62 0E00           00658     movlw   low(END_FLASH)
001E64 5CF6           00659     subwf   TBLPTRL, w
001E66 0E20           00660     movlw   high(END_FLASH)
001E68 58F7           00661     subwfb  TBLPTRH, w
001E6A 0E00           00662     movlw   upper(END_FLASH)
001E6C 58F8           00663     subwfb  TBLPTRU, w
001E6E E602           00664     bn      EraseEndFlashAddressOkay
                      00665 
001E70 6AA6           00666     clrf    EECON1              ; inhibit writes for this block
001E72 D017           00667     bra     NextEraseBlock      ; move on to next erase block
                      00668 #endif ; end #ifdef USE_SOFTBOOTWP
                      00669 
001E74                00670 EraseEndFlashAddressOkay:
                      00671 #ifdef USE_SOFTCONFIGWP
                      00672     #ifdef CONFIG_AS_FLASH
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00673     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00674     subwf   TBLPTRL, w
                      00675     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00676     subwfb  TBLPTRH, w
                      00677     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00678     subwfb  TBLPTRU, w
                      00679     bn      EraseConfigAddressOkay
                      00680 
                      00681     clrf    EECON1              ; inhibit writes for this block
                      00682     bra     NextEraseBlock      ; move on to next erase block
                      00683 
                      00684 EraseConfigAddressOkay:
                      00685     #endif ; end CONFIG_AS_FLASH
                      00686 #endif ; end USE_SOFTCONFIGWP
                      00687 
                      00688 #ifdef USE_SOFTBOOTWP
001E74 0E00           00689     movlw   low(BOOTLOADER_ADDRESS)
001E76 5CF6           00690     subwf   TBLPTRL, w
001E78 0E1D           00691     movlw   high(BOOTLOADER_ADDRESS)
001E7A 58F7           00692     subwfb  TBLPTRH, w
001E7C 0E00           00693     movlw   upper(BOOTLOADER_ADDRESS)
001E7E 58F8           00694     subwfb  TBLPTRU, w
001E80 E60D           00695     bn      EraseAddressOkay
                      00696 
001E82 0E00           00697     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001E84 5CF6           00698     subwf   TBLPTRL, w
001E86 0E20           00699     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001E88 58F7           00700     subwfb  TBLPTRH, w
001E8A 0E00           00701     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001E8C 58F8           00702     subwfb  TBLPTRU, w
001E8E E706           00703     bnn     EraseAddressOkay
                      00704 
001E90 6AA6           00705     clrf    EECON1              ; inhibit writes for this block
001E92 D007           00706     bra     NextEraseBlock      ; move on to next erase block
                      00707 
001E94 00FF           00708     reset                       ; this code -should- never be executed, but 
001E96 00FF           00709     reset                       ; just in case of errant execution or buggy
001E98 00FF           00710     reset                       ; firmware, these reset instruction may protect
001E9A 00FF           00711     reset                       ; against accidental writes.
                      00712 #endif
                      00713 
001E9C                00714 EraseAddressOkay:
                      00715 #ifdef EEADR
001E9C 0E94           00716     movlw   b'10010100'         ; setup FLASH erase
                      00717 #else
                      00718     movlw   b'00010100'         ; setup FLASH erase for J device (no EEPROM bit)
                      00719 #endif
001E9E 6EA6           00720     movwf   EECON1
                      00721 
001EA0 D881           00722     rcall   StartWrite          ; erase the page
                      00723 
001EA2                00724 NextEraseBlock:
                      00725     ; Decrement address by erase block size
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00726 #if ERASE_FLASH_BLOCKSIZE >= .256
                      00727     movlw   high(ERASE_FLASH_BLOCKSIZE)
                      00728     subwf   TBLPTRH, F
                      00729     clrf    WREG
                      00730     subwfb  TBLPTRU, F
                      00731 #else
001EA2 0E40           00732     movlw   ERASE_FLASH_BLOCKSIZE
001EA4 5EF6           00733     subwf   TBLPTRL, F
001EA6 6AE8           00734     clrf    WREG
001EA8 5AF7           00735     subwfb  TBLPTRH, F
001EAA 5AF8           00736     subwfb  TBLPTRU, F
                      00737 #endif
                      00738 
001EAC 2E0A           00739     decfsz  DATA_COUNTL, F
001EAE D7D7           00740     bra     EraseFlash    
001EB0 D04F           00741     bra     SendAcknowledge     ; All done, send acknowledgement packet
                      00742 
                      00743 #ifdef SOFTWP
001EB2 00FF           00744     reset                       ; this code -should- never be executed, but 
001EB4 00FF           00745     reset                       ; just in case of errant execution or buggy
001EB6 00FF           00746     reset                       ; firmware, these reset instructions may protect
001EB8 00FF           00747     reset                       ; against accidental writes.
                      00748 #endif
                      00749 
                      00750 ; In:   <STX>[<0x04><ADDRL><ADDRH><ADDRU><0x00><BLOCKSL><DATA>...]<CRCL><CRCH><ETX>
                      00751 ; Out:  <STX>[<0x04>]<CRCL><CRCH><ETX>
001EBA                00752 WriteFlash:
                      00753 #ifdef SOFTWP
                      00754   #define WRITE_ADDRESS_MASK (~(WRITE_FLASH_BLOCKSIZE-1))
                      00755   #if upper(WRITE_ADDRESS_MASK) != 0xFF
                      00756     movlw   upper(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundar
                            y
                      00757     andwf   TBLPTRU, f
                      00758   #endif
                      00759   #if high(WRITE_ADDRESS_MASK) != 0xFF
                      00760     movlw   high(WRITE_ADDRESS_MASK)    ; force starting address to land on a FLASH Write Block boundary
                      00761     andwf   TBLPTRH, f
                      00762   #endif
                      00763   #if low(WRITE_ADDRESS_MASK) != 0xFF
001EBA 0EF8           00764     movlw   low(WRITE_ADDRESS_MASK)     ; force starting address to land on a FLASH Write Block boundary
001EBC 16F6           00765     andwf   TBLPTRL, f
                      00766   #endif
                      00767 
                      00768     ; Verify Write Address does not attempt to write beyond the end of FLASH memory
001EBE 0E00           00769     movlw   low(END_FLASH)
001EC0 5CF6           00770     subwf   TBLPTRL, w
001EC2 0E20           00771     movlw   high(END_FLASH)
001EC4 58F7           00772     subwfb  TBLPTRH, w
001EC6 0E00           00773     movlw   upper(END_FLASH)
001EC8 58F8           00774     subwfb  TBLPTRU, w
001ECA E602           00775     bn      WriteEndFlashAddressOkay
                      00776 
001ECC 6AA6           00777     clrf    EECON1              ; inhibit writes for this block
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001ECE D016           00778     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00779 #endif ; end #ifdef SOFTWP
                      00780 
001ED0                00781 WriteEndFlashAddressOkay:
                      00782 #ifdef USE_SOFTCONFIGWP
                      00783     #ifdef CONFIG_AS_FLASH
                      00784     movlw   low(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00785     subwf   TBLPTRL, w
                      00786     movlw   high(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00787     subwfb  TBLPTRH, w
                      00788     movlw   upper(END_FLASH - ERASE_FLASH_BLOCKSIZE)
                      00789     subwfb  TBLPTRU, w
                      00790     bn      WriteConfigAddressOkay
                      00791 
                      00792     clrf    EECON1              ; inhibit writes for this block
                      00793     bra     LoadHoldingRegisters; fake the write so we can move on to real writes
                      00794 
                      00795 WriteConfigAddressOkay:
                      00796     #endif ; end CONFIG_AS_FLASH
                      00797 #endif ; end USE_SOFTCONFIGWP
                      00798 
                      00799 #ifdef USE_SOFTBOOTWP
001ED0 0E00           00800     movlw   low(BOOTLOADER_ADDRESS)
001ED2 5CF6           00801     subwf   TBLPTRL, w
001ED4 0E1D           00802     movlw   high(BOOTLOADER_ADDRESS)
001ED6 58F7           00803     subwfb  TBLPTRH, w
001ED8 0E00           00804     movlw   upper(BOOTLOADER_ADDRESS)
001EDA 58F8           00805     subwfb  TBLPTRU, w
001EDC E60D           00806     bn      WriteAddressOkay
                      00807 
001EDE 0E00           00808     movlw   low(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001EE0 5CF6           00809     subwf   TBLPTRL, w
001EE2 0E20           00810     movlw   high(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001EE4 58F7           00811     subwfb  TBLPTRH, w
001EE6 0E00           00812     movlw   upper(BOOTLOADER_ADDRESS + BOOTBLOCKSIZE)
001EE8 58F8           00813     subwfb  TBLPTRU, w
001EEA E706           00814     bnn     WriteAddressOkay
                      00815 
001EEC 6AA6           00816     clrf    EECON1                      ; inhibit writes for this block
001EEE D006           00817     bra     LoadHoldingRegisters        ; fake the write so we can move on to real writes
                      00818 
001EF0 00FF           00819     reset                       ; this code -should- never be executed, but 
001EF2 00FF           00820     reset                       ; just in case of errant execution or buggy
001EF4 00FF           00821     reset                       ; firmware, these reset instruction may protect
001EF6 00FF           00822     reset                       ; against accidental writes.
                      00823 #endif
                      00824 
001EF8                00825 WriteAddressOkay:
                      00826 #ifdef EEADR
001EF8 0E84           00827     movlw   b'10000100'         ; Setup FLASH writes
                      00828 #else
                      00829     movlw   b'00000100'         ; Setup FLASH writes for J device (no EEPROM bit)
                      00830 #endif
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001EFA 6EA6           00831     movwf   EECON1
                      00832 
001EFC                00833 LoadHoldingRegisters:
001EFC CFEE FFF5      00834     movff   POSTINC0, TABLAT    ; Load the holding registers
                      00835     pmwtpi                      ; Same as tblwt *+
                          M #ifdef TBLWT_BUG
                          M     tblwt   *
                          M     tblrd   *+
                          M #else
001F00 000D               M     tblwt   *+
                          M #endif
                      00836 
001F02 50F6           00837     movf    TBLPTRL, w          ; have we crossed into the next write block?
001F04 0B07           00838     andlw   (WRITE_FLASH_BLOCKSIZE-1)
001F06 E1FA           00839     bnz     LoadHoldingRegisters; Not finished writing holding registers, repeat
                      00840 
001F08 000A           00841     tblrd   *-                  ; Point back into the block to write data
001F0A D84C           00842     rcall   StartWrite          ; initiate a page write
001F0C 0009           00843     tblrd   *+                  ; Restore pointer for loading holding registers with next block
                      00844 
001F0E 2E0A           00845     decfsz  DATA_COUNTL, F      
001F10 D7D4           00846     bra     WriteFlash          ; Not finished writing all blocks, repeat
001F12 D01E           00847     bra     SendAcknowledge     ; all done, send ACK packet
                      00848 
                      00849 ; In:   <STX>[<0x05><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH>]<CRCL><CRCH><ETX>
                      00850 ; Out:  <STX>[<DATA>...]<CRCL><CRCH><ETX>
                      00851 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
001F14                00852 ReadEeprom:
001F14 6AA6           00853     clrf    EECON1 
001F16                00854 ReadEepromLoop:
001F16 80A6           00855     bsf     EECON1, RD          ; Read the data
001F18 50A8           00856     movf    EEDATA, w
                      00857     #ifdef EEADRH
                      00858     infsnz  EEADR, F            ; Adjust EEDATA pointer
                      00859     incf    EEADRH, F
                      00860     #else
001F1A 2AA9           00861     incf    EEADR, F            ; Adjust EEDATA pointer
                      00862     #endif
001F1C D824           00863     rcall   SendEscapeByte
001F1E DF5E           00864     rcall   AddCrc
                      00865 
                      00866     #ifdef EEADRH
                      00867     decf    DATA_COUNTL, f      ; decrement counter
                      00868     movlw   0
                      00869     subwfb  DATA_COUNTH, f
                      00870 
                      00871     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
                      00872     iorwf   DATA_COUNTH, w
                      00873     bnz     ReadEepromLoop      ; no, loop
                      00874     bra     SendChecksum        ; yes, send end of packet
                      00875     #else
001F20 2E0A           00876     decfsz  DATA_COUNTL, F
001F22 D7F9           00877     bra     ReadEepromLoop      ; Not finished then repeat
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F24 D019           00878     bra     SendChecksum
                      00879     #endif
                      00880 #endif ; end #ifdef EEADR
                      00881 
                      00882 ; In:   <STX>[<0x06><ADDRL><ADDRH><0x00><0x00><BYTESL><BYTESH><DATA>...]<CRCL><CRCH><ETX>
                      00883 ; Out:  <STX>[<0x06>]<CRCL><CRCH><ETX>
                      00884 #ifdef EEADR                ; some devices do not have EEPROM, so no need for this code
001F26                00885 WriteEeprom:
001F26 0E04           00886     movlw   b'00000100'     ; Setup for EEPROM data writes
001F28 6EA6           00887     movwf   EECON1
                      00888 
001F2A                00889 WriteEepromLoop:
001F2A CFEC FFA8      00890     movff   PREINC0, EEDATA
001F2E D83A           00891     rcall   StartWrite      
                      00892 
001F30 B2A6           00893     btfsc   EECON1, WR      ; wait for write to complete before moving to next address
001F32 D7FE           00894     bra     $-2
                      00895 
                      00896     #ifdef EEADRH
                      00897     infsnz  EEADR, F        ; Adjust EEDATA pointer
                      00898     incf    EEADRH, F
                      00899     #else
001F34 2AA9           00900     incf    EEADR, f        ; Adjust EEDATA pointer
                      00901     #endif
                      00902 
                      00903     #ifdef EEADRH
                      00904     decf    DATA_COUNTL, f      ; decrement counter
                      00905     movlw   0
                      00906     subwfb  DATA_COUNTH, f
                      00907 
                      00908     movf    DATA_COUNTL, w      ; DATA_COUNTH:DATA_COUNTH == 0?
                      00909     iorwf   DATA_COUNTH, w
                      00910     bnz     WriteEepromLoop     ; no, loop
                      00911     bra     SendAcknowledge     ; yes, send end of packet
                      00912     #else
001F36 2E0A           00913     decfsz  DATA_COUNTL, f
001F38 D7F8           00914     bra     WriteEepromLoop
001F3A D00A           00915     bra     SendAcknowledge
                      00916     #endif
                      00917 #endif ; end #ifdef EEADR
                      00918  
                      00919 ; In:   <STX>[<0x07><ADDRL><ADDRH><ADDRU><0x00><BYTES><DATA>...]<CRCL><CRCH><ETX>
                      00920 ; Out:  <STX>[<0x07>]<CRCL><CRCH><ETX>
                      00921 #ifndef CONFIG_AS_FLASH     ; J flash devices store config words in FLASH, so no need for this code
                      00922     #ifndef USE_SOFTCONFIGWP
001F3C                00923 WriteConfig:
001F3C 0EC4           00924     movlw   b'11000100'
001F3E 6EA6           00925     movwf   EECON1
001F40 0008           00926     tblrd   *               ; read existing value from config memory
                      00927 
001F42                00928 WriteConfigLoop:
001F42 50EE           00929     movf    POSTINC0, w
001F44 62F5           00930     cpfseq  TABLAT          ; is the proposed value already the same as existing value?
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F46 D82C           00931     rcall   TableWriteWREG  ; write config memory only if necessary (save time and endurance)
001F48 000B           00932     tblrd   +*              ; increment table pointer to next address and read existing value
001F4A 2E0A           00933     decfsz  DATA_COUNTL, F
001F4C D7FA           00934     bra     WriteConfigLoop ; If more data available in packet, keep looping
                      00935 
001F4E D000           00936     bra     SendAcknowledge ; Send acknowledge
                      00937     #endif ; end #ifndef USE_SOFTCONFIGWP
                      00938 #endif ; end #ifndef CONFIG_AS_FLASH
                      00939     
                      00940 ;************************************************
                      00941 
                      00942 ; ***********************************************
                      00943 ; Send an acknowledgement packet back
                      00944 ;
                      00945 ; <STX><COMMAND><CRCL><CRCH><ETX>
                      00946 
                      00947 ; Some devices only have config words as FLASH memory. Some devices don't have EEPROM.
                      00948 ; For these devices, we can save code by jumping directly to sending back an
                      00949 ; acknowledgement packet if the PC application erroneously requests them.
                      00950 #ifdef CONFIG_AS_FLASH
                      00951 WriteConfig:
                      00952 #else
                      00953   #ifdef USE_SOFTCONFIGWP
                      00954 WriteConfig:
                      00955   #endif
                      00956 #endif ; end #ifdef CONFIG_AS_FLASH
                      00957 
                      00958 #ifndef EEADR
                      00959 ReadEeprom:
                      00960 WriteEeprom:
                      00961 #endif
                      00962 
001F50                00963 SendAcknowledge:
001F50 6AA6           00964     clrf    EECON1              ; inhibit write cycles to FLASH memory
                      00965 
001F52 5005           00966     movf    COMMAND, w
001F54 D808           00967     rcall   SendEscapeByte      ; Send only the command byte (acknowledge packet)
001F56 DF42           00968     rcall   AddCrc
                      00969 
001F58                00970 SendChecksum:
001F58 5000           00971     movf    CRCL, W
001F5A D805           00972     rcall   SendEscapeByte
                      00973 
001F5C 5001           00974     movf    CRCH, W
001F5E D803           00975     rcall   SendEscapeByte
                      00976 
001F60                00977 SendETX:
001F60 0E04           00978     movlw   ETX             ; Send stop condition
001F62 D80D           00979     rcall   SendHostByte
                      00980 
001F64 D6F0           00981     bra     WaitForHostCommand
                      00982 ; *****************************************************************************
                      00983 
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00984 
                      00985 
                      00986 
                      00987 ; *****************************************************************************
                      00988 ; Write a byte to the serial port while escaping control characters with a DLE
                      00989 ; first.
001F66                00990 SendEscapeByte:
001F66 6E03           00991     movwf   TXDATA          ; Save the data
                      00992  
001F68 0A0F           00993     xorlw   STX             ; Check for a STX
001F6A E006           00994     bz      WrDLE           ; No, continue WrNext
                      00995 
001F6C 5003           00996     movf    TXDATA, W       
001F6E 0A04           00997     xorlw   ETX             ; Check for a ETX
001F70 E003           00998     bz      WrDLE           ; No, continue WrNext
                      00999 
001F72 5003           01000     movf    TXDATA, W       
001F74 0A05           01001     xorlw   DLE             ; Check for a DLE
001F76 E102           01002     bnz     WrNext          ; No, continue WrNext
                      01003 
001F78                01004 WrDLE:
001F78 0E05           01005     movlw   DLE             ; Yes, send DLE first
001F7A D801           01006     rcall   SendHostByte
                      01007 
001F7C                01008 WrNext:
001F7C 5003           01009     movf    TXDATA, W       ; Then send STX
                      01010 
001F7E                01011 SendHostByte:
001F7E 0004           01012     clrwdt
001F80 A89E           01013     btfss   UxPIR, UxTXIF      ; Write only if TXREG is ready
001F82 D7FE           01014     bra     $-2
                      01015     
001F84 6EAD           01016     movwf   UxTXREG           ; Start sending
                      01017 
001F86 0012           01018     return
                      01019 ; *****************************************************************************
                      01020 
                      01021 
                      01022 
                      01023 
                      01024 ; *****************************************************************************
001F88                01025 ReadHostByte:
001F88 B2AB           01026     btfsc   UxRCSTA, OERR       ; Reset on overun
001F8A 00FF           01027     reset
                      01028 
001F8C                01029 WaitForHostByte:
001F8C 0004           01030     clrwdt
001F8E AA9E           01031     btfss   UxPIR, UxRCIF       ; Wait for data from RS232
001F90 D7FD           01032     bra     WaitForHostByte
                      01033 
001F92 50AE           01034     movf    UxRCREG, W          ; Save the data
001F94 6E02           01035     movwf   RXDATA
                      01036  
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F96 0012           01037     return
                      01038 ; *****************************************************************************
                      01039 
001F98 00FF           01040     reset                       ; this code -should- never be executed, but 
001F9A 00FF           01041     reset                       ; just in case of errant execution or buggy
001F9C 00FF           01042     reset                       ; firmware, these instructions may protect
001F9E 6AA6           01043     clrf    EECON1              ; against accidental erase/write operations.
                      01044 
                      01045 ; *****************************************************************************
                      01046 ; Unlock and start the write or erase sequence.
001FA0                01047 TableWriteWREG:
001FA0 6EF5           01048     movwf   TABLAT
001FA2 000C           01049     tblwt   *
                      01050 
001FA4                01051 StartWrite:
001FA4 0004           01052     clrwdt
                      01053 
001FA6 0E55           01054     movlw   0x55            ; Unlock
001FA8 6EA7           01055     movwf   EECON2
001FAA 0EAA           01056     movlw   0xAA
001FAC 6EA7           01057     movwf   EECON2
001FAE 82A6           01058     bsf     EECON1, WR      ; Start the write
001FB0 0000           01059     nop
                      01060 
001FB2 0012           01061     return
                      01062 ; *****************************************************************************
                      01063 
                      01064     END
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADDRESS_H                         00000007
ADDRESS_L                         00000006
ADDRESS_U                         00000008
ADDRESS_X                         00000009
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
AddCrc                            00001DDC
AppVector                         (BootloaderStart-.4)
AppendDataBuffer                  00001D68
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

BCLIP                             00000003
BF                                00000000
BGST                              00000005
BOOTBLOCKSIZE                     (BOOTLOADERSIZE / ERASE_FLASH_BLOCKSIZE + 1) * ERASE_FLASH_BLOCKSIZE
BOOTLOADERSIZE                    .708
BOOTLOADER_ADDRESS                (END_FLASH - BOOTBLOCKSIZE)
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BootInfoBlock                     00001DFE
BootInfoBlockEnd                  00001E08
BootloadMode                      00001D08
BootloaderBreakCheck              00001D02
BootloaderInfo                    00001E08
BootloaderStart                   00001D00
C                                 00000000
C1INV                             00000004
C1N                               00000000
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C1P                               00000003
C2INV                             00000005
C2N                               00000001
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
C2P                               00000002
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMMAND                           00000005
CRCH                              00000001
CRCL                              00000000
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
CheckCommand                      00001DAC
D                                 00000005
DATA_COUNTH                       0000000B
DATA_COUNTL                       0000000A
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEVICEID                          .265
DLE                               0x05
DONE                              00000001
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

D_A                               00000005
D_NOT_A                           00000005
DigitalInput                      
DoAutoBaud                        00001D24
ECCP1AS                           00000FB6
ECCP1CON                          00000FBD
ECCP1DEL                          00000FB7
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
END_FLASH                         0x2000
END_GPR                           0x200
ERASE_ADDRESS_MASK                (~(ERASE_FLASH_BLOCKSIZE-1))
ERASE_FLASH_BLOCKSIZE             .64
ETX                               0x04
EraseAddressOkay                  00001E9C
EraseEndFlashAddressOkay          00001E74
EraseFlash                        00001E5E
FAST                              00000001
FERR                              00000002
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GotoAppVector                     00001D04
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
JUMPTABLE_BEGIN                   00001DB2
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
LoadHoldingRegisters              00001EFC
MAJOR_VERSION                     .1
MCLR                              00000003
MINOR_VERSION                     .5
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NTX                               0xFF
NextEraseBlock                    00001EA2
NoETX                             00001D60
NoSTX                             00001D5A
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
PACKET_DATA                       0000000B
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

RD16                              00000007
RE3                               00000003
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDATA                            00000002
RXDTP                             00000005
RXPIN                             7
RXPORT                            PORTC
R_NOT_W                           00000002
R_W                               00000002
ReadEeprom                        00001F14
ReadEepromLoop                    00001F16
ReadFlash                         00001E1A
ReadHostByte                      00001F88
ReceiveDataLoop                   00001D54
RetryAutoBaud                     00001D2A
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOFTWP                            
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STX                               0x0F
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SendAcknowledge                   00001F50
SendChecksum                      00001F58
SendETX                           00001F60
SendEscapeByte                    00001F66
SendHostByte                      00001F7E
StartOfLine                       00001D4C
StartWrite                        00001FA4
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXDATA                            00000003
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
TableWriteWREG                    00001FA0
UA                                00000001
UARTNUM                           1
USE_AUTOBAUD                      
USE_MAX_INTOSC                    
USE_PLL                           
USE_SOFTBOOTWP                    
UxBAUDCON                         BAUDCON
UxPIR                             PIR1
UxRCIF                            RCIF
UxRCREG                           RCREG
UxRCSTA                           RCSTA
UxSPBRG                           SPBRG
UxSPBRGH                          SPBRGH
UxTXIF                            TXIF
UxTXREG                           TXREG
UxTXSTA                           TXSTA
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

VPP                               00000003
VREFM                             00000002
VREFP                             00000003
VerifyFlash                       00001E30
VerifyPacketCRC                   00001D6E
VerifyPacketCrcLoop               00001D7A
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WRITE_ADDRESS_MASK                (~(WRITE_FLASH_BLOCKSIZE-1))
WRITE_FLASH_BLOCKSIZE             .8
WUE                               00000001
WaitForHostByte                   00001F8C
WaitForHostCommand                00001D46
WaitForRise                       00001DCC
WaitForRiseLoop                   00001DCE
WrDLE                             00001F78
WrNext                            00001F7C
WriteAddressOkay                  00001EF8
WriteConfig                       00001F3C
WriteConfigLoop                   00001F42
WriteEeprom                       00001F26
WriteEepromLoop                   00001F2A
WriteEndFlashAddressOkay          00001ED0
WriteFlash                        00001EBA
WtSR                              00001DD6
Z                                 00000002
_BBSIZ_BB1K_4L                    000000FF
_BBSIZ_BB256_4L                   000000CF
_BBSIZ_BB512_4L                   000000DF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_BOR_NOSLP_2L                     000000FD
_BOR_OFF_2L                       000000F9
_BOR_ON_2L                        000000FF
_BOR_SOFT_2L                      000000FB
_CCP2MX_RB3_3H                    000000FE
_CCP2MX_RC1_3H                    000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO_1H                      000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO1_1H                    000000F9
_OSC_INTIO2_1H                    000000F8
_OSC_LP_1H                        000000F0
_OSC_RCIO_1H                      000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_ANA_3H                    000000FF
_PBADEN_DIG_3H                    000000FD
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18LF2321                        00000001
pmwtpi                            


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM 5.73              PIC18 BOOTLOADER.ASM   5-31-2017  15:49:16         PAGE 85


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXX------------

All other memory blocks unused.

Program Memory Bytes Used:   692
Program Memory Bytes Free:  7500


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     2 suppressed

